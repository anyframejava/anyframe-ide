<chapter id="core_spring_datasource">
	<title>DataSource</title>

  	<para>
  		Refers to a service creating Connection(javax.sql.Connection) object
  		to connect to given Database.
  		Anyframe is using the following DataSource implementations as they are which implement a
  		logic to get Connection object by Connection Provider.
  	</para>
 
	<section id="core_spring_datasource_JDBCDataSource">
    	<title>JDBCDataSource Configuration</title>

    	<para>
    		<emphasis role="bold">Description copied from class: 
    			<ulink url="http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/jdbc/datasource/DriverManagerDataSource.html">DriverManagerDataSource
    			</ulink></emphasis></para>

		<para>
			Creates Database Connection by using JDBC driver.
			Returns new connection to all getConnection() call.
			In actual operation setting, the usage of JDBCDataSource is not recommended, 
			and <link linkend="core_spring_datasource_DBCPDataSource">DBCPDataSource</link> or
    		<link linkend="core_spring_datasource_C3P0DataSource">C3P0DataSource</link> are used instead.
	
    	</para>

		<informaltable>
			<tgroup cols="4">
				<colspec colnum="1" colname="col1" colwidth="2*"/>
        		<colspec colnum="2" colname="col2" colwidth="5*"/>
				<colspec colnum="3" colname="col3" colwidth="1*"/>
				<colspec colnum="4" colname="col4" colwidth="2*"/>
				<thead>
					<row>
						<entry align="center">Property Name</entry>

            			<entry align="center">Description</entry>

            			<entry align="center">Required</entry>

            			<entry align="center">Default Value</entry>
          			</row>
        		</thead>
	
				<tbody>
					<row>
	            		<entry>url</entry>
	
	            		<entry>JDBC URL to access DataBase</entry>
	
	            		<entry align="center">Y</entry>
	
	            		<entry align="center">N/A</entry>
					</row>
	
	          		<row>
	            		<entry>driverClassName</entry>
	
	            		<entry>Sets JDBC driver class name</entry>
	
	            		<entry align="center">Y</entry>
	
	            		<entry align="center">N/A</entry>
	          		</row>
	
	          		<row>
	            		<entry>username</entry>
	
	           	 		<entry>Used to access DataBase</entry>
	
	            		<entry align="center">N</entry>
	
	            		<entry align="center">N/A</entry>
	          		</row>
	
	          		<row>
	            		<entry>password</entry>
	
	            		<entry>Used to access DataBase.</entry>
	
	            		<entry align="center">N</entry>
	
	            		<entry align="center">N/A</entry>
	          		</row>
        		</tbody>
      		</tgroup>
		</informaltable>

    	<section id="core_spring_datasource_JDBCDataSource_samples">
			<title>Samples</title>

      		<para>The following is an example of JDBCDataSource configuration.
      		</para>

      		<itemizedlist>
        		<listitem>
          			<para><emphasis role="bold">Configuration </emphasis></para>

          			<para>
          				The following is a part of context-datasource.xml, configuration file of DBCDataSource.
          				In the configuration file below, JDBCDataSource Bean is defined based on HSQL DB.
          			
					</para>

                    <programlisting language="xml"><![CDATA[<bean id="dataSource" 
    class="]]><emphasis role="bold">org.springframework.jdbc.datasource.DriverManagerDataSource</emphasis><![CDATA[">
    <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
    <property name="url" value="jdbc:hsqldb:file:/./db/sampledb" />
    <property name="username" value="sa" />
</bean>]]></programlisting>
        		</listitem>
      		</itemizedlist>
    	</section>
  </section>

  <section id="core_spring_datasource_DBCPDataSource">
	<title>DBCPDataSource Configuration</title>

    <para>
    	Another implementation which creates Database Connection by using JDBC driver.
    	Database Connection Pool of Jakarta named <ulink
    	url="http://commons.apache.org/dbcp/">Commons DBCP</ulink>.
    	This can be checked through all configuration parameter through <ulink
    	url="http://commons.apache.org/dbcp/configuration.html">DBCP documentation</ulink>.
    
    </para>

    <informaltable>
 		<tgroup cols="4">
			<colspec colnum="1" colname="col1" colwidth="3*"/>
			<colspec colnum="2" colname="col2" colwidth="5*"/>
			<colspec colnum="3" colname="col3" colwidth="1*"/>
			<colspec colnum="4" colname="col4" colwidth="2*"/>
        	<thead>
	          	<row>
		            <entry align="center">Property Name</entry>
		
		            <entry align="center">Description</entry>
		
		            <entry align="center">Required</entry>
		
		            <entry align="center">Default Value</entry>
	          </row>
       	 	</thead>

			<tbody>
	          <row>
	            <entry>driverClassName</entry>
	
	            <entry>Sets class name of jdbc driver.</entry>
	
	            <entry align="center">Y</entry>
	
	            <entry align="center">N/A</entry>
	          </row>
	
	          <row>
				<entry>url</entry>
	
	            <entry>Sets DataBase url.</entry>
	
	            <entry align="center">Y</entry>
	
	            <entry align="center">N/A</entry>
	          </row>
	
	          <row>
	            <entry>username</entry>
	
	            <entry>Sets username to use when accessing DataBase.</entry>
	
	            <entry align="center">N</entry>
	
	            <entry align="center">N/A</entry>
	          </row>
	
	          <row>
	            <entry>password</entry>
	
	            <entry>Sets password to use when accessing DataBase.</entry>
	
	            <entry align="center">N</entry>
	
	            <entry align="center">N/A</entry>
	          </row>
	
	          <row>
	            <entry>maxActive</entry>
	
	            <entry>Sets the maximum number of active connection that can be assigned simultaneously.</entry>
	
	            <entry align="center">N</entry>
	
	            <entry align="center">8</entry>
	          </row>
	
	          <row>
	            <entry>maxIdle</entry>
	
	            <entry>Sets the maximum number of idle connection to leave in pool.</entry>
	
	            <entry align="center">N</entry>
	
	            <entry align="center">8</entry>
	          </row>
	
	          <row>
	            <entry>maxWait</entry>
	
	            <entry>Sets the maximum waiting time when all connections are in use.</entry>
	
	            <entry align="center">N</entry>
	
	            <entry align="center">indefinitely</entry>
	          </row>
	
	          <row>
	            <entry>defaultAutoCommit</entry>
	
	            <entry>Sets whether or not to set auto-commit for connection returned from this datasource.</entry>
	
	            <entry align="center">N</entry>
	
	            <entry align="center">true</entry>
	          </row>
	
	          <row>
	            <entry>defaultReadOnly</entry>
	
	            <entry>Assigns read-only property to connection created by Connection Pool.</entry>
	
	            <entry align="center">N</entry>
	
	            <entry align="center">driver default</entry>
	          </row>
	
	          <row>
	            <entry>defaultTransactionIsolation</entry>
	
	            <entry>Assigns transaction isolation property to returned connection.</entry>
	
	            <entry align="center">N</entry>
	
	            <entry align="center">driver default</entry>
	          </row>
	
	          <row>
	            <entry>defaultCatalog</entry>
	
	            <entry>Sets catalog of Connection. </entry>
	
	            <entry align="center">N</entry>
	
	            <entry align="center">N/A</entry>
	          </row>
	
	          <row>
	            <entry>minIdle</entry>
	
	            <entry>Sets the minimum number of idle connection of Connection pool.</entry>
	
	            <entry align="center">N</entry>
	
	            <entry align="center">0</entry>
	          </row>
	
	          <row>
	            <entry>initialSize</entry>
	
	            <entry>Sets the initial connection size to be created at Connection pool.</entry>
	
	            <entry align="center">N</entry>
	
	            <entry align="center">0</entry>
	          </row>
	
	          <row>
	            <entry>testOnBorrow</entry>
	
	            <entry>
	            	Decides whether or not to check the validation of the object before getting it from Connection pool.
	            	'true' value causes no problems, but validationQuery property must be defined as 'non-null string'.
	            
	           	</entry>
	
	            <entry align="center">N</entry>
	
	            <entry align="center">true</entry>
	          </row>
	
	          <row>
	            <entry>testOnReturn</entry>
	
	            <entry>
	            	Decides whether or not to check the validation of the object before returning the object.
	            	'true' value has no impact, but validationQuery property must be defined as 'non-null string'.
	            	
	            </entry>
	
	            <entry align="center">N</entry>
	
	            <entry align="center">false</entry>
	          </row>
	
	          <row>
	            <entry>testWhileIdle</entry>
	
	            <entry>
	            	Sets whether or not idle object evictor will check the validation of connection.
	            	'true' value has no impact, but validationQuery property must be defined as 'non-null string'.
	            
	            </entry>
	
	            <entry align="center">N</entry>
	
	            <entry align="center">false</entry>
	          </row>
	
	          <row>
	            <entry>validationQuery</entry>
	
	            <entry>Sets validationQuery.</entry>
	
	            <entry align="center">N</entry>
	
	            <entry align="center">N/A</entry>
	          </row>
	
	          <row>
	            <entry>loginTimeout</entry>
	
	            <entry>
	            	Sets login timeout(in seconds) for connecting to Database.
	            	Initializes connection pool by calling createDataSource().
	            	</entry>
	
	            <entry align="center">N</entry>
	
	            <entry align="center">N/A</entry>
	          </row>
			</tbody>
	      </tgroup>
	    </informaltable>

    	<section id="core_spring_datasource_DBCPDataSource_samples">
      		<title>Samples</title>

      		<para>The following is an example of configuration of DBCPDataSource.</para>

      		<itemizedlist>
        		<listitem>
          			<para><emphasis role="bold">Configuration </emphasis></para>

          			<para>
          				The following is a part of  context-datasource.xml , configuration file of DBCPDataSource.
          				The following configuration file defines DBCPDataSource Bean based on HSQL DB.
          				
                        <programlisting language="xml"><![CDATA[<bean id="dataSource" 
    class="]]><emphasis role="bold">org.apache.commons.dbcp.BasicDataSource</emphasis><![CDATA[" destroy-method="close">
    <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
    <property name="url" value="jdbc:hsqldb:file:/./db/sampledb"/>
    <property name="username" value="sa"/>
    <property name="maxActive" value="100"/>
    <property name="maxIdle" value="30"/>
    <property name="maxWait" value="1000"/>
    <property name="defaultAutoCommit" value="true"/>
    <property name="removeAbandoned" value="true"/>
    <property name="removeAbandonedTimeout" value="60"/>
    <property name="logAbandoned" value="true"/>		
</bean>]]></programlisting></para>
        		</listitem>

        		<listitem>
          			<para><emphasis role="bold">Test case</emphasis></para>

          			<para>
          				Example code is included in <link linkend="core_spring_datasource_test">Test Case</link>.</para>
        		</listitem>
      		</itemizedlist>
    	</section>
  	</section>

  	<section id="core_spring_datasource_C3P0DataSource">
    	<title>C3P0DataSource Configuration</title>

    	<para>
    		Another implementation which creates Database Connection by using JDBC driver.
    		For details on C3P0 Library,
    		refer to <ulink url="http://www.mchange.com/projects/c3p0/index.html#c3p0-config.xml">C3P0 Configuration</ulink>.
    	
    	</para>

    	<section id="founion_spring_datasource_C3P0DataSource_samples">
      		<title>Samples</title>

      		<para>The following is an example of configuration of C3P0DataSource.</para>

      		<itemizedlist>
        		<listitem>
          			<para><emphasis role="bold">Configuration</emphasis></para>

          			<para>
          				The following is a part of context-datasource.xml, configuration file of C3P0DataSource.
          				The following configuration file defines C3P0DataSource Bean based on HSQL DB.
          			
                        <programlisting language="xml"><![CDATA[<bean id="dataSource" class="]]><emphasis role="bold">com.mchange.v2.c3p0.ComboPooledDataSource</emphasis><![CDATA[" 
    destroy-method="close">
    <property name="driverClass" value="org.hsqldb.jdbcDriver"/>
    <property name="jdbcUrl" value="jdbc:hsqldb:file:/./db/sampledb"/>
    <property name="user" value="sa"/>
    <property name="minPoolSize" value="5"/>
    <property name="acquireIncrement" value="5"/>
    <property name="maxPoolSize" value="15"/>
</bean>]]></programlisting>
					</para>
        		</listitem>
      		</itemizedlist>
    	</section>
	</section>

	<section id="core_spring_datasource_JNDIDataSource">
		<title>JNDIDataSource Configuration</title>
	
	    <para>
	    	JNDIDataSource creates Database Connection by using JNDI Lookup.
	    	JNDIDataSource gets ataSource mostly from JNDI tree provided in Enterprise application server.
	    	
	    </para>
	
	    <para>
	    	<emphasis role="bold">Description copied from class: 
	    	<ulink url="http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/jndi/JndiObjectFactoryBean.html">JndiObjectFactoryBean
	    	</ulink></emphasis></para>
	    <para>
	    	JNDIDataSource can generally register and use singleton factory(e.g.JNDI-bound DataSource) of application context,
	    	and can refer to necessary application service as a bean.
	    
	    </para>

	    <para>
	    	Basically searches JNDI cached at startup.
	    	This can be customized through  "lookupOnStartup" and "cache" property and can use JndiObjectTargetSource.
	    	If actual JNDI object type is not defined in advance, definition of proxyInterface is needed.
	   
		</para>

    	<informaltable>
      		<tgroup cols="4">
       			<colspec colnum="1" colname="col1" colwidth="2*"/>
        		<colspec colnum="2" colname="col2" colwidth="5*"/>
        		<colspec colnum="3" colname="col3" colwidth="1*"/>
        		<colspec colnum="4" colname="col4" colwidth="2*"/>
        		<thead>
          			<row>
						<entry align="center">Property Name</entry>

			            <entry align="center">Description</entry>
			
			            <entry align="center">Required</entry>
			
			            <entry align="center">Default Value</entry>
					</row>
				</thead>

        		<tbody>
          			<row>
            			<entry>jndiTemplate</entry>

            			<entry>
            				Sets JNDI template for JNDI search.
            				Can set JNDI environment as "jndiEnvironment".
            			</entry>

            			<entry align="center">N</entry>

            			<entry align="center">N/A</entry>
          			</row>

          			<row>
            			<entry>jndiEnvironment</entry>

            			<entry>
            				Sets JNDI environment for JNDI search. Creates JndiTemplate provided in configuration.
            			</entry>

            			<entry align="center">N</entry>

            			<entry align="center">N/A</entry>
          			</row>

          			<row>
            			<entry>resourceRef</entry>

            			<entry>
            				Sets whether it is possible to search at JavaEE container.
            				If prefix is "java:comp/env/", addition is needed as JNDI name is not included.
            				Default value is  "false".
            				Note. Cannot be applied if scheme is not given with  "java:",etc.
            			</entry>

            			<entry align="center">N</entry>

            			<entry align="center">false</entry>
          			</row>

          			<row>
            			<entry>expectedType</entry>

            			<entry>Assign the type of JNDI object. </entry>

            			<entry align="center">N</entry>

            			<entry align="center">N/A</entry>
          			</row>

          			<row>
            			<entry>jndiName</entry>

            			<entry>
            				Sets JNDI name for search.
            				If  resourceRef is set as 'true' and does not start with "java:comp/env/", 
            				this prefix must be added.
            			</entry>

            			<entry align="center">Y</entry>

            			<entry align="center">N/A</entry>
          			</row>

          			<row>
            			<entry>proxyInterface</entry>

            			<entry>
            				Sets JNDI name for search.
            				If  resourceRef is set as 'true' and does not start with "java:comp/env/", 
            				this prefix must be added.
            			</entry>

            			<entry align="center">N</entry>

            			<entry align="center">N/A</entry>
          			</row>

          			<row>
            			<entry>lookupOnStartup</entry>

            			<entry>
            				Sets whether to search JNDI object at startup.
            				In lazy lookup, definition of proxy
            				interface is needed.
            			
            			</entry>

            			<entry align="center">N</entry>

            			<entry align="center">true</entry>
          			</row>

         	 		<row>
            			<entry>cache</entry>

            			<entry>Sets whether to cache JNDI object.</entry>

            			<entry align="center">N</entry>

            			<entry align="center">true</entry>
          			</row>

          			<row>
            			<entry>defaultObject</entry>

            			<entry>
            				Sets default object in the case of failure of JNDI lookup.
            				This can be arbitrary bean reference or literal value.
            				Note. Can be supported only at lookup at startup.
            			
            			</entry>

            			<entry align="center">N</entry>

            			<entry align="center">none</entry>
          			</row>
        		</tbody>
      		</tgroup>
    	</informaltable>

		<section id="core_spring_datasource_JNDIDataSource_samples">
      		<title>Samples</title>

      		<para>
      			The following is an example of configuration of JNDIDataSource.
      			This defines the property of JNDI Server to "jnditemplate" Bean
      			and refers to "jnditemplate" Bean at "dataSource" Bean and get Connection object.
      			
      		</para>

      		<itemizedlist>
        		<listitem>
          			<para><emphasis role="bold">Configuration </emphasis></para>

                    <programlisting language="xml"><![CDATA[<bean id="dataSource" class="]]><emphasis role="bold">org.springframework.jndi.JndiObjectFactoryBean</emphasis><![CDATA[">
    <property name="jndiName" value="AnyframeDS"/>
    <property]]> <emphasis role="bold"><![CDATA[name="jndiTemplate" ref="jnditemplate"/>]]></emphasis>
<![CDATA[</bean>

<bean id="jnditemplate" class="]]><emphasis role="bold">org.springframework.jndi.JndiTemplate</emphasis>"<![CDATA[>
    <property name="environment">
       <props>
          <prop key="java.naming.factory.initial">
               weblogic.jndi.WLInitialContextFactory
          </prop>
          <prop key="java.naming.provider.url">
               t3://server.ip:7001
          </prop>			
       </props>
    </property>
</bean>]]></programlisting>
        		</listitem>
			</itemizedlist>
		</section>
  
		<section id="core_spring_datasource_JNDIDataSource_jee schema">
			<title>Using JNDIDataSource through jee schema</title>

      		<para>
      			From Spring 2.0, simple definition is supported for JNDI object lookup through jee Namespace tag.
      			The following is JNDIDataSource setting using jee:jndi-lookup.
      		
      		</para>

      		<itemizedlist>
				<listitem>
          			<para><emphasis role="bold">Configuration </emphasis></para>

                    <programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    ]]><emphasis role="bold">xmlns:jee="http://www.springframework.org/schema/jee"</emphasis><![CDATA[
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    ]]><emphasis role="bold">http://www.springframework.org/schema/jee 
        http://www.springframework.org/schema/jee/spring-jee-3.1.xsd</emphasis><![CDATA[">

    <jee:jndi-lookup id="dataSource" jndi-name="AnyframeDS" resource-ref="true">
        <jee:environment>
          java.naming.factory.initial=weblogic.jndi.WLInitialContextFactory
          java.naming.provider.url=t3://server.ip:7001
        </jee:environment>
    </jee:jndi-lookup>
</beans>]]></programlisting>
				</listitem>
 			</itemizedlist>
      		<para>
	      		Compared with definition by using JndiObjectFactoryBean and JndiTemplate, using jee tag significantly simplifies definition, 
	      		hence recommended. For details on jee schema,
	      		refer to <ulink url="http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/xsd-config.html">here</ulink>.
	      	
      		</para>
		</section>  
	</section>

  	<section id="core_spring_datasource_test">
    	<title>Test Case</title>

    	<para>
    		The following is a part of  Main.java code, which gets connection from DataSource
    		based on the above-mentioned configuration file.
    	 
            <programlisting language="java">public void getConnection() throws Exception {
    // 1. lookup dataSource
    DataSource datasource = (DataSource) context.getBean("dataSource");
    // 2. try to get a connection from dbcp connection pool
    Connection conn = datasource.getConnection();
    System.out.println("Connection is " + conn + "");
}</programlisting></para>
	</section>
	
	<section id="core_spring_datasource_resources">
		<title>Resources</title>
		<para>
			<itemizedlist>
				<listitem>
					<para>Download</para>
					<para>
						Download hsqldb.zip file which contains test DB and anyframe-sample-datasource.zip file which contains sample code
						and then extract them in the following.
						Then, execute start.cmd (or start.sh) file in hsqldb folder and start test DB.
					
						<itemizedlist>
							<listitem>
								<para>Maven-based run</para>
								<para>
									After moving to extracted directory in the command window,
									execute 'mvn compile exec:java -Dexec.mainClass=...' command and check the result.
									Refer to JavaDoc of Main class in each Eclipse project.
									
								</para>
							</listitem>
							<listitem>
								<para>Eclipse-based run</para>
								<para>
									After importing extracted directory at Eclipse,
									select Main.Java under anyframe/sample/datasource of src/main/java
									and click mouth right button, and then click Run As > Java Application on context menu.
									Then, check the execution result.
							
								</para>
							</listitem>									
						</itemizedlist>
					</para>
					<table>
						<title>Download List</title>
						<tgroup cols="2">
							<colspec colnum="1" colname="col1" colwidth="4*"/>
							<colspec colnum="2" colname="col2" colwidth="6*"/>
							<thead>
								<row>
									<entry align="center">Name</entry>
									<entry align="center">Download</entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry align="center">hsqldb.zip</entry>
									<entry align="center"><ulink url="http://dev.anyframejava.org/docs.en/anyframe/plugin/essential/core/1.0.1/reference/sample/hsqldb.zip">Download</ulink></entry>
								</row>										
								<row>
									<entry align="center">anyframe-sample-datasource.zip</entry>
									<entry align="center"><ulink url="http://dev.anyframejava.org/docs.en/anyframe/plugin/essential/core/1.0.1/reference/sample/anyframe-sample-datasource.zip">Download</ulink></entry>
								</row>
							</tbody>
						</tgroup>
					</table> 
				</listitem>
				<listitem>
					<para>Reference</para>
					<itemizedlist>
						<listitem>
							<para><ulink 
								url="http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/jdbc/datasource/DriverManagerDataSource.html">
								JDBCDataSource - DriverManagerDataSource</ulink>
							</para>
						</listitem>
						<listitem>
							<para><ulink 
								url="http://commons.apache.org/dbcp/configuration.html">DBCP Configuration</ulink>
							</para>
						</listitem>
						<listitem>
							<para><ulink 
								url="http://www.mchange.com/projects/c3p0/index.html#c3p0-config.xml">C3P0 Configuration</ulink>
							</para>
						</listitem>
						<listitem>
							<para><ulink 
								url="http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/jndi/JndiObjectFactoryBean.html">
								JNDIDataSource - JndiObjectFactoryBean</ulink>
							</para>
						</listitem>
						<listitem>
							<para><ulink 
								url="http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/xsd-config.html">
								JNDIDataSource - jee schema</ulink>
							</para>
						</listitem>
					</itemizedlist>
				</listitem>
			</itemizedlist>
		</para>
	</section>
</chapter>
