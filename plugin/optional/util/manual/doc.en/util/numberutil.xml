<chapter id="util_numberutil">
	<title> NumberUtil</title>
	<para>This utility provides functions such as calculation, search, conversion and validity check of numbers.</para>
	<para>The following is explanation of the methods of NumberUtil.</para>
	<informaltable>
		<tgroup cols="3">
			<colspec colnum="1" colname="col1" colwidth="2*" />
			<colspec colnum="2" colname="col2" colwidth="4*" />
			<colspec colnum="3" colname="col3" colwidth="4*" />
			<thead>
				<row>
					<entry align="center">Method</entry>
					<entry align="center">Description</entry>
					<entry align="center">Example</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry><emphasis role="bold">getRandomNumber</emphasis>(Class&lt;T&gt; targetClass)</entry>
					<entry>Get a random number</entry>
					<entry>NumberUtil.getRandomNumber(Integer.class)</entry>
				</row>
				<row>
					<entry><emphasis role="bold">getRandomNumber</emphasis>(Class&lt;T&gt; targetClass, int fixedLength)</entry>
					<entry>Get random numbers as long as designated</entry>
					<entry>NumberUtil.getRandomNumber(Integer.class, 10)</entry>
				</row>
				<row>
					<entry><emphasis role="bold">getRandomNumber</emphasis>(Class&lt;T&gt; targetClass, T min, T max)</entry>
					<entry>Get a random number between the minimum and the maximum value</entry>
					<entry>NumberUtil.getRandomNumber(Integer.class, 10, 100)</entry>
				</row>
				<row>
					<entry><emphasis role="bold">getRandomNumber</emphasis>(Class&lt;T&gt; targetClass, boolean sign)</entry>
					<entry>Get a random number - can be a negative number</entry>
					<entry>NumberUtil.getRandomNumber(Integer.class, false)</entry>
				</row>
				<row>
					<entry><emphasis role="bold">hasNumber</emphasis>(String str) </entry>
					<entry>Check whether the input string has a number</entry>
					<entry>NumberUtil.hasNumber("str1ing")=true</entry>
				</row>
				<row>
					<entry><emphasis role="bold">integer2string</emphasis>(int intValue)</entry>
					<entry>Convert an integer type number to a string</entry>
					<entry>NumberUtil.integer2string(150)="150"</entry>
				</row>
				<row>
					<entry><emphasis role="bold">string2integer</emphasis>(String str)</entry>
					<entry>Convert a string to an integer type number</entry>
					<entry>NumberUtil.string2integer("150")=150</entry>
				</row>
				<row>
					<entry><emphasis role="bold">formatNumberByLocale</emphasis>(int intValue, Locale locale)</entry>
					<entry>Bring the currency sign according to a specific locale</entry>
					<entry>NumberUtil.formatNumberByLocale(3527900, Locale.KOREA)=ï¿¦3,527,900</entry>
				</row>
				<row>
					<entry><emphasis role="bold">formatNumber</emphasis>(int intValue, String format)</entry>
					<entry>Return the string according to the format input by the user</entry>
					<entry>NumberUtil.formatNumberByPoint(10231023123.1213, 1)=10,231,023,123.1</entry>
				</row>
				<row>
					<entry><emphasis role="bold">nullToZero</emphasis>(BigDecimal bgint)</entry>
					<entry>Convert to "" if the input number is null</entry>
					<entry>NumberUtil.nullToZero(null)=""</entry>
				</row>
				<row>
					<entry><emphasis role="bold">isNumber</emphasis>(String str)</entry>
					<entry>Check whether the input string is a number</entry>
					<entry>NumberUtil.isNumber("12312312")=true</entry>
				</row>
				<row>
					<entry><emphasis role="bold">replaceNumber</emphasis>(double source, int target, int replacement)</entry>
					<entry>Find the target number from the input number and convert it to a replacement number</entry>
					<entry>NumberUtil.replaceNumber(123456.2, 234, 567)=156756.2</entry>
				</row>
				<row>
					<entry><emphasis role="bold">checkNumberType</emphasis>(String str, String check)</entry>
					<entry>Receive the value of the input number whether it is a positive, negative, whole or real number and check whether it is right or wrong</entry>
					<entry>NumberUtil.checkNumberType("+1234", "positive")=true</entry>
				</row>
			</tbody>
		</tgroup>
	</informaltable>
</chapter>