	<chapter id="stomp_configuration">
		<title>Configuration</title>
		<para>
			Spring Framework 4.0 버전부터 Java EE 7 의 핵심기능인 WebSocket과 SockJS를 사용한 메시지 전송 프로토콜인 STOMP 기능을 지원한다.
			STOMP 기능을 사용하기 위해서는 다음과 같은 환경이 제공되어야 한다.			
		</para>
		<section id="stomp_configuration_envirenment">
			<title>사용환경</title>
			<itemizedlist>
				<listitem>
					<para>JVM : Java 7+</para>
				</listitem>
				<listitem>
					<para>Servlet Container : Apache Tomcat 7.0.47+, Eclipse Jetty 9.0+, GlassFish 4.0+</para>
				</listitem>
			</itemizedlist>
		</section>
		<section id="stomp_configuration_protocol">
			<title>Protocol</title>
			<itemizedlist>
				<listitem>
					<para>WebSocket : ws://, wss://</para>
				</listitem>
				<listitem>
					<para>SockJS : http://, https://</para>
				</listitem>
			</itemizedlist>
		</section>
		<section id="stomp_configuration_plugin">
			<title>Anyframe Plugin Config</title>
			<itemizedlist>
				<listitem>
					<para>pom.xml</para>
					<para>
						Anyframe 기반으로 프로젝트를 생성하고 spring-websocket/spring-messaging 및 Java EE API 라이브러리와 JSON 처리 시 사용된 Jackson 라이브러리를 추가한다.
					</para>
					<programlisting language="xml"><![CDATA[<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-websocket</artifactId>
    <version>${spring.version}</version>
</dependency>
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-messaging</artifactId>
    <version>${spring.version}</version>
</dependency>
<dependency>
    <groupId>javax</groupId>
    <artifactId>javaee-web-api</artifactId>
    <version>7.0</version>
    <scope>provided</scope>
</dependency>
<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-databind</artifactId>
    <version>2.2.3</version>
</dependency>]]></programlisting>
				</listitem>
				<listitem>
					<para>Xml Config</para>
					<para>
						Spring context의 namespace에 spring-websocket을 선언하고 websocket message-broker를 등록하여 메시지 처리를 위한 공간을 확보하며, stomp의 enpoint를 등록하여 handshake URL을 매핑시킨다.
					</para>
					<para>
						아래 등록으로 클라이언트와 서버 간의 websocket 연결 및 message-broker를 설정한다.
					</para>
					<programlisting language="xml"><![CDATA[<beans xmlns:websocket=http://www.springframework.org/schema/websocket
xsi:schemaLocation="http://www.springframework.org/schema/websocket
http://www.springframework.org/schema/websocket/spring-websocket-4.0.xsd">

<websocket:message-broker application-destination-prefix="/app" >
	<websocket:stomp-endpoint path="/getMovieList" />
	<websocket:simple-broker prefix="/topic"/>
</websocket:message-broker>
]]></programlisting>
				</listitem>
				<listitem>
					<para>Java Config</para>
					<para>
						WebMvcConfigurerAdapter를 확장하여 servlet handler 및 Web MVC를 활성화 한다. (Servlet 3.0+ no web.xml)
					</para>
					<programlisting language="java"><![CDATA[@Configuration
@EnableWebMvc
public class WebConfig extends WebMvcConfigurerAdapter {

@Override
public void configureDefaultServletHandling(
	DefaultServletHandlerConfigurer configurer) {
		configurer.enable();
	}
}]]></programlisting>
					<para>
						WebSocketMessageBrokerConfigurer 인터페이스를 구현하여 WebSocket의 handshake URL을 매핑시켜 주고 Message Broker의 destination을 지정한다.
					</para>
					<programlisting language="java"><![CDATA[@Configuration
@ComponentScan(
	basePackages="com.anyframe.sample.websocket",
	excludeFilters = @ComponentScan.Filter(
	type= FilterType.ANNOTATION, value = Configuration.class)
)

@EnableWebSocketMessageBroker
public class WebSocketConfig implements WebSocketMessageBrokerConfigurer {
    @Override
    public void registerStompEndpoints(StompEndpointRegistry registry) {
        registry.addEndpoint("/getMovieList");
    }

@Override
public void configureMessageBroker(MessageBrokerRegistry registry) {
	registry.enableSimpleBroker("/topic/");
	registry.setApplicationDestinationPrefixes("/app");
}
}
]]></programlisting>
				</listitem>
				<listitem>
					<para>Annotation 목록</para>
					<informaltable>
						<caption>Available caching SpEL evaluation context</caption>
						<tgroup cols="4">
							<colspec colnum="1" colname="col1" colwidth="3*" />
							<colspec colnum="2" colname="col2" colwidth="7*" />

							<thead>
								<row>
									<entry align="center">annotation</entry>
									<entry align="center">Description</entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry align="center">@Configuration</entry>
									<entry>Java Configuration 설정</entry>
								</row>
								<row>
									<entry align="center">@EnableWebMvc</entry>
									<entry>Spring MVC 사용 가능</entry>
								</row>
								<row>
									<entry align="center">@EnableWebSocket</entry>
									<entry>WebSocket 사용 가능</entry>
								</row>
							</tbody>
						</tgroup>
					</informaltable>
				</listitem>
			</itemizedlist>
		</section>
	</chapter>