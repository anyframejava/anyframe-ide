<chapter id="cxf_overview">
	<title>Overview</title>
	<para>
		REST에 대한 자세한 내용은 <ulink url="http://dev.anyframejava.org/docs/anyframe/plugin/optional/springrest/1.1.1-SNAPSHOT/reference/htmlsingle/springrest.html">Anyframe Spring REST Plugin 매뉴얼</ulink>을 참고하도록 한다. 
		여기서는 REST에 대해 간단히 소개만 하도록 하고 JAX-RS 기반으로 RESTful 서비스를 구현하는 방법에 대해서 설명하고 있다.
	</para>
	<para>
		 Representational state transfer (REST)는 World Wide Web처럼 분산 하이퍼미디어 시스템을 위한 소프트웨어 아키텍처 스타일이다. 
		 요즈음 웹 서비스를 논할 때마다, 화제가 되는 REST는 Roy T Fielding이 제창한, 네트워크 기반 어플리케이션을 위한 아키텍쳐 *스타일*로 표준이나 스펙이 아님에 유의한다.
		Representational state transfer은 마치 리소스(Resource)가 요청(Request)에 따라 상태가 변화하는 것처럼 동작한다는 의미에서 작성된 용어이다. 
		RESTful하다는 의미는 REST의 원칙을 따른다는 뜻이며, RESTful Web Service는 RESTful 아키텍처 스타일을 사용하여 작성한 서비스이다. 
		RESTful 방식의 웹 서비스 작성은 SOAP 프로토콜을 기반으로 하여 인터넷에서 서비스를 배포하는 방법의 대안으로 주목받고 있다. 
		SOAP 기반 웹서비스에 비해 가벼울 뿐 아니라 직접 HTTP를 통해 데이터를 보낼 수 있기 때문이다.
	</para>
	<para>
		<emphasis role="bold">REST(XML over HTTP) 특징 </emphasis>
		을 살펴보면 다음과 같다.
	</para>
	<itemizedlist>
		<listitem>
			<para>
				<emphasis role="bold">HTTP와 XML 이용 </emphasis>
			</para>
			<para>HTTP와 XML을 이용하여 데이터를 주고 받는 웹 서비스를 이용한다.</para>
		</listitem>
		<listitem>
			<para>
				<emphasis role="bold">소프트웨어 아키텍처 스타일 </emphasis>
			</para>
			<para>
				표준 기술이 아닌, 소프트웨어 아키텍처 스타일이다. 아키텍처 스타일은 아키텍처적인 제한 및 제약 조건을 정의해놓은
				집합이다. HTTP와 같은 기존의 기술을 이용하여 잘 설계된 분산 웹 어플리케이션을 만들수 있도록 하는 설계 가이드에
				해당한다.
		      		</para>
		</listitem>
		<listitem>
			<para>
				<emphasis role="bold">WWW(웹), Open API </emphasis>
			</para>
			<para>
				적용 예로 WWW(웹), Open API(ex. Google, Microsoft, Amazone, eBay, Yahoo등)가
				있다. 더 자세한 내용은
				REST 적용 예 를 참고한다.
				     </para>
		</listitem>
	</itemizedlist>

	<para>
		다음은 SOAP을 이용한 웹 서비스와 REST 방식의 웹 서비스를 비교한 그림(예제)이다. 그림에서와 같이
		"http://***/movieservice/movies/001" 형태의 URL을 요청한 경우, 그 결과 데이터는 XML
		형식으로 반환된다. 
		<mediaobject>
			<imageobject>
				<imagedata align="center" fileref="../image/cxf-jaxrs/webservices/restful.jpg" />
			</imageobject>
			<textobject>
				<phrase>SOAP을 이용한 웹 서비스와 REST 방식의 웹 서비스를 비교한 그림으로써, SOAP을 이용한 웹서비스의 경우에는 SOAP Message를 주고받는 형태로 동작하며, 
				Restful 웹서비스의 경우에는 "http://***/movieservice/movies/001" 형태의 URL 요청에 대해 XML 형태의 결과가 전송되는 형태로 동작함을 표현하고 있다.</phrase>
			</textobject>
		</mediaobject>
	</para>
	<para>
		<emphasis role="bold"> Apache CXF을 이용하여 RESTful 서비스를 구현하는 방법
		</emphasis>
		에는 다음과 같이 3가지 방법이 있다. 이중 Anyframe에서는 표준 API인 JAX-RS (JSR-311)를 사용하는 JAX-RS Frontend 모델을 채택하여 사용하도록 권고하고 있으므로 
		HTTP Binding, JAX-WS Provider/Dispatch API를 사용하여 RESTful 서비스를 구현하는 방법에 관한 상세한 내용은 매뉴얼에서 언급하고 있지 않다. 
	</para>

	<itemizedlist>
		<listitem>
			<para>
				<emphasis role="bold">JAX-RS Frontend</emphasis>
			</para>
			<para>
				JAX-RS(JSR-311) Spec. 을 이용하여 RESTful 서비스를 구현하는데, Apache CXF에서
				Spec.에 대한 구현체를 제공하여 표준 방식으로 RESTful 서비스를 작성할 수 있게 한다. JAX-RS에서 제공하는
				Annotation 설정을 이용한다.
		      		</para>
		</listitem>
		<listitem>
			<para>
				<emphasis role="bold">HTTP Binding </emphasis>
			</para>
			<para>
				표준 방식이 아닌 방법으로 가장 쉽고 용이한 방식으로 RESTful 서비스를 작성할 수 있게 한다. JRA(Java
				REST Annotation) 설정 또는 Naming Convention 기반의 매핑 방식을 이용한다.
		      		</para>
		</listitem>

		<listitem>
			<para>
				<emphasis role="bold">JAX-WS Provider/Dispatch API</emphasis>
			</para>
			<para>간단한 RESTful 서비스 작성을 지원한다. 표준 API를 사용하나 HTTP Binding 방식에 비해 유연한
				구조가 아니다.</para>
		</listitem>
	</itemizedlist>
	<para>REST 적용 예는 아래와 같다.</para>
	<itemizedlist>
		<listitem>
			<para>WWW(웹)</para>
			<para>REST 적용 예시로 가장 많이 사용되는 것이 바로 WWW(웹)이다.</para>
			<informaltable>
				<caption>WWW(웹) 특징</caption>
				<tgroup cols="1">
					<thead>
						<row>
							<entry align="center">설명</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>상태를 유지하지 않는 클라이언트/서버 구조를 가진다.</entry>
						</row>
						<row>
							<entry>
								어디에서나 적용되는 인터페이스를 가진다. (e.g., GET, POST, PUT, DELETE)
	                </entry>
						</row>
						<row>
							<entry>모든 자원은 URI를 이용하여 유일하게 지칭될 수 있다.</entry>
						</row>
						<row>
							<entry>자원들의 표현(Representation)들이 URI을 통해 서로 연결되어 있다.</entry>
						</row>
					</tbody>
				</tgroup>
			</informaltable>
		</listitem>

		<listitem>
			<para>
				Open API
				<informaltable>
					<caption>Open API 특징</caption>
					<tgroup cols="1">
						<thead>
							<row>
								<entry align="center">설명</entry>
							</row>
						</thead>

						<tbody>
							<row>
								<entry>
									특정 기능 또는 컨텐츠를 가진 서비스 업체가 자신들의 서비스에 접근할 수 있도록 외부에
									접근방법을 공개하는 것을 Open API라고 한다.
		                  </entry>
							</row>

							<row>
								<entry>
									Open API를 이용하여 새로운 서비스를 개발할 수 있다. 즉 Open API는 해당 서비스로
									접근하기 위한 규약 또는 표준적인 인터페이스를 의미한다.
		                  </entry>
							</row>

							<row>
								<entry>
									Google, Microsoft, Amazon, eBay, Yahoo에서는 이미 여러 Open
									API를 공개하고 있다.
		                  </entry>
							</row>
						</tbody>
					</tgroup>
				</informaltable>
			</para>
		</listitem>
	</itemizedlist>

</chapter>