<chapter id="cxf_webservices_wasconfiguration">
	<title>WAS(Web Application Server) Configuration</title>

	<para>
		Web application that includes Apache CXF-based Web Services is deployed in WAS (Web Application Server). 
		In this case, additional work is needed to execute Apache CXF in each WAS. 
		This chapter explains what to do when additional environment setting is needed for each WAS. 
		Apache CXF supports JDK 1.5 onwards, and WAS to be installed is also limited to WAS that supports JDK 1.5 onwards.
	</para>

	<para>The following is information on each WAS.</para>

	<section id="cxf_webservices_wasconfiguration_tomcat">
		<title>Tomcat</title>
		<para>
			Apache CXF supports JDK 1.5 onwards, 
			so Tomcat server version should be 5.5.x onwards. 
			Refer to <ulink url="http://tomcat.apache.org/">Here</ulink> for information on Tomcat server and downloading.
		</para>
     	<para>
			However, in case of sample application created by Plugin installation, 
     		refer to "Notice for each WAS(Web Application Server)" for each WAS to use opensource in each Plugin manual.
     	</para>  		
		<section id="cxf_webservices_wasconfiguration_tomcat_5.5.23">
			<title>5.5.23, 6.0.x, 7.0.x</title>
			<para>Apache CXF can be used without additional setting.</para>
		</section>
	</section>

	<section id="cxf_webservices_wasconfiguration_jeus">
		<title>JEUS</title>
		<para>
			Apache CXF supports JDK 1.5 onwards, 
			so JEUS server version should be 5 or 6, but in case of JEUS 5, Apache CXF cannot be used because of JAXB library conflict. 
			Refer to TmaxSoft website for information on JEUS server and downloading. 
    	</para>
     	<para>
			However, in case of sample application created by Plugin installation, 
     		refer to "Notice for each WAS(Web Application Server)" for each WAS to use opensource in each Plugin manual.
     	</para>     	
		<section id="cxf_webservices_wasconfiguration_jeus_5">
			<title>5.0</title>
			<para>
				Cannot use Apache CXF. Does not run, because of the difference between the versions of JAXB API, IMPL and reference libraries deployed in JEUS server (JAXB 1.x), 
				and libraries deployed in web application implemented using Apache CXF.
			</para>      	
		</section>
		<section id="cxf_webservices_wasconfiguration_jeus_6">
			<title>6.0</title>
			<para>
				Can be used in Apache CXF without additional setting. 
				Runs without problem, because the versions of JAXB API, IMPL and reference libraries deployed in JEUS server (JAXB 1.x), 
				and libraries deployed in web application implemented using Apache CXF, match.
	      	</para>
			<para>
				However, Plugins provided in Anyframe are developed based on Jetty, so they basically use 8080 port. 
				Therefore, when using JEUS, open cxf-jaxrs-servlet.xml file, and change the 'http://localhost:8080/...' part to 'http://localhost:{JEUS use port}/...'.
			</para>	 	      	
		</section>
	</section>

	<section id="cxf_webservices_wasconfiguration_weblogic">
		<title>WebLogic</title>
		<para>
			Apache CXF supports JDK 1.5 onwards, so WebLogic server version should be WebLogic 9.2(JDK 1.5), 10.1(JDK 1.5), 10.3(JDK 1.6). 
			Refer to <ulink url="http://www.oracle.com/appserver/index.html">Here</ulink> for information on WebLogic and downloading .
		</para>
     	<para>
			However, in case of sample application created by Plugin installation, 
     		refer to "Notice for each WAS(Web Application Server)" for each WAS to use opensource in each Plugin manual.
     	</para>  
		<section id="cxf_webservices_wasconfiguration_weblogic_9.2">
			<title>9.2</title>			
			<para>
				The below additional work is needed for resolving library problems when installing CXF-JAXRS Plugin. 
				You can choose between how to compose web application with EAR file [1] 
				and how to copy geronimo-ws-metadata_2.0_spec-1.1.2.jar file [2].
			</para>
			<para>
			[1] How to compose web application with EAR folder
			</para>			
			<itemizedlist>
				<listitem>
					<para>
						However, Plugins provided in Anyframe are developed based on Jetty, so they basically use 8080 port. 
			        	Therefore, open cxf-jaxrs-servlet.xml file, and change the 'http://localhost:8080/...' part to 'http://localhost:{JEUS use port}/...'.
					</para>					
				</listitem>
				<listitem>
					<para>Create EAR Folder. 
					For instance, the following two folders can be created when project named 'myproject' will be packaged with ear.</para>
						<programlisting language="java"><![CDATA[myproject.ear/ META-INF
             / myproject]]></programlisting>     						  
				</listitem>
				<listitem>
					<para>Deploy application.xml file in META-INF folder. Refer to the below as an example.</para>
					<programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE application PUBLIC "-//Sun Microsystems,Inc.//DTD J2EE Application 1.3//EN"
    "http://java.sun.com/dtd/application_1_3.dtd">
<application>
    <display-name>Sample</display-name>
    <module>
        <web>
            <web-uri>myproject</web-uri>
            <context-root>/myproject</context-root>
        </web>
    </module>
</application>]]></programlisting>
				</listitem>
				<listitem>
					<para>
						Deploy weblogic-application.xml file in META-INF folder.
					    Define so that library in WEB-INF/lib folder for javax.jws package is referred to first.
					    Refer to <ulink url="http://cwiki.apache.org/CXF20DOC/application-server-specific-configuration-guide.html#ApplicationServerSpecificConfigurationGuide-WebLogic">Here</ulink>
					    on how to define weblogic-application.xml.
					</para>
					<programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<weblogic-application xmlns="http://www.bea.com/ns/weblogic/90">
    <prefer-application-packages>
	    <package-name>javax.jws.*</package-name>
    </prefer-application-packages>
</weblogic-application>]]></programlisting>
				</listitem>
				<listitem>
					<para>
					    Deploy weblogic.xml file in WEB-INF inside myproject folder. 
						Define so that library and class files in web application are referred to first. 
						Refer to the below as an example.
					</para>
					<programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="ISO-8859-1"?>
<weblogic-web-app xmlns="http://www.bea.com/ns/weblogic/90">
  	 <container-descriptor>
	     <prefer-web-inf-classes>true</prefer-web-inf-classes>
	 </container-descriptor>
</weblogic-web-app>]]></programlisting>
				</listitem>	
				<listitem>
					<para>
						Remove xmlbeans-x.x.x.jar file in WEB-INF/lib folder inside myproject folder.
					</para>
				</listitem>						
			</itemizedlist>
			<para>
			[2] How to copy geronimo-ws-metadata_2.0_spec-1.1.2.jar file
			</para>				
			<itemizedlist>		
				<listitem>
					<para>
						Copy geronimo-ws-metadata_2.0_spec-1.1.2.jar file in JDK_HOME/jre/lib/endorsed folder.
					</para>
				</listitem>
				<listitem>
					<para>
						Check the location of JDK 1.5 set when installing WebLogic server, 
						create endorsed folder under JDK_HOME/jre/lib folder, 
						and copy geronimo-ws-metadata_2.0_spec-1.1.2.jar file, under WEB-INF/lib folder of web application currently deployed, 
						to endorsed folder. 
	          		</para>
	          		<para>[Reference] In this case, note that the above work influences the entire WebLogic server.</para>
	          	</listitem>
			</itemizedlist>
		</section>
		<section id="cxf_webservices_wasconfiguration_weblogic_10.1">
			<title>10.1</title>
			<para>
				The below additional work is needed for resolving library problems when installing CXF-JAXRS Plugin. 
			</para>			
			<itemizedlist>
				<listitem>
					<para>
						However, Plugins provided in Anyframe are developed based on Jetty, so they basically use 8080 port. 
			        	Therefore, open cxf-jaxrs-servlet.xml file, and change the 'http://localhost:8080/...' part to 'http://localhost:{JEUS use port}/...'.
					</para>					
				</listitem>		
				<listitem>
					<para>Create EAR Folder. For instance, the following two folders can be created when project named myproject is packaged with ear.</para>
						<programlisting language="java"><![CDATA[myproject.ear/ META-INF
             / myproject]]></programlisting>     						  
				</listitem>
				<listitem>
					<para>Deploy application.xml file in META-INF folder. Refer to the below as an example.
					</para>
					<programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE application PUBLIC "-//Sun Microsystems,Inc.//DTD J2EE Application 1.3//EN"
    "http://java.sun.com/dtd/application_1_3.dtd">
<application>
    <display-name>Sample</display-name>
    <module>
        <web>
            <web-uri>myproject</web-uri>
            <context-root>/myproject</context-root>
        </web>
    </module>
</application>]]></programlisting>
				</listitem>
				<listitem>
					<para>
						Deploy weblogic-application.xml file in META-INF folder. 
						Define so that library in WEB-INF/lib folder for javax.jws package is referred to first.
						Refer to the below as an example.
					</para>
					<programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<weblogic-application>
    <prefer-application-packages>
    	<package-name>javax.persistence.*</package-name>
	    <package-name>javax.jws.*</package-name>
    </prefer-application-packages>
</weblogic-application>]]></programlisting>
				</listitem>
				<listitem>
					<para>
                        Deploy weblogic.xml file in WEB-INF inside myproject folder. 
						Define so that library and class files in web application are referred to first. 
						Refer to the below as an example.
					</para>
					<programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="ISO-8859-1"?>
<weblogic-web-app>
  	 <container-descriptor>
	     <prefer-web-inf-classes>true</prefer-web-inf-classes>
	 </container-descriptor>
</weblogic-web-app>]]></programlisting>
				</listitem>	
				<listitem>
					<para>
						Remove xmlbeans-x.x.x.jar file in WEB-INF/lib folder inside myproject folder.
					</para>
				</listitem>						
			</itemizedlist>
		</section>
		<section id="cxf_webservices_wasconfiguration_weblogic_10.3">
			<title>10.3.3</title>
			<para>
				The below additional work is needed for resolving library problems when installing CXF-JAXRS Plugin. 
			</para>				
			<itemizedlist>
				<listitem>
					<para>
						However, Plugins provided in Anyframe are developed based on Jetty, so they basically use 8080 port. 
			        	Therefore, open cxf-jaxrs-servlet.xml file, and change the 'http://localhost:8080/...' part to 'http://localhost:{JEUS use port}/...'.	
					</para>					
				</listitem>			
				<listitem>
					<para>Create EAR Folder. For instance, the following two folders can be created when project named myproject is packaged with ear.</para>
						<programlisting language="java"><![CDATA[myproject.ear/ META-INF
             / myproject]]></programlisting>     						  
				</listitem>
				<listitem>
					<para>Deploy application.xml file in META-INF folder. Refer to the below as an example.</para>
					<programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE application PUBLIC "-//Sun Microsystems,Inc.//DTD J2EE Application 1.3//EN"
    "http://java.sun.com/dtd/application_1_3.dtd">
<application>
    <display-name>Sample</display-name>
    <module>
        <web>
            <web-uri>myproject</web-uri>
            <context-root>/myproject</context-root>
        </web>
    </module>
</application>]]></programlisting>
				</listitem>
				<listitem>
					<para>
						Deploy weblogic-application.xml file in META-INF folder. Refer to the below as an example.
					</para>
					<programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<weblogic-application>
    <prefer-application-packages>
    	<package-name>javax.persistence.*</package-name>
    </prefer-application-packages>
</weblogic-application>]]></programlisting>
				</listitem>
				<listitem>
					<para>
					    Deploy weblogic.xml file in WEB-INF inside myproject folder. 
						Set so that library and class files in web application are referred to first. 
						Refer to the below as an example.
					</para>
					<programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="ISO-8859-1"?>
<weblogic-web-app>
  	 <container-descriptor>
	     <prefer-web-inf-classes>true</prefer-web-inf-classes>
	 </container-descriptor>
</weblogic-web-app>]]></programlisting>
				</listitem>	
				<listitem>
					<para>
						Using Apache CXF 2.3: The currently deployed Anyframe CXF-JAXRS Plugin depends on Apache CXF 2.3 version. 
						In this case, remove xercesImpl-x.x.x.jar file in WEB-INF/lib folder, 
						and deploy in lib folder under Weblogic domain to be used. 
   					</para>
					<para>
						[Reference] Using Apache CXF 2.2.7 : Previous version of Anyframe CXF Plugin depends on Apache CXF 2.2.7 version. 
						In this case, remove xercesImpl-x.x.x.jar and stax-api-x.x.jar files in WEB-INF/lib folder, 
						and deploy xercesImpl-x.x.x.jar file only in lib folder under Weblogic domain to be used.
   					</para>   					
				</listitem>				
				<listitem>
					<para>
						Remove xmlbeans-x.x.x.jar and geronimo-stax-api_1.0_spec-x.x.x.jar files in WEB-INF/lib folder inside myproject folder. 
					</para>
				</listitem>	
			</itemizedlist>
		</section>
	</section>
</chapter>

