<chapter id="webflow_configuration">
	<title>Configuration</title>
	<para>
		Spring Web Flow를 사용하게 위해서는 다음과 같은 기본 설정과 Spring MVC와의 연계를 위한 부가 설정이 필요하다.
	</para>
	
	<section id="webflow_configuration_setting">
		<title>기본 설정</title>
				
		<section id="webflow_configuration_setting_flowregistry">
			<title>FlowRegistry 정의</title>
			<para>
				Spring Web Flow를 실행 시키기 위해 Flow Definition 파일이 있는 위치를
				FlowRegistry에 등록하고 각각의 Flow Definition 파일에 대해 Flow ID를
				부여한다. 필요에 따라 base-path를 지정해 줄 수도 있다.
				<programlisting language="xml"><![CDATA[<webflow:flow-registry id="flowRegistry" base-path="/WEB-INF/jsp/webflow">
    <webflow:flow-location path="/sales/product/addProduct-flow.xml"
            id="webflowAddProduct" />
</webflow:flow-registry>]]></programlisting>
					위와 같이 정의할 경우 base-path를 포함하여 /WEB-INF/jsp/webflow/sales/product/addProduct-flow.xml
					파일을 Flow Registry에 등록하게 된다.
			</para>
			
			<section id="webflow_configuration_setting_flowregistry_method">
				<title>Flow Registry 정의 방법</title>
				<para>
					Flow Registry를 정의 하는 방법은 아래와 같다.
					<itemizedlist>
						<listitem>
							<para>
								path를 이용한 Flow Definition 파일 위치 직접 지정 : Flow Definition 파일의 위치를 직접 정의하여
								Flow Registry에 등록 할 수 있다.
								<programlisting language="xml"><![CDATA[<webflow:flow-registry id="flowRegistry">
    <]]><emphasis role="bold"><![CDATA[webflow:flow-location path="/WEB-INF/jsp/webflow/sales/product/addProduct-flow.xml"
            id="webflowAddProduct" ]]></emphasis><![CDATA[/>
</webflow:flow-registry>]]></programlisting>
							</para>	
						</listitem>
						<listitem>
							<para>
								pattern을 이용한 위치 지정 : pattern을 이용하여 여러 개의 Flow Definition 파일을 한꺼번에 등록할 수 있다.
								<programlisting language="xml"><![CDATA[<webflow:flow-registry id="flowRegistry"
        base-path="/WEB-INF/jsp/webflow/sales">
    <]]><emphasis role="bold"><![CDATA[webflow:flow-location-pattern value="/**/*-flow.xml"]]></emphasis><![CDATA[/>
</webflow:flow-registry>]]></programlisting>
								위와 같이 정의할 경우 /WEB-INF/jsp/webflow/sales 하위 모든 폴더의 -flow.xml로 끝나는 모든 파일을
								Flow Registry에 등록 하게 된다.
							</para>  
						</listitem>
					</itemizedlist>
				</para>
			</section>
			
			<section id="section id=webflow_configuration_setting_flowregistry_flowid">
				<title>Flow ID 생성</title>
				<para>
					Flow Registry 설정 시 path를 이용하여 id 요소에 id를 지정해 줄 경우 해당 id로 Flow ID를
					생성하지만 별도의 id를 정의하지 않았을 때나 pattern을 이용하여 Flow Registry를 정의했을 때에는 base-path 설정
					유무에 따라 아래와 같이 Flow ID가 생성된다. Flow ID는 실제 Flow를 실행시키게 되는 요청명이 되므로 어떠한 Flow ID로
					생성되는지 개발자는 인지하고 있어야할 것이다.
					<itemizedlist>
						<listitem>
							<para>
								base-path를 정의할 경우 : 
								base-path를 정의한 경우에는 실제 파일의 경로에서 base-path와 파일명을 제외한 문자열이 Flow의 ID가 된다.
								<programlisting language="xml"><![CDATA[<webflow:flow-registry id="flowRegistry" ]]><emphasis role="bold"><![CDATA[base-path="/WEB-INF/jsp/webflow"]]></emphasis><![CDATA[>
    <webflow:flow-location path="/sales/product/addProduct-flow.xml"
            id="webflowAddProduct" />
</webflow:flow-registry>]]></programlisting>
								위와 같이 정의할 경우 Flow의 ID는 sales/product가 된다. pattern을 사용하였을 경우에도 마찬가지다. 그러나 이 때, 폴더 명이 ID가 되므로 
								하나의 폴더에는 하나의 Flow Definition 파일만 존재해야 한다.
							</para>
						</listitem>
						<listitem>
							<para>
								base-path를 정의하지 않을 경우 : 
								base-path를 정의하지 않을 경우에는 Flow Definition 파일의 이름에서 확장자를 제외한 파일 이름이 Flow ID가 된다.
								<programlisting language="java"><![CDATA[<webflow:flow-registry id="flowRegistry">
    <webflow:flow-location-pattern value="/WEB-INF/jsp/webflow/sales/**/*-flow.xml"/>
</webflow:flow-registry>]]></programlisting> 
							위에서 정의한 pattern과 일치하는 파일이 category-flow.xml, product-flow.xml 이라고 할 떄
							각각의 Id는 category-flow, product-flow가 된다.
							</para>
						</listitem>
					</itemizedlist>
					<note>
						<title>생성된 flow id를 확인할 수 있는 방법은?</title>
						<para>
							개발자가 flow의 id를 따로 지정안해  줄 경우 생성된 flow id는 log4j.xml 파일에서
							org.springframework.webflow logger를 DEBUG 레벨로 정의 하면 확인할 수 있다.
							다음은 이렇게 정의하였을 때 출력되는 로그의 일부이다. 
							<programlisting language="java">[/WEB-INF/jsp/webflow/sales/category/category-flow.xml]' under id 'category'
[/WEB-INF/jsp/webflow/sales/category/category-flow.xml]' under id 'category-flow'</programlisting>
 						</para>
 					</note>
				</para>
			</section>
		</section>
		
		<section id="webflow_configuration_setting_flowexecutor">
				<title>FlowExecutor 정의</title>
				<para>Flow를 실행 시키기 위해서 FlowExecutor 배포하여야 한다.
				<programlisting language="xml"><![CDATA[<]]><emphasis role="bold"><![CDATA[webflow:flow-executor id="flowExecutor"]]></emphasis><![CDATA[ />]]> </programlisting></para>
		</section>
	</section>
		
	<section id="webflow_configuration_mvc">
		<title>Spring MVC와 연계하기 위한 설정</title>
		<para>
			Spring Web Flow는 Spring MVC, JSP, Faces, Portlet 등의 환경에서 사용이 가능하다. 이 절에서는
			Spring MVC와의 연계 방법에 대해 알아보게 될 것이며  기본적으로 이를 위해서는 DispatcherServlet이
			정의되어 있고 Spring Web Flow로 구현될 모든 요청이 DispatcherServlet을 servlet으로 사용해야 한다.
		</para>
		
		<section id="webflow_configuration_mvc_adaptor">
			<title>FlowHandlerAdaptor 정의</title>
			<para>
				Spring MVC 환경에서 Flow가 핸들링 될 수 있도록 해주기 위해 FlowHandlerAdaptor를 정의한다.
				<programlisting language="xml"><![CDATA[<bean class="]]><emphasis role="bold"><![CDATA[org.springframework.webflow.mvc.servlet.FlowHandlerAdapter]]></emphasis><![CDATA[">
    <property name=]]><emphasis role="bold"><![CDATA["flowExecutor"]]></emphasis><![CDATA[ ref="flowExecutor" />
</bean>]]></programlisting>
				속성 중 flowExcutor는 위에서 정의한 flowExcutor의 id를 참조하게 된다.
			</para>
		</section>
		
		<section id="webflow_configuration_mvc_mapping">
			<title>FlowHandlerMapping 정의</title>
			<para>
				요청에 대한 Flow를 매핑시켜 주기위해 FlowHandlingMapping을 정의 한다.
				<programlisting language="xml"><![CDATA[<bean class=]]><emphasis role="bold"><![CDATA["org.springframework.webflow.mvc.servlet.FlowHandlerMapping"]]></emphasis><![CDATA[>
    <property name="order" value="0" />
    <property name=]]><emphasis role="bold"><![CDATA["flowRegistry"]]></emphasis><![CDATA[ ref="flowRegistry" />
</bean>]]></programlisting>
				위에서 정의한 FlowHandlerMapping은 Spring MVC의 BeanNameHandlerMapping, SimpleHandlerMapping과 같이 interceptor, order등의 속성을
				줄 수 있다. 속성 중 flowRegistry는 위에서 정의한 flowRegistry의 id를 참조 하며 실제 요청을 처리하게될 flow 파일들을 관리하고 있는 저장소이다. 
				<note>
					<title>특정 URL에만 Interceptor를 적용해야 할 경우에는?</title>
					<para>
						특정 URL에만 Interceptor를 적용해야 할 경우 Spring Web Flow에서 제공하는 FlowController를 이용하여 정의할 수 있다. 
						<programlisting language="xml"><![CDATA[<bean class="org.springframework.
            web.servlet.handler.SimpleUrlHandlerMapping">
    <property name="order" value="0"/>
    <property name="mappings">
        <value>
            /webflowProduct.do=flowController
        </value>
    </property>
    <property name="interceptors" ref="loginInterceptor" />
</bean>
<bean id="flowController" 
        class="]]><emphasis role="bold"><![CDATA[org.springframework.webflow.mvc.servlet.FlowController]]></emphasis><![CDATA[">
    <!-- 필수 -->
    <property name="flowExecutor" ref="flowExecutor"/>
</bean>
<bean class="]]><emphasis role="bold"><![CDATA[org.springframework.webflow.mvc.servlet.FlowHandlerMapping]]></emphasis><![CDATA[">
    <!-- order는 SimpleUrlHandlerMapping 보다 낮게 준다. -->
    <property name="order" value="1" />
    <property name="flowRegistry" ref="flowRegistry" />
</bean>
<bean id="loginInterceptor" class="common.LoginInterceptor" />]]></programlisting>
						FlowController는 flowExecutor를 속성으로 가질 수 있으며 이를 통해 Flow가 요청을 처리할 수 있게 된다. 위와 같이 정의할 경우 
						"/webflowProduct.do"라는 요청에 대해서만 loginInterceptor를 적용하게 된다. 
					</para>
				</note>
			</para>
		</section>
		
		<section id="webflow_configuration_mvc_viewresolver">
			<title>Spring MVC의 ViewResolver 지정</title>
			<para>
				Spring MVC를 사용할 때 정의한 ViewResolver를 사용하기 위해 flow-builder-services를 등록하고 정의한 viewResolver를 참조하도록 한다.
				정의하는 방법은 아래와 같은 Step을 따른다.
				<orderedlist>
					<listitem>
						<para>
							flowRegistry에 flow-builder-services 속성 추가
							<programlisting language="xml"><![CDATA[<webflow:flow-registry id="flowRegistry"
        ]]><emphasis role="bold"><![CDATA[flow-builder-services="flowBuilderServices]]></emphasis><![CDATA[">
    <webflow:flow-location path="/sample/product/addProduct-flow.xml"
                           id="addProduct" />
</webflow:flow-registry>]]></programlisting>
						</para>
					</listitem>
					<listitem>
						<para>
							flowBuilderServices 정의
							<programlisting language="xml"><![CDATA[<webflow:flow-builder-services ]]><emphasis role="bold"><![CDATA[id="flowBuilderServices"]]></emphasis><![CDATA[
view-factory-creator="mvcViewFactoryCreator" development="true" />]]></programlisting>
						</para>
					</listitem>
					<listitem>
						<para>
							mvcViewFactoryCreater 정의
							<programlisting language="xml"><![CDATA[<bean id="mvcViewFactoryCreator"
        class="]]><emphasis role="bold"><![CDATA[org.springframework.webflow.mvc.builder.MvcViewFactoryCreator"]]></emphasis><![CDATA[>
    <property name="viewResolvers" ref="tilesViewResolver" />
</bean>]]></programlisting>
						</para>
					</listitem>
				</orderedlist>
			</para>
		</section>
	</section>
</chapter>
