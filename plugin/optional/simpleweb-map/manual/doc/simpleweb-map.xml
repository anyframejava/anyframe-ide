<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"
[
<!ENTITY simpleweb_map_controller SYSTEM "simpleweb-map/controller.xml">
]
>

<!--
		Licensed to the Apache Software Foundation (ASF) under one or more
		contributor license agreements. See the NOTICE file distributed with
		this work for additional information regarding copyright ownership.
		The ASF licenses this file to you under the Apache License, Version
		2.0 (the "License"); you may not use this file except in compliance
		with the License. You may obtain a copy of the License at

		http://www.apache.org/licenses/LICENSE-2.0 Unless required by
		applicable law or agreed to in writing, software distributed under the
		License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
		CONDITIONS OF ANY KIND, either express or implied. See the License for
		the specific language governing permissions and limitations under the
		License.
-->
    
<book lang="ko">
	<title>Anyframe Simpleweb Map Plugin</title>
	
	<bookinfo>
		<copyright>
			<year>2007-2012</year>
			<holder>삼성SDS</holder>
		</copyright>
		<releaseinfo>Version 1.0.3-SNAPSHOT</releaseinfo>

		<productname>Anyframe Simpleweb Map Plugin</productname>

		<authorgroup>
			<corpauthor></corpauthor>
		</authorgroup>

		<mediaobject>
			<imageobject>
				<!-- logo 변경 -->
				<imagedata fileref="../image/common/logo_pdf.jpg" />				
			</imageobject>
			<textobject>
				<phrase>Anyframe Java 로고</phrase>
			</textobject>
		</mediaobject>
		<legalnotice>
			<para>본 문서의 저작권은 삼성SDS에 있으며 Anyframe 오픈소스 커뮤니티 활동의 목적하에서 자유로운 이용이 가능합니다.
			본 문서를 복제, 배포할 경우에는 저작권자를 명시하여 주시기 바라며 본 문서를 변경하실 경우에는 원문과 변경된 내용을 표시하여 주시기 바랍니다. 
			원문과 변경된 문서에 대한 상업적 용도의 활용은 허용되지 않습니다. 본 문서에 오류가 있다고 판단될 경우 이슈로 등록해 주시면 적절한 조치를 취하도록 하겠습니다.
			</para>
		</legalnotice>
	</bookinfo>
	<part id="simpleweb_map_introduction_part">
		<title>Introduction</title>
		<partintro id="simpleweb_map_introduction_part_intro">
			<para>
				Simpleweb Map Plugin은 Spring MVC 기반의 웹 어플리케이션을 개발할 때 개발자가 웹 개발을 보다 쉽고 간단하게 할 수 있도록,
				Transfer Object로 Map(java.util.Map) 객체를 사용하는 공통 Controller 클래스 및 태그 라이브러리들을 사용하여 작성된 샘플 코드와 
				이를 활용하는데 필요한 참조 라이브러리들로 구성되어 있다. 
			</para>
			<para role="introduction_title">
				<emphasis role="bold">Installation</emphasis>
			</para>
			<para>Command 창에서 다음과 같이 명령어를 입력하여 simpleweb-map plugin을 설치한다.</para>
			<programlisting language="java"><![CDATA[mvn anyframe:install -Dname=simpleweb-map]]></programlisting>
			<para>
				installed(mvn anyframe:installed) 혹은 jetty:run(mvn clean
				jetty:run) command를 이용하여 설치 결과를 확인해볼 수 있다. 
			</para>
			<informaltable>
				<caption>Dependent Plugins</caption>
				<tgroup cols="2">
					<colspec colnum="1" colname="col1" colwidth="5*" />
					<colspec colnum="2" colname="col2" colwidth="5*" />
					<thead>
						<row>
							<entry align="center">Plugin Name</entry>
							<entry align="center">Version Range</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry align="center">
								<ulink
									url="http://dev.anyframejava.org/docs/anyframe/plugin/optional/simpleweb/1.0.3-SNAPSHOT/reference/htmlsingle/simpleweb.html">Simpleweb</ulink>
							</entry>
							<entry align="center" valign="middle">2.0.0 > * > 1.0.2</entry>
						</row>
					</tbody>
				</tgroup>
			</informaltable>
		</partintro>
	</part>
	
	<part id="simpleweb_map_controller_part">
		<title>Controller</title>
		<partintro>
			<para>
				이번 장에서는 Transfer Object를 java.util.Map으로 사용할 경우 사용하게 될 Anyframe에서 제공하는 Controller 클래스에 대해 알아보도록 한다.  
			</para>
		</partintro>
		&simpleweb_map_controller;
	</part>
	
	<part id="simpleweb_map_map_part">
		<title>Map 기반의 Simpleweb 개발</title>
		<partintro>
			<para>
				이번 장에서는 Simpleweb Map Plugin (simpleweb-map) 설치시 생성되는 Sample Application을 중심으로 Map 기반의 Simpleweb을 개발하는
				방법에 대해 설명하도록 한다. Map 기반의 Simpleweb을 개발할 때 link/submit/validator/validate tag 등의 사용은
				위에서 설명한 VO 기반의 Simpleweb을 개발할 때와 같다. 
				단, Spring form tag를 사용함에 있어서 modelAttribute와 필드의 path를 정의하는 부분이 달라 지게 된다. 
				VO를 사용하게 되는 경우 modelAttribute의 값은 비즈니스 서비스를 호출 한 후 
				리턴되는 객체 타입의 camelcase로 정의하게 된다.(ex> Movie 타입의 객체를 리턴할 경우 modelAttribute는 "movie"로 정의)
				하지만 Map 방식일 경우 modelAttribute의 이름은 "result"로 정의하도록 한다.
			</para>
	 <programlisting language="java"><![CDATA[<form:form ]]><emphasis role="bold"><![CDATA[modelAttribute="result"]]></emphasis><![CDATA[ method="post" ...]]></programlisting>
	 <para>
	 또한, 각각의 입력 필드의 path 값은 "map[${key}]"로 정의하도록 한다. 작성 예는 아래와 같다.
	</para>
	<programlisting language="java"><![CDATA[<form:input id="title" ]]><emphasis role="bold"><![CDATA[path="map[title]" id="title"]]></emphasis><![CDATA[.../>
<anyframe:validate ]]><emphasis role="bold"><![CDATA[id="title"]]></emphasis><![CDATA[ required="true" promptMessage="Enter movie Title." />]]></programlisting>
	 <para>이 때, Anyframe validate tag 적용을 위해 "[]"를 제외한 간편한 id를 정의하고 validate tag를 정의하도록 권고한다.</para>			
		</partintro>
	</part>
</book>