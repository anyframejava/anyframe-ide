<chapter id="springrest_restsupport_httpmessageconversion">
	<title>HTTP Message Conversion</title>
	<para>
		RestTemplate이나 @Controller에서 Java 객체를 HTTP Request로 변환하거나 서버로 부터 전달된 HTTP Response를 다시 Java 객체로 변환할 때 HttpMessageConverter가 사용된다.
		Spring에서 제공하는 주요 타입에 대한 HttpMessageConverter들은 RestTemplate(클라이언트측)과 AnnotationMethodHandlerAdapter(서버측)에 디폴트로 등록되어 내부적으로 변환에 사용된다.
	</para>
	
	<para>
		HttpMessageConverter 인터페이스는 아래와 같은 모습이다. 정의된 메소드들을 보면 제공하는 기능을 알 수 있다.
		<programlisting language="java"><![CDATA[public interface HttpMessageConverter<T> {
    // 입력된 클래스와 미디어 타입이 이 HttpMessageConverter에서 Read 가능한지 여부를 확인.
    boolean canRead(Class<?> clazz, MediaType mediaType);
    
    // 입력된 클래스와 미디어 타입이 이 HttpMessageConverter에서 Write 가능한지 여부를 확인.
    boolean canWrite(Class<?> clazz, MediaType mediaType);
    
    // 이 HttpMessageConverter에서 지원하는 미디어 타입 목록을 리턴.
    List<MediaType> getSupportedMediaTypes();
    
    // 입력된 Message를 읽어 입력된 타입 형태로 변환하여 리턴
    T read(Class<T> clazz, HttpInputMessage inputMessage) throws IOException,
                                              HttpMessageNotReadableException;

    // 입력된 객체를 입력된 OutputMessage로 전송
    void write(T t, HttpOutputMessage outputMessage) throws IOException,
                                              HttpMessageNotWritableException;
}]]></programlisting>
	</para>
	<para>
		Spring에서 제공하는 HttpMessageConverter 인터페이스 구현체들을 하나씩 살펴보자.
	</para>
	<itemizedlist>
		<listitem>
			<para><emphasis role="bold">StringHttpMessageConverter</emphasis></para>
			<para>
				HTTP Request나 Response와 String간의 변환을 수행한다. 디폴트로 모든 text 미디어 타입('text/*')을 지원한다.
			</para>
		</listitem>
		<listitem>
			<para><emphasis role="bold">FormHttpMessageConverter</emphasis></para>
			<para>
				HTTP Request나 Response와 Form 데이터(<![CDATA[MultiValueMap<String, String>]]>) 간의 변환을 수행한다. 디폴트로 'application/x-www-form-urlencoded' 미디어 타입을 지원한다.
			</para>
		</listitem>
		<listitem>
			<para><emphasis role="bold">ByteArrayMessageConverter</emphasis></para>
			<para>HTTP Request나 Response와 byte 배열 간의 변환을 수행한다. 디폴트로 모든 미디어 타입('*/*')을 지원한다.</para>
		</listitem>
		<listitem>
			<para><emphasis role="bold">MarshallingHttpMessageConverter</emphasis></para>
			<para>HTTP Request나 Response를 Spring OXM의 Marshaller/Unmarshaller를 사용하여 XML로 변환한다. 디폴트로 'text/xml', 'application/xml' 미디어 타입을 지원한다.</para>
		</listitem>
		<listitem>
			<para><emphasis role="bold">MappingJacksonHttpMessageConverter</emphasis></para>
			<para>HTTP Request나 Response를 Jackson 라이브러리의 ObjectMapper를 사용하여 XML로 변환한다. 디폴트로 'application/json' 미디어 타입을 지원한다.</para>
		</listitem>
		<listitem>
			<para><emphasis role="bold">SourceHttpMessageConverter</emphasis></para>
			<para>HTTP Request나 Response와 javax.xml.transform.Source(DOMSource, SAXSource, StreamSource만 지원) 간의 변환을 수행한다. 디폴트로 지원하는 미디어 타입은 'text/xml', 'application/xml'이다.</para>
		</listitem>
		<listitem>
			<para><emphasis role="bold">BufferedImageHttpMessageConverter</emphasis></para>
			<para>HTTP Request나 Response와 java.awt.image.BufferedImage 간의 변환을 수행한다. Java I/O API에서 지원하는 모든 미디어 타입에 대해서 변환을 지원한다.</para>
		</listitem>
	</itemizedlist>
</chapter>