<chapter id="springrest_whatisrest_architecture">

	<title>REST Architecture</title>
	
	<para>
		REST architecture consists of the following factors.
	</para>
	
	<itemizedlist>
	
		<listitem>
			<para><emphasis role="bold">Resource</emphasis></para>
			<para>
				The most important concept in REST is that there is a Resource in server that has a unique ID, 
				and client sends request to manipulate the state of a resource. 
				Generally, Resources are words in nouns such as Movie, Student, and Product. 
				In HTTP, <emphasis role="bold">the ID to classify these Resources is URI such as '/moviefinder/movies/MV-00001'.</emphasis>
			</para>
		</listitem>
		
		<listitem>
			<para><emphasis role="bold">Method</emphasis></para>
			<para>
				Methods are words in verbs such as GET and DELETE used to manipulate Resources. 
				<emphasis role="bold">Client uses URI to identify Resource in request and uses HTTP Method to manipulate the Resource.</emphasis> 
				HTTP provides Method such as GET, POST, PUT, and DELETE.
			</para>
		</listitem>
		
		<listitem>
			<para><emphasis role="bold">Representation of Resource</emphasis></para>
			<para>
				 When client sends request to server, 
				 <emphasis role="bold">the state of Resource sent as a response from server is called Representation.</emphasis> 
				 In REST, one Resource can be expressed in various types of Representations. 
				 This is called <emphasis role="bold">Content Negotiation</emphasis>, and will be explained later. 
			</para>
		</listitem>
		
	</itemizedlist>
	
	<para>
		The following is a figure that shows the process of 
		client searching Movie Resource with 'http://example.com/movies/MV00004' URI 
		based on the factors above in REST architecture.
		<mediaobject>
			<imageobject>
				<imagedata align="center" fileref="../image/springrest/architecture.png" />
			</imageobject>
		</mediaobject>
	</para>
	
</chapter>