<chapter id="mip_query_mipuisample_sampleui">
	<title>Sample UI</title>
	<para>	 
	</para>
	
	<section id="mip_query_mipuisample_sampleui_introduction">
		<title>Introduction</title>
		<para>
			샘플로 제공하는 화면은 총 13개이며 Anyframe MiPlatform UI Sample을 실행하면 왼쪽의 메뉴로 제공된다. 각각의 화면은
			커뮤니티의 카테고리, 커뮤니티, 각 커뮤니티의 게시글, 사용자 등을 관리하는 기능으로 구성되어 있다. 각 샘플 화면을 통해
			UI 컴포넌트의 기본적인 사용법, 이벤트 핸들링, 스크립트 사용법, Anyframe에서 제공하는 공통 모듈을 사용하기 위한 Dataset
			구성 방법, Validation 처리 방법 등을 보여준다. 각 UI 컴포넌트의 자세한 사용법은 MiPlatform PID의 Help 매뉴얼을 참조하기
			바란다.
		</para>
	</section>
	
	<section id="mip_query_mipuisample_sampleui_setsampleui">
		<title>Set of Sample UI</title>
		
		<section id="mip_query_mipuisample_sampleui_setsampleui_grd">
			<title>01GRD – 샘플1 (검색 + Grid + Paging Control)</title>
			<para>
				커뮤니티 카테고리 목록을 조회하고 카테고리를 관리하는 기능의 화면이다. Grid 하단에는 Paging Control이 존재한다.
				본 샘플에서 Paging은 페이지 번호 클릭 시에 해당 페이지의 데이터만 테이블에 가져오는 방식으로 구현되어 있다.
			</para>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="../image/mip-query/mipuisample/mipsampleui01.png" />
				</imageobject>
				<textobject>
					<phrase>커뮤니티 카테고리 목록을 조회하고 카테고리를 관리하는 기능의 화면</phrase>
				</textobject>
			</mediaobject>
			
			<itemizedlist>
				<listitem>
					<para>
						추가 버튼을 클릭하면 Grid에 Row가 추가되고 신규 생성할 카테고리 정보를 입력할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						기존 카테고리 정보를 Grid에서 직접 수정할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						카테고리 삭제는 Grid에서 삭제할 카테고리를 선택하고 삭제 버튼을 클릭하면 된다. Grid에서 Shift키나
						Ctrl키를 이용한 Multi Row 선택이 가능하므로 여러 항목을 한꺼번에 삭제할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						사용자가 입력/수정/삭제 등 편집한 내용은 저장 버튼을 클릭했을 때 한꺼번에 테이블에 저장된다.
					</para>
				</listitem>
			</itemizedlist>
		</section>

		<section id="mip_query_mipuisample_sampleui_setsampleui_grdfrm">
			<title>02GRDFRM – 샘플2 (검색 + Grid +입력Form + Paging Control)</title>
			<para>
				커뮤니티에 등록된 게시글 목록을 조회하고, 게시글을 관리하는 화면이다. Grid 하단에는 Paging Control이 존재한다.
			</para>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="../image/mip-query/mipuisample/mipsampleui02.png" />
				</imageobject>
				<textobject>
					<phrase>커뮤니티에 등록된 게시글 목록을 조회하고, 게시글을 관리하는 화면</phrase>
				</textobject>
			</mediaobject>
			
			<itemizedlist>
				<listitem>
					<para>
						목록에서 게시글을 선택하면 하단 입력 Form에서 해당 게시글에 대한 상세 내용을 조회하고 수정할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						추가 버튼을 클릭하면 Grid에 Row가 추가되고 하단에 빈 입력 Form에서 신규 게시글을 작성할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						게시글 삭제는 Grid에서 삭제할 게시글을 선택하고 삭제 버튼을 클릭하면 된다. Grid에서 Shift키나
						Ctrl키를 이용한 Multi Row 선택이 가능하므로 여러 항목을 한꺼번에 삭제할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						사용자가 입력/수정/삭제 등 편집한 내용은 저장 버튼을 클릭했을 때 한꺼번에 테이블에 저장된다.
					</para>
				</listitem>
			</itemizedlist>
		</section>
		
		<section id="mip_query_mipuisample_sampleui_setsampleui_grdpop">
			<title>03GRDPOP – 샘플3 (검색 + Grid + 입력Form 팝업 + Paging Control)</title>
			<para>
				커뮤니티에 등록된 게시글 목록을 조회하고, 게시글을 관리하는 화면이다. Grid 하단에는 Paging Control이 존재한다.
			</para>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="../image/mip-query/mipuisample/mipsampleui03.png" />
				</imageobject>
				<textobject>
					<phrase>커뮤니티에 등록된 게시글 목록을 조회하고, 게시글을 관리하는 화면</phrase>
				</textobject>
			</mediaobject>
			
			<itemizedlist>
				<listitem>
					<para>
						목록에서 게시글을 선택하여 더블 클릭하면 상세 내용을 조회하고 수정할 수 있는 팝업 창이 나타난다.
					</para>
				</listitem>
				<listitem>
					<para>
						추가 버튼을 클릭하면 빈 입력 Form이 팝업 창으로 나타나고 신규 게시글을 작성할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						게시글 삭제는 Grid에서 삭제할 게시글을 선택하고 삭제 버튼을 클릭하면 된다. Grid에서 Shift키나
						Ctrl키를 이용한 Multi Row 선택이 가능하므로 여러 항목을 한꺼번에 삭제할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						사용자가 입력/수정/삭제 등 편집한 내용은 저장 버튼을 클릭했을 때 한꺼번에 테이블에 저장된다.
					</para>
				</listitem>
			</itemizedlist>
		</section>
		
		<section id="mip_query_mipuisample_sampleui_setsampleui_grdtab">
			<title>04GRDTAB – 샘플4 (검색 + 상단 Grid + 하단 Tab 입력 Form)</title>
			<para>
				사용자 목록을 조회하고, 관리하는 화면이다. 하단에는 사용자의 상세정보를 조회할 수 있는 Tab이 존재한다.
			</para>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="../image/mip-query/mipuisample/mipsampleui04.png" />
				</imageobject>
				<textobject>
					<phrase>사용자 목록을 조회하고, 관리하는 화면이다. 하단에는 사용자의 상세정보를 조회할 수 있는 Tab이 존재</phrase>
				</textobject>
			</mediaobject>
			
			<itemizedlist>
				<listitem>
					<para>
						목록에서 사용자를 선택하면 하단 Tab 입력 Form에서 해당 사용자에 대한 상세 내용을 조회하고 수정할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						추가 버튼을 클릭하면 Grid에 Row가 추가되고 하단에 빈 Tab 입력 Form이 나타나 신규 사용자를 생성할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						Grid에서 삭제할 사용자의 Checkbox에 체크를 하고 삭제 버튼을 클릭하면 사용자를 삭제할 수 있다.
						또한 Checkbox를 이용해서 여러 사용자를 한꺼번에 삭제할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						입력/수정/삭제 등 편집한 내용은 저장 버튼을 클릭했을 때 한꺼번에 테이블에 저장된다.
					</para>
				</listitem>
			</itemizedlist>
		</section>
		
		<section id="mip_query_mipuisample_sampleui_setsampleui_grdtab2">
			<title>05GRDTAB – 샘플5 (검색 + 좌측 Grid + 우측 Tab 입력Form)</title>
			<para>
				사용자 목록을 조회하고, 관리하는 화면이다. 우측에 사용자의 상세정보를 조회할 수 있는 Tab이 존재한다.
			</para>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="../image/mip-query/mipuisample/mipsampleui05.png" />
				</imageobject>
				<textobject>
					<phrase>사용자 목록을 조회하고, 관리하는 화면이다. 우측에 사용자의 상세정보를 조회할 수 있는 Tab이 존재</phrase>
				</textobject>
			</mediaobject>
			
			<itemizedlist>
				<listitem>
					<para>
						목록에서 사용자를 선택하면 우측 Tab 입력 Form에서 해당 사용자에 대한 상세 내용을 조회하고 수정할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						추가 버튼을 클릭하면 Grid에 Row가 추가되고 우측에 빈 Tab 입력 Form이 나타나 신규 사용자를 생성할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						Grid에서 삭제할 사용자의 Checkbox에 체크를 하고 삭제 버튼을 클릭하면 사용자를 삭제할 수 있다.
						또한 Checkbox를 이용해서 여러 사용자를 한꺼번에 삭제할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						입력/수정/삭제 등 편집한 내용은 저장 버튼을 클릭했을 때 한꺼번에 테이블에 저장된다.
					</para>
				</listitem>
			</itemizedlist>
		</section>
		
		<section id="mip_query_mipuisample_sampleui_setsampleui_grdgrd">
			<title>06GRDGRD – 샘플6 (좌/우Grid 간 항목 이동)</title>
			<para>
				커뮤니티의 카테고리를 이동하는 화면이다. 좌측에 컴퓨터 카테고리에 속한 커뮤니티 목록이 나열되고, 우측에 자동차
				카테고리에 속한 커뮤니티가 나열된다. 화면 가운데 버튼을 이용하여 커뮤니티를 이동시킬 수 있다. 좌/우 Grid 간 항목
				이동 방법을 보여주는 샘플이다.
			</para>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="../image/mip-query/mipuisample/mipsampleui06.png" />
				</imageobject>
				<textobject>
					<phrase>커뮤니티의 카테고리를 이동하는 화면. 좌측에 컴퓨터 카테고리에 속한 커뮤니티 목록이 나열되고, 우측에 자동차카테고리에 속한 커뮤니티가 나열된다.</phrase>
				</textobject>
			</mediaobject>
			
			<itemizedlist>
				<listitem>
					<para>
						목록에서 커뮤니티를 선택하고 좌측으로 이동하는 버튼 또는 우측으로 이동하는 버튼을 클릭하면 Grid에서 커뮤니티가 이동한다.
					</para>
				</listitem>
				<listitem>
					<para>
						편집한 내용은 저장 버튼을 클릭했을 때 한꺼번에 테이블에 저장된다.
					</para>
				</listitem>
			</itemizedlist>
		</section>
		
		<section id="mip_query_mipuisample_sampleui_setsampleui_grdgrd2">
			<title>07GRDGRD – 샘플7 (검색 + 상단 Master Grid + 하단 Sub Grid + Validation)</title>
			<para>
				커뮤니티 목록과 커뮤니티에 등록된 게시글 목록을 조회하고, 게시글을 관리할 수 있는 화면이다. 하단의 커뮤니티 목록은
				상단의 카테고리 목록을 클릭했을 때 해당 카테고리 ID를 가지고 MiPlatform 자체 Service API인 filter()를 사용해서
				출력한다. 하단 커뮤니티 목록에서 입력데이터에 대한 Validation 처리가 적용되어 있다.
			</para>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="../image/mip-query/mipuisample/mipsampleui07.png" />
				</imageobject>
				<textobject>
					<phrase>커뮤니티 목록과 커뮤니티에 등록된 게시글 목록을 조회하고, 게시글을 관리할 수 있는 화면</phrase>
				</textobject>
			</mediaobject>
			
			<itemizedlist>
				<listitem>
					<para>
						상단 Master Grid에서 커뮤니티를 선택하면 하단 Sub Grid에 해당 커뮤니티에 속한 게시글 목록이 나타난다.
					</para>
				</listitem>
				<listitem>
					<para>
						추가 버튼을 클릭하면 Sub Grid에 Row가 추가되고 신규 게시글을 작성할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						기존 게시글 정보를 Grid에서 직접 수정할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						Grid에서 삭제할 게시글의 Checkbox에 체크를 하고 삭제 버튼을 클릭하면 된다. 또한 Checkbox를 이용해서 여러
						게시글을 한꺼번에 삭제할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						사용자가 입력/수정/삭제 등 편집한 내용은 저장 버튼을 클릭했을 때 한꺼번에 테이블에 저장된다.
					</para>
				</listitem>
				<listitem>
					<para>
						Grid 입력 데이터에 대해 공통Script함수인 gfnValidate()를 이용한 Validation 처리가 적용되어 있다.
					</para>
				</listitem>
			</itemizedlist>
		</section>
		
		<section id="mip_query_mipuisample_sampleui_setsampleui_trvgrd">
			<title>08TRVGRD – 샘플8 (검색 + Tree + Grid + Tab 입력 Form 팝업 + Validation)</title>
			<para>
				부서 목록을 Tree로 조회하고, 부서에 속한 사용자를 관리하는 화면이다. Tree와 Grid 사용 방법을 제시하고 있다.
				입력데이터에 대한 Validation 처리가 적용되어 있다.
			</para>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="../image/mip-query/mipuisample/mipsampleui08.png" />
				</imageobject>
				<textobject>
					<phrase>부서 목록을 Tree로 조회하고, 부서에 속한 사용자를 관리하는 화면</phrase>
				</textobject>
			</mediaobject>
			
			<itemizedlist>
				<listitem>
					<para>
						좌측 Tree에서 부서를 선택하면 우측 Grid에 해당 부서에 속한 사용자 목록이 나열된다.
					</para>
				</listitem>
				<listitem>
					<para>
						우측 목록에서 사용자를 선택하여 더블 클릭하면 사용자에 대한 상세 내용을 조회하고 수정할 수 있는
						Tab 입력 Form 팝업 창이 나타난다.
					</para>
				</listitem>
				<listitem>
					<para>
						추가 버튼을 클릭하면 빈 Tab 입력 Form 팝업 창이 나타나 신규 사용자를 생성할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						사용자 삭제는 Grid에서 삭제할 사용자를 선택하고 삭제 버튼을 클릭하면 된다. Grid에서 Shift키나
						Ctrl키를 이용한 Multi Row 선택이 가능하므로 여러 항목을 한꺼번에 삭제할 수 있다. 
					</para>
				</listitem>
				<listitem>
					<para>
						입력/수정/삭제 등 편집한 내용은 저장 버튼을 클릭했을 때 한꺼번에 테이블에 저장된다.
					</para>
				</listitem>
				<listitem>
					<para>
						공통Script함수인 gfnValidate()를 이용한 Validation 처리가 적용되어 있다.
					</para>
				</listitem>
			</itemizedlist>
		</section>
		
		<section id="mip_query_mipuisample_sampleui_setsampleui_trvfrm">
			<title>09TRVFRM – 샘플9 (검색 + Tree + 입력 Form)</title>
			<para>
				카테고리와 커뮤니티 목록을 Tree로 조회하고, 커뮤니티 정보를 관리하는 화면이다. Tree와 입력 Form 사용 방법을 제시하고 있다.
			</para>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="../image/mip-query/mipuisample/mipsampleui09.png" />
				</imageobject>
				<textobject>
					<phrase>카테고리와 커뮤니티 목록을 Tree로 조회하고, 커뮤니티 정보를 관리하는 화면</phrase>
				</textobject>
			</mediaobject>
			
			<itemizedlist>
				<listitem>
					<para>
						좌측 Tree에서 카테고리를 선택하면 우측에 카테고리 정보가 나타난다.
					</para>
				</listitem>
				<listitem>
					<para>
						좌측 Tree에서 커뮤니티를 선택하면 우측에 커뮤니티 정보가 나타난다.
					</para>
				</listitem>
				<listitem>
					<para>
						수정한 커뮤니티 정보는 저장버튼을 클릭했을 때 일괄 저장된다.
					</para>
				</listitem>
			</itemizedlist>
		</section>
		
		<section id="mip_query_mipuisample_sampleui_setsampleui_ctggrd">
			<title>10CTGGRD – 샘플10 (카테고리구분 + 검색 + Grid)</title>
			<para>
				카테고리 별 커뮤니티 목록을 조회하는 화면이다. Grid를 이용하여 카테고리 구분표를 구성하는 방법을 제시하고 있다.
				하단의 커뮤니티 목록은 상단의 카테고리를 클릭했을 때 해당 카테고리 ID를 가지고 MiPlatform 자체 Service API인
				filter()를 사용해서 출력한다.
			</para>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="../image/mip-query/mipuisample/mipsampleui10.png" />
				</imageobject>
				<textobject>
					<phrase>카테고리 별 커뮤니티 목록을 조회하는 화면</phrase>
				</textobject>
			</mediaobject>
			
			<itemizedlist>
				<listitem>
					<para>
						상단에서 카테고리를 선택하면 하단에 커뮤니티 목록이 나열된다.
					</para>
				</listitem>
				<listitem>
					<para>
						추가 버튼을 클릭하면 Grid에 Row가 추가되고 신규 생성할 커뮤니티 정보를 입력할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						기존 커뮤니티 정보를 Grid에서 직접 수정할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						삭제할 커뮤니티의 Checkbox를 체크하고 삭제 버튼을 클릭하면 커뮤니티를 삭제할 수 있다. Checkbox를 이용하여
						여러 개의 항목을 한꺼번에 삭제할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						사용자가 입력/수정/삭제 등 편집한 내용은 저장 버튼을 클릭했을 때 한꺼번에 테이블에 저장된다.
					</para>
				</listitem>
			</itemizedlist>
		</section>
		
		<section id="mip_query_mipuisample_sampleui_setsampleui_calmtly">
			<title>11CALMTLY – 샘플11 (Grid를 이용한 월간 Calendar)</title>
			<para>
				월간 일정 관리 화면이다. Grid를 이용하여 Calendar를 구성하는 방법을 보여준다.
			</para>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="../image/mip-query/mipuisample/mipsampleui11.png" />
				</imageobject>
				<textobject>
					<phrase>월간 일정 관리 화면</phrase>
				</textobject>
			</mediaobject>
			
			<itemizedlist>
				<listitem>
					<para>
						버튼을 이용하여 월별로 이동하며 일정을 조회할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						기존에 정의한 일정이 존재하는 경우 해당 날짜를 더블 클릭하면 일정 상세조회 팝업 창이 나타난다.
					</para>
				</listitem>
				<listitem>
					<para>
						일정이 정의되지 않은 날짜를 더블 클릭하면 신규 일정을 추가할 수 있는 팝업 창이 나타난다.
					</para>
				</listitem>
			</itemizedlist>
		</section>
		
		<section id="mip_query_mipuisample_sampleui_setsampleui_calwkly">
			<title>12CALWKLY – 샘플12 (Grid를 이용한 주간 Calendar)</title>
			<para>
				주간 일정 관리 화면이다. Grid를 이용하여 Calendar를 구성하는 방법을 보여준다.
			</para>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="../image/mip-query/mipuisample/mipsampleui12.png" />
				</imageobject>
				<textobject>
					<phrase>주간 일정 관리 화면</phrase>
				</textobject>
			</mediaobject>
			
			<itemizedlist>
				<listitem>
					<para>
						버튼을 이용하여 주 별로 이동하며 일정을 조회할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						기존에 정의된 일정이 존재하는 경우 해당 날짜를 더블 클릭하면 일정 상세조회 팝업 창이 나타난다.
					</para>
				</listitem>
				<listitem>
					<para>
						일정이 정의되지 않은 날짜를 더블 클릭하면 신규 일정을 추가할 수 있는 팝업 창이 나타난다.
					</para>
				</listitem>
			</itemizedlist>
		</section>
		
		<section id="mip_query_mipuisample_sampleui_setsampleui_fileatt">
			<title>13FILEATT - 샘플13 (파일 첨부)</title>
			<para>
				샘플13에서 File 첨부 기능을 위한 HttpFile Component를 사용하기 위해서는 다음과 같은 절차가 선행 되어야 한다.
				<itemizedlist>
					<listitem>
						<para>
							현재 사용하는 MiPlatform 버전에 맞는 CyHttpFile.dll, CyHttpFileU.dll 파일을 TOBE SOFT 홈페이지에서 다운로드 받는다.
							(본 샘플은 330U 버전으로 작성 되었다.)  
						</para>
					</listitem>
					<listitem>
						<para>
							다운로드 받은 두 개의 dll 파일을 C:\User\현재사용자\AppData\Local\TOBESOFT\MiPlatform330U\Component 폴더로 옮긴다.
							(Windows XP의 경우 C:\Documents and Settings\현재사용자\AppData\Local\TOBESOFT\MiPlatform330U\Component)
						</para>
					</listitem>
				</itemizedlist>
			</para>
			<para>
				‘POST-00001’이라는 ID의 게시글의 상세 정보 조회화면으로, File 컴포넌트와 File Dialog 컴포넌트를 사용하여 파일 첨부
				기능을 구현한 샘플화면이다. 첨부된 파일을 context.properties 파일에 정의된 repository.path 상에 지정된 위치로 업로드를 한다.
			</para>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="../image/mip-query/mipuisample/mipsampleui13.png" />
				</imageobject>
				<textobject>
					<phrase>POST-00001이라는 ID의 게시글의 상세 정보 조회화면으로, File 컴포넌트와 File Dialog 컴포넌트를 사용하여 파일 첨부 기능을 구현한 화면</phrase>
				</textobject>
			</mediaobject>
			
			<itemizedlist>
				<listitem>
					<para>
						추가 버튼을 클릭하면 파일을 하나씩 첨부할 수 있는 File Dialog 창이 나타난다.
					</para>
				</listitem>
				<listitem>
					<para>
						첨부 파일 목록에서 Checkbox에 체크를 하고 다운로드 버튼을 클릭하면 파일을 다운로드 할 폴더를 선택할 수 있는 Dialog가 나타난다.
					</para>
				</listitem>
				<listitem>
					<para>
						첨부 파일 목록에서 첨부파일을 더블 클릭하면 첨부파일을 저장할 위치와 파일 이름을 지정할 수 있는 Dialog가 나타난다.
					</para>
				</listitem>
				<listitem>
					<para>
						삭제할 첨부파일의 Checkbox를 체크하고 삭제버튼을 클릭하면 첨부파일을 삭제할 수 있다. Checkbox를 이용하여 여러 개의 항목을
						한꺼번에 삭제할 수 있다.
					</para>
				</listitem>
				<listitem>
					<para>
						사용자가 편집한 내용은 저장 버튼을 클릭했을 때 한꺼번에 테이블에 저장된다.
					</para>
				</listitem>
			</itemizedlist>
		</section>
	</section>			
</chapter>