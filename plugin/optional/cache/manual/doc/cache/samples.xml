	<chapter id="cache_samples">
		<title>Samples</title>
			<para>다음은 CacheService의 속성 설정 및 테스트 코드에 대한 예제이다.</para>
			<itemizedlist>
				<listitem>
					<para>
						<emphasis role="bold">Configuration</emphasis>
					</para>
					<para>
						다음은 CacheService에서 사용할 Cache의 속성을 정의한 context-cache.xml 의 일부이다. 아래 속성 정의 파일 내용에 따르면,
						cacheManager 속성으로 EhCacheCacheManager 가 정의되어 있다. 이 때 EhCache 를 세부 설정하기 위한 ehcache.xml 설정은 별도의 ehcache.xml 에 정의되어 있다.
						<programlisting language="xml"><![CDATA[<!-- enable declarative annotation-based caching -->
<cache:annotation-driven />

<!-- configuring the cache storage -->
<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
  p:cache-manager-ref="ehcache" />

<!-- Ehcache-based Cache -->
<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
  p:config-location="classpath:cache/ehcache.xml" />]]></programlisting>
					</para>
				</listitem>
				<listitem>
					<para>
						<emphasis role="bold">TestCase</emphasis>
					</para>
					<para>
						다음은 앞서 정의한 속성 설정을 기반으로 하여 Cache 내에 특정 데이터를 저장하고 추출하는 테스트케이스 코드의 일부이다.
						<programlisting language="java">public void manageGenre() throws Exception {
  GenreService.LOGGER.info("------ manageGenre test ------");

  // 1. create a new genre
  Genre genre = new Genre();
  genre.setName("Western");
  genreService.create(genre);

  // 2. assert - create
  String genreId = genre.getGenreId();
  genre = genreService.get(genreId);
  assertNotNull("fail to fetch a genre", genre);
  assertEquals("fail to compare a genre name", "Western", genre.getName());

  // 3. update a name of genre
  String name = "Western " + System.currentTimeMillis();
  genre.setName(name);
  genreService.update(genre);

  // 4. assert - update
  Genre updatedGenre = genreService.get(genreId);
  assertNotNull("fail to fetch a genre", updatedGenre);
  assertEquals("fail to compare a updated name", name, updatedGenre.getName());

  // 5. update a name of genre and get an updated genre
  String newName = "Western " + System.currentTimeMillis();
  genre.setName(newName);
  Genre updatedAndCachedGenre = genreService.updateAndGet(genre);
  assertNotNull("fail to fetch a genre", updatedAndCachedGenre);
  assertEquals("fail to compare a updated name", newName,
        updatedAndCachedGenre.getName());

  Genre cachedGenre = genreService.get(genreId);
  assertNotNull("fail to fetch a cached genre", cachedGenre);
  assertEquals("fail to compare a updated name of a cached genre", newName, cachedGenre.getName());

  // 6. remove a genre
  genreService.remove(updatedGenre.getGenreId());
}</programlisting>
					</para>
				</listitem>
			</itemizedlist>
	</chapter>