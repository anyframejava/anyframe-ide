	<chapter id="oscache_samples">
		<title>Samples</title>
			<para>다음은 CacheServiceImpl의 속성 설정 및 테스트 코드에 대한 예제이다.</para>
			<itemizedlist>
				<listitem>
					<para>
						<emphasis role="bold">Configuration</emphasis>
					</para>
					<para>
						다음은 OSCacheServiceImpl과 사용할 Cache의 속성을 정의한 context-oscache.xml 의 일부이다. 아래 속성 정의 파일 내용에 따르면,
						cacheAdministrator Bean에 테스트에서 사용할 Cache의 속성이 정의되어 있다. 또한 cacheService Bean에서 cacheAdministrator의 getCache 메소드를 통해 
						도출한 캐시를 참조하고 있다.
						<programlisting language="xml"><![CDATA[<bean id="cacheService" class="org.anyframe.oscache.impl.OSCacheServiceImpl">
    <property name="cache" ref="cache" />
</bean>

<bean id="cache" factory-bean="cacheAdministrator" factory-method="getCache" />

<bean id="cacheAdministrator"
    class="com.opensymphony.oscache.general.GeneralCacheAdministrator"
    destroy-method="destroy">
    <constructor-arg index="0">
        <props>
            <prop key="cache.capacity">10</prop>
        </props>
    </constructor-arg>
</bean>]]></programlisting>
					</para>
				</listitem>
				<listitem>
					<para>
						<emphasis role="bold">TestCase</emphasis>
					</para>
					<para>
						다음은 앞서 정의한 속성 설정을 기반으로 하여 Cache 내에 특정 데이터를 저장하고 추출하는 테스트케이스 코드의 일부이다.
						<programlisting language="java">public void manageGenre() throws Exception {
    // 1. create a new genre
    Genre genre = new Genre();
    genre.setName("Western");
    genreService.create(genre);
    putInCache(genre);

    // 2. assert - create
    genre = getGenreByPk(genre.getGenreId());
    assertNotNull("fail to fetch a genre", genre);
    assertEquals("fail to compare a genre name", "Western", genre.getName());

    // 3. update a name of genre
    String name = "Western " + System.currentTimeMillis();
    genre.setName(name);
    genreService.update(genre);
    putInCache(genre);

    // 4. assert - update
    genre = getGenreByPk(genre.getGenreId());
    assertNotNull("fail to fetch a genre", genre);
    assertEquals("fail to compare a updated name", name, genre.getName());

    // 5. remove a genre
    genreService.remove(genre.getGenreId());
}

private Genre getGenreByPk(String genreId) throws Exception{
    Map&lt;String, Genre&gt; resultMap = (HashMap&lt;String, Genre&gt;) cacheService
        .getFromCache("genreList");
    Genre genre = resultMap.get(genreId);
    return genre;
}</programlisting>
					</para>
				</listitem>
			</itemizedlist>
	</chapter>