<chapter id="simpleweb_tag">
	<title>Tag Library</title>
	<para>
		Anyframe provides tag library for simple web development.  
		This mainly consists of tag for supporting development based on Simpleweb, 
		and tag for calling Spring JS. 
		To use the tag library provided by Anyframe, taglib should be defined as below. 
	</para>
	<programlisting language="java"><![CDATA[<%@ taglib uri="http://www.anyframejava.org/tags" prefix="anyframe" %>]]></programlisting>
		<para>* The related tld file exists in anyframe.springmvc.ext project.</para>
		<para>The main features of tag library provided in Anyframe Simpleweb are as follows.</para>
	<itemizedlist>
		<listitem>
			<para>Support Link of GET method</para>
		</listitem>
		<listitem>
			<para>Support Submit of POST method</para>
		</listitem>
		<listitem>
			<para>SimpleWeb based common controller call</para>
			<itemizedlist>
				<listitem>
					<para>Definition of business service to be called</para>
				</listitem>
				<listitem>
					<para>Definition of Return view after executing business service</para>
				</listitem>
			</itemizedlist>
		</listitem>
		<listitem>
			<para>Support redundant form submit prevention</para>
		</listitem>
		<listitem>
			<para>Model object definition needed in JSP page</para>
		</listitem>
		<listitem>
			<para>Request Parameter definition</para>
		</listitem>
		<listitem>
			<para>Javascript function call when using submit or link</para>
		</listitem>
		<listitem>
			<para>Validator definition for server side Validation</para>
		</listitem>
		<listitem>
			<para>Client side validation using Spring JS</para>
		</listitem>
		<listitem>
			<para>Tiles based Partial Rendering using Spring JS</para>
		</listitem>
		<listitem>
			<para>Providing popup (dialog) using Spring JS</para>
		</listitem>
	</itemizedlist>
	
	<section id="simpleweb_tag_springjs">
		<title>Spring JS integration</title>
	<para>
		As you can see from the above features, 
		Spring JS is used for Partial Rendering, Popup, and Validation. 
		In this chapter let's look into how to integrate with Spring JS. 
		To use Spring JS, spring-js-x.x.x.jar library is needed. 
		This is automatically installed when installing Simpleweb plugin, so it is not a concern for the developer. 
		Spring JS runs based on dojo, and calls dojo in Spring JavaScript. 
		It provides ResourceServlet to access necessary js, image, css files, and servlet should be defined in web.xml. 
		The following is a part of web.xml added by Foundation Plugin installation. (ResourceServlet is also used in Foundation.)
	</para>
	<programlisting language="xml"><![CDATA[<servlet>
	<servlet-name>Resource Servlet</servlet-name>
	<servlet-class>org.springframework.js.resource.ResourceServlet</servlet-class>
</servlet>
<servlet-mapping>
	<servlet-name>Resource Servlet</servlet-name>
	<url-pattern>/resources/*</url-pattern>
</servlet-mapping>]]></programlisting>
	<para>
		When servlet definition finishes, define the path of js file and css file on the upper part of jsp. 
		The following is a part of standard.jsp which defines the UI layout that has been added by Simpleweb Plugin installation.
		
	</para>
	<programlisting language="xml"><![CDATA[<script type="text/javascript" src="<c:url value="/resources/dojo/dojo.js" />"></script>  
<script type="text/javascript" src="<c:url value="/resources/dojo/io/iframe.js" />"></script>  
<script type="text/javascript" src="<c:url value="/resources/anyframe/spring/Anyframe-Spring.js" />"></script>
<script type="text/javascript" src="<c:url value="/resources/anyframe/spring/Anyframe-Spring-Dojo.js" />"></script>
<link type="text/css" rel="stylesheet" href="<c:url value="/resources/dijit/themes/tundra/tundra.css" />" />
<!-- The below css is customized tundra.css of Anyframe. It can be used for your reference if necessary (not required). -->
<link rel="stylesheet" href="<c:url value='/sample/css/tundra-customized.css'/>" type="text/css">]]></programlisting>
	<para>
		To integrate with Spring JS, Spring.js and Spring-Dojo.js which are JavaScript provided in Spring are imported. 
		Here, we will use Anyframe-Spring.js and Anyframe-Spring-Dojo.js extended in Anyframe to support Simpleweb.
	</para> 
	</section>
	
	<section id="simpleweb_tag_submit">
		<title>submit tag</title>
		<para>
			Submit tag is a tag for handling form submit. 
			It can call business service without developing additional Controller class through Anyframe common controller. 
			The attribute provided by submit tag is as the following table. 
				
		</para>
		<informaltable>
          <tgroup cols="3">
          		<colspec colnum="1" colname="col1" colwidth="2*"/>
				<colspec colnum="2" colname="col2" colwidth="2*"/>
				<colspec colnum="3" colname="col3" colwidth="6*"/>
	            <thead>
	              <row>
	                <entry align="center">Attribute</entry>
	
	                <entry align="center">Required</entry>
	
	                <entry align="center">Description</entry>
	              </row>
	            </thead>

	            <tbody>
	              <row>
	                <entry align="center">id</entry>
	                <entry align="center">true</entry>
	                 <entry>
	                 	<para>The unique id for recognizing submit tag</para>
	                 </entry>
	              </row>
	              <row>
	                <entry align="center">form</entry>
	                <entry align="center">true</entry>
	                 <entry>Form name for submit candidate</entry>
	              </row>
	              <row>
	                <entry align="center">action</entry>
	                <entry align="center">false</entry>
	                 <entry>Request name to be processed in servlet. The default value is “/simple.do”.</entry>
	              </row>
	              <row>
	                <entry align="center">service</entry>
	                <entry align="center">false</entry>
	                 <entry>
						Business service and method name to be called (ex> movieService.get(movieId)). Service name is bean id. 	                 
					 </entry>
	              </row>
	              <row>
	                <entry align="center">forward</entry>
	                <entry align="center">false</entry>
	                 <entry>When other request is occurred after calling business service.  
	                 Request is sustained because request is forwarded.</entry>
	              </row>
	              <row>
	                <entry align="center">redirect</entry>
	                <entry align="center">false</entry>
	                 <entry>When other request is occurred after calling business service.  
	                 Request is not sustained because request is redirected.</entry>
	              </row>
	              <row>
	                <entry align="center">render</entry>
	                <entry align="center">false</entry>
	                 <entry>Decide whether view after request processing is partially rendered. 
	                 If render value is “partial” partial rendering is done, but this is only for tiles based layout.</entry>
	              </row>
	              <row>
	                <entry align="center">layout</entry>
	                <entry align="center">false</entry>
	                 <entry>The name of tile definition to be used by rendered view after request processing. 
	                 Default name is “standardLayout”.</entry>
	              </row>
	              <row>
	                <entry align="center">tiles</entry>
	                <entry align="center">false</entry>
	                 <entry>name and value pair that be entered into put-attribute of tiles definition. define as name:value 
	                 (ex > tiles=”body:list.jsp”).</entry>
	              </row>
	               <row>
	                <entry align="center">view</entry>
	                <entry align="center">false</entry>
	                 <entry>Define view to render after request processing</entry>
	              </row>
	              <row>
	                <entry align="center">jsValidate</entry>
	                <entry align="center">false</entry>
	                 <entry>Set if Spring JS Validation applied when using &lt;anyframe:validate&gt; tag should be checked when submitting.</entry>
	              </row>
	            </tbody>
          </tgroup>
        </informaltable>
        <para>Submit tag example is as below.</para>
<programlisting language="java"><![CDATA[<anyframe:submit id="addlink" form="movieForm" action="/simplejsoncommon.do" layout="jsonLayout" service="simplewebJsonMovieService.create(movie)" 
	  forward="simplewebJsonMovieFinder.getPagingList(search)"
	  tiles="body:/WEB-INF/jsp/simpleweb-json/moviefinder/movie/list.jsp" 
	  render="partial" jsValidate="true">
	submit
</anyframe:submit>]]></programlisting>
	</section>
	
	<section id="simpleweb_tag_link">
		<title>link tag</title>
		<para>
			Link tag is the tag that will process requests of GET method. 
			It extends submit tag and the tag attribute is also the same as submit tag. 
			However, in link tag, popup using Spring JS can be used through defining attribute. 
			The attributes added to link tag to use the popup are as the following table. 
				
		</para>
		<informaltable>
          <tgroup cols="3">
          		<colspec colnum="1" colname="col1" colwidth="2*"/>
				<colspec colnum="2" colname="col2" colwidth="2*"/>
				<colspec colnum="3" colname="col3" colwidth="6*"/>
	            <thead>
	              <row>
	                <entry align="center">Attribute</entry>
	
	                <entry align="center">Required</entry>
	
	                <entry align="center">Description</entry>
	              </row>
	            </thead>

	            <tbody>
	              <row>
	                <entry align="center">popup</entry>
	                <entry align="center">false</entry>
	                 <entry>Provide Tile Definition view that should go through Partial Rendering</entry>
	              </row>
	              <row>
	                <entry align="center">popupTitle</entry>
	                <entry align="center">false</entry>
	                 <entry>Title shown on the title bar of popup window</entry>
	              </row>
	            </tbody>
          </tgroup>
        </informaltable>
                <para>Link tag example is as below.</para>
        <programlisting language="java"><![CDATA[<anyframe:link action="/simplejsoncommon.do" id="addviewlink"  
        	layout="jsonLayout" render="partial" popup="true">
	<anyframe:setProperty name="title" value="add"/>
</anyframe:link>]]></programlisting>
	</section>
	
	<section id="simpleweb_tag_setproperty">
		<title>setProperty tag</title>
		<para>
			setProperty tag is used as inner tag of submit tag or link tag, 
			and is for defining property that is paired into simply name and value.  
			Attribute provided by setProperty tag is as below. 		
		</para>
		<informaltable>
          <tgroup cols="3">
          		<colspec colnum="1" colname="col1" colwidth="2*"/>
				<colspec colnum="2" colname="col2" colwidth="2*"/>
				<colspec colnum="3" colname="col3" colwidth="6*"/>
	            <thead>
	              <row>
	                <entry align="center">Attribute</entry>
	
	                <entry align="center">Required</entry>
	
	                <entry align="center">Description</entry>
	              </row>
	            </thead>

	            <tbody>
	              <row>
	                <entry align="center">name</entry>
	                <entry align="center">true</entry>
	                 <entry>
	                 	The key value defined as property. 
	                 	Is named after a specific factor provided by Anyframe 
	                 	For the values that can be set in name 
	                 	and each function of the values, refer to the list below. 
	                 	
	                 	<itemizedlist>
	                 		<listitem><para>title</para><para>Text or image factor subject to link or submit execution.</para></listitem>
	                 		<listitem><para>hiddenDiv </para><para>ID of div that has parameters created by submit tag and link tag. Default is “hiddenDiv”.</para></listitem>
	                 		<listitem><para>upload </para><para>File upload using uploadify plugin of jQuery.</para></listitem>
	                 		<listitem><para>javascript </para><para>Javascript function to be executed before link or submit execution.</para></listitem>
	                 		<listitem><para>request:${key} </para><para>Request Parameter to be transferred to Controller class.</para></listitem>
	                 	</itemizedlist>
	                 </entry>
	              </row>
	              <row>
	                <entry align="center">value</entry>
	                <entry align="center">false</entry>
	                 <entry>Real value to be set for name</entry>
	              </row>
	            </tbody>
          </tgroup>
        </informaltable>
        <para>setProperty example is as below.</para> 
        <programlisting language="java"><![CDATA[<anyframe:link id="jsonMovie" action="/simplejson.do" layout="jsonLayout" tiles="body:/WEB-INF/jsp/simpleweb-json/moviefinder/movie/list.jsp">
	]]><emphasis role="bold"><![CDATA[<anyframe:setProperty name="title">SimpeWeb-JSON[1]</anyframe:setProperty>
	<anyframe:setProperty name="javascript value="fncAlert();"></anyframe:setProperty>
	<anyframe:setProperty name="request:pageSize" value="100"></anyframe:setProperty>
	<anyframe:setProperty name="request:pageUnit" value="3"></anyframe:setProperty>]]></emphasis><![CDATA[
</anyframe:link>]]></programlisting>
<programlisting language="java"><![CDATA[<anyframe:submit id="updatelink" form="movieForm" service="simplewebVoMovieService.update(movie)" forward="simplewebVoMovieFinder.getPagingList(search)"
		layout="voLayout" tiles="body:/WEB-INF/jsp/simpleweb-vo/moviefinder/movie/list.jsp" render="partial" jsValidate="true">
	]]><emphasis role="bold"><![CDATA[<anyframe:setProperty name="title">
		<img src="<c:url value='/sample/images/btn_update.png'/>" width="64" height="18" border="0" />
	</anyframe:setProperty>
	<anyframe:setProperty name="hiddenDiv" value="hiddenDivPopup" />
	<anyframe:setProperty name="upload" value="true" />]]></emphasis><![CDATA[
</anyframe:submit>]]></programlisting>
	</section>
	
	<section id="simpleweb_tag_doublesubmit">
		<title>doublesubmit tag</title>
		<para>
			doublesubmit tag is used as inner tag of link tag or submit tag. 
			It is used for the implementation of the duplicated form submission prevention. 
			Attribute provided by doublesubmit tag is as below.  
		</para>
		<informaltable>
          <tgroup cols="3">
          		<colspec colnum="1" colname="col1" colwidth="2*"/>
				<colspec colnum="2" colname="col2" colwidth="2*"/>
				<colspec colnum="3" colname="col3" colwidth="6*"/>
	            <thead>
	              <row>
	                <entry align="center">Attribute</entry>
	
	                <entry align="center">Required</entry>
	
	                <entry align="center">Description</entry>
	              </row>
	            </thead>
	            <tbody>
	              <row>
	                <entry align="center">formName</entry>
	                <entry align="center">true</entry>
	                 <entry>Form name to apply duplicated form submission
	                 </entry>
	              </row>
	              <row>
	                <entry align="center">isShowNewForm</entry>
	                <entry align="center">false</entry>
	                 <entry>Set request, to show form that applies duplicated form submission prevention function, to “true”</entry>
	              </row>
	              <row>
	                <entry align="center">isSessionForm</entry>
	                <entry align="center">false</entry>
	                 <entry>Set form submit to “true”</entry>
	              </row>
	            </tbody>
          </tgroup>
        </informaltable>
        <para>Duplicated form submission prevention implementation example is as below.</para>
        <orderedlist>
        	<listitem> <para>Request for form that is subject to duplicated form submission prevention</para>
       		<para>Define formName and set isShowNewForm property as “true”</para></listitem>
         	<programlisting language="java"><![CDATA[<anyframe:link id="addviewlink" layout="voLayout" tiles="body:/WEB-INF/jsp/simpleweb-vo/moviefinder/movie/form.jsp">
	<anyframe:setProperty name="title"><img src="<c:url value='/sample/images/btn_add.png'/>" width="64" height="18" border="0" /></anyframe:setProperty>
	<anyframe:model name="movie" type="${package}.simpleweb.vo.moviefinder.domain.Movie"/>
	<anyframe:init valueList="genreList:simplewebVoGenreService.getList()" />   
	]]><emphasis role="bold"><![CDATA[<anyframe:doublesubmit formName="movieForm" isShowNewForm="true"/>]]></emphasis><![CDATA[
</anyframe:link>]]></programlisting>
        	<listitem> <para>Form submit request</para>
		        <para>Define formName (should be the same as the above formName) and set isSessionForm as “true”.</para>
		        <programlisting language="java"><![CDATA[<anyframe:submit id="addlink" form="movieForm" service="simplewebVoMovieService.create(movie)" forward="simplewebVoMovieFinder.getPagingList(search)"
		layout="voLayout" tiles="body:/WEB-INF/jsp/simpleweb-vo/moviefinder/movie/list.jsp" render="partial" jsValidate="true">
	<anyframe:setProperty name="title"><img src="<c:url value='/sample/images/btn_add.png'/>" width="64" height="18" border="0" /></anyframe:setProperty> 
	<anyframe:setProperty name="hiddenDiv" value="hiddenDivPopup" />	
	<anyframe:setProperty name="upload" value="true" />	
	]]><emphasis role="bold"><![CDATA[<anyframe:doublesubmit formName="movieForm" isSessionForm="true"/>  ]]></emphasis><![CDATA[   
</anyframe:submit>]]></programlisting></listitem>
        </orderedlist>
	</section>
	
	<section id="simpleweb_tag_init">
		<title>init tag</title>
		<para>
			init tag is used as inner tag of link tag or submit tag. 
			It helps initial data setting to be shown in JSP. 
			By using “,”, multi data setting is possible. 
			Attribute provided in init tag is as follows.		
		</para>
		<informaltable>
          <tgroup cols="3">
          		<colspec colnum="1" colname="col1" colwidth="2*"/>
				<colspec colnum="2" colname="col2" colwidth="2*"/>
				<colspec colnum="3" colname="col3" colwidth="6*"/>
	            <thead>
	              <row>
	                <entry align="center">Attribute</entry>
	
	                <entry align="center">Required</entry>
	
	                <entry align="center">Description</entry>
	              </row>
	            </thead>
	            <tbody>
	              <row>
	                <entry align="center">valueList</entry>
	                <entry align="center">true</entry>
	                 <entry>List of values for initial data setting. Defined in "${key}:${service.method};${key}:${service.method}..." format.
	                 </entry>
	              </row>
              </tbody>
           </tgroup>
         </informaltable>
         <para>init tag example is as below.</para>
         <programlisting language="java"><![CDATA[<anyframe:link id="jsonTree" action="/simplejson.do" layout="jsonLayout" tiles="body:/WEB-INF/jsp/simpleweb-json/moviefinder/movie/tree.jsp">
	<anyframe:model name="movie" type="${package}.simpleweb.json.moviefinder.domain.Movie" />
	]]><emphasis role="bold"><![CDATA[<anyframe:init valueList="genreList:simplewebJsonGenreService.getDropDownGenreList()"></anyframe:init>]]></emphasis><![CDATA[
	<anyframe:setProperty name="title">SimpeWeb-JSON[2]</anyframe:setProperty>
</anyframe:link>]]></programlisting>
	</section>
	
	<section id="simpleweb_tag_validation">
		<title>validator tag</title>
		<para>
			validator tag is used as inner tag of link tag or submit tag. 
			It supports server side validation or Custom Javascript Validation. 
			Attribute provided by validator tag is as below. 		 
		</para>
		<informaltable>
          <tgroup cols="3">
          		<colspec colnum="1" colname="col1" colwidth="2*"/>
				<colspec colnum="2" colname="col2" colwidth="2*"/>
				<colspec colnum="3" colname="col3" colwidth="6*"/>
	            <thead>
	              <row>
	                <entry align="center">Attribute</entry>
	
	                <entry align="center">Required</entry>
	
	                <entry align="center">Description</entry>
	              </row>
	            </thead>
	            <tbody>
	              <row>
	                <entry align="center">validator</entry>
	                <entry align="center">false</entry>
	                 <entry>
	                 	Define the validator for validation. 
	                 	In case of server side validation, defined as Validator  bean id, 
	                 	and in case of javascript function, defined as "javascript:${function name};".  
	           
	                 </entry>
	              </row>
	              <row>
	                <entry align="center">inputpage</entry>
	                <entry align="center">false</entry>
	                 <entry>In case of server side validation, set rendered view when error occurs. 
	                 Define in ${name}:${value} format of put-attribute that is defined in tiles definition file.
	                 </entry>
	              </row>
              </tbody>
           </tgroup>
         </informaltable>
         <para>The below is the validator tag example.</para>
         <programlisting language="java"><![CDATA[<anyframe:validator validator="movieValidator" inputpage="body:/WEB-INF/jsp/simpleweb-vo/moviefinder/movie/form.jsp"/>]]></programlisting>
	</section>
	
	<section id="simpleweb_tag_model">
		<title>model tag</title>
		<para>
			model tag is used as inner tag of link tag or submit tag. 
			It sets the model attribute of JSP page. 
			Attribute provided by model tag is as below. 
		</para>
		<informaltable>
          <tgroup cols="3">
          		<colspec colnum="1" colname="col1" colwidth="2*"/>
				<colspec colnum="2" colname="col2" colwidth="2*"/>
				<colspec colnum="3" colname="col3" colwidth="6*"/>
	            <thead>
	              <row>
	                <entry align="center">Attribute</entry>
	                <entry align="center">Required</entry>
	                <entry align="center">Description</entry>
	              </row>
	            </thead>
	            <tbody>
	              <row>
	                <entry align="center">name</entry>
	                <entry align="center">true</entry>
	                 <entry>model attribute name. Should be the same as Spring Form tag modelAttribute property. 
	                 </entry>
	              </row>
	              <row>
	                <entry align="center">type</entry>
	                <entry align="center">true</entry>
	                 <entry>Model attribute type. Full package name definition. ex>org.anyframe.datatype.SearchVO 
	                 </entry>
	              </row>
              </tbody>
           </tgroup>
         </informaltable>
         <para>Below is the model tag example.</para>
         <programlisting language="java"><![CDATA[ <anyframe:link id="jsonMovie" action="/simplejson.do" layout="jsonLayout" tiles="body:/WEB-INF/jsp/simpleweb-json/moviefinder/movie/list.jsp">
	]]><emphasis role="bold"><![CDATA[<anyframe:model name="search" type="pack.simpleweb.json.moviefinder.service.MovieSearchVO" />]]></emphasis><![CDATA[
	<anyframe:setProperty name="title">SimpeWeb-JSON[1]</anyframe:setProperty>
</anyframe:link>]]></programlisting>
	</section>
	
	<section id="simpleweb_tag_tiles">
		<title>tiles tag</title>
		<para>
		tiles tag defines tiles definition as inner tag of link tag or submit tag. 
		As mentioned above, tiles can be defined as tiles attribute of submit tag or link tag. 
		When developer defines various tiles definitions, tiles tag can be used to keep the submit tag or link tag definition from becoming too long. 
		Attribute for tiles tag is as below. 
		</para>
		<informaltable>
          <tgroup cols="3">
          		<colspec colnum="1" colname="col1" colwidth="2*"/>
				<colspec colnum="2" colname="col2" colwidth="2*"/>
				<colspec colnum="3" colname="col3" colwidth="6*"/>
	            <thead>
	              <row>
	                <entry align="center">Attribute</entry>
	                <entry align="center">Required</entry>
	                <entry align="center">Description</entry>
	              </row>
	            </thead>
	            <tbody>
	              <row>
	                <entry align="center">name</entry>
	                <entry align="center">true</entry>
	                 <entry>Name to set into tiles definition put-attribute</entry>
	              </row>
	              <row>
	                <entry align="center">value</entry>
	                <entry align="center">true</entry>
	                 <entry>Value to set into tiles definition put-attribute</entry>
	              </row>
              </tbody>
           </tgroup>
         </informaltable>
         <para>The example for tiles tag is as below.</para>
         <programlisting language="java"><![CDATA[<anyframe:tiles name="body" value="/WEB-INF/jsp/simpleweb-vo/moviefinder/movie/form.jsp"/>]]></programlisting>
	</section>
	
	<section id="simpleweb_tag_validate">
		<title>validate tag</title>
		<para>
			Spring JS supports client side validation based on dojo. 
			Anyframe provides Anyframe validation for frequently utilized factors 
			to provide Spring JS that uses JavaScript statement. 
			Validation Error is shown in UI for fields that violate validation, 
			and relevant information is checked when submitted. 
			Attribute provided by validate tag is as below.  
		</para>
		<informaltable>
          <tgroup cols="3">
          		<colspec colnum="1" colname="col1" colwidth="2*"/>
				<colspec colnum="2" colname="col2" colwidth="2*"/>
				<colspec colnum="3" colname="col3" colwidth="6*"/>
	            <thead>
	              <row>
	                <entry align="center">Attribute</entry>
	                <entry align="center">Required</entry>
	                <entry align="center">Description</entry>
	              </row>
	            </thead>
	            <tbody>
	              <row>
	                <entry align="center">id</entry>
	                <entry align="center">true</entry>
	                 <entry>The unique id in field that is subject to validation check. 
	                 Should be the same as input id.   
	                 </entry>
	              </row>
	              <row>
	                <entry align="center">type</entry>
	                <entry align="center">false</entry>
	                 <entry>Widget type that can be applied to field. The default widget type is dijit.form.ValidationTextBox.
	                 	<itemizedlist>
	                 		<listitem><para>Number : dijit.form.NumberTextBox</para></listitem>
	                 		<listitem><para>Date : dijit.form.DateTextBox</para></listitem>
	                 		<listitem><para>CheckBox : dijit.form.CheckBox</para></listitem>
	                 		<listitem><para>RadioButton : dijit.form.RadioButton</para></listitem>
	                 		<listitem><para>Currency : dijit.form.CurrencyTextBox</para></listitem>
	                 	</itemizedlist>
	                 </entry>
	              </row>
	               <row>
	                <entry align="center">required</entry>
	                <entry align="center">false</entry>
	                 <entry>Checking if it is necessary 
	                 </entry>
	              </row>
	               <row>
	                <entry align="center">promptMessage</entry>
	                <entry align="center">false</entry>
	                 <entry>Message shown when entering input value in form 
	                 </entry>
	              </row>
	               <row>
	                <entry align="center">promptMessageKey</entry>
	                <entry align="center">false</entry>
	                 <entry>Key of message to be shown when entering input value in form. 
	                 (Extract message from resource defined in messageSource bean.)
	                 </entry>
	              </row>
	              <row>
	                <entry align="center">promptMessageArgs</entry>
	                <entry align="center">false</entry>
	                 <entry>Argument transferred when using promptMessageKey 
	                 </entry>
	              </row>
	               <row>
	                <entry align="center">invalidMessage</entry>
	                <entry align="center">false</entry>
	                 <entry>Message shown when validation error is occurred 
	                 </entry>
	              </row>
	               <row>
	                <entry align="center">invalidMessageKey</entry>
	                <entry align="center">false</entry>
	                 <entry>Key of message to be shown when validation error is occurred. 
	                 (Extract message from resource defined in messageSource bean.)</entry>
	              </row>
	              <row>
	                <entry align="center">invalidMessageArgs</entry>
	                <entry align="center">false</entry>
	                 <entry>Argument to be transferred when using invalidMessageKey 
	                 </entry>
	              </row>
	               <row>
	                <entry align="center">constraints</entry>
	                <entry align="center">false</entry>
	                 <entry>User defined parameter that will transfer validator 
	                 </entry>
	              </row>
	               <row>
	                <entry align="center">regExp</entry>
	                <entry align="center">false</entry>
	                 <entry>Regular Expression to check field value
	                 </entry>
	              </row>
	               <row>
	                <entry align="center">datePattern</entry>
	                <entry align="center">false</entry>
	                 <entry>The format definition in case type is "Date"(dijit.form.DateTextBox). 
	                 Default is yyyy-MM-dd. 
	                 </entry>
	              </row>
	               <row>
	                <entry align="center">checked</entry>
	                <entry align="center">false</entry>
	                 <entry>Select check/uncheck when type is "CheckBox"(dijit.form.CheckBox).
	                 </entry>
	              </row>
	               <row>
	                <entry align="center">trim</entry>
	                <entry align="center">false</entry>
	                 <entry>Trim entered string 
	                 </entry>
	              </row>
	               <row>
	                <entry align="center">currency</entry>
	                <entry align="center">false</entry>
	                 <entry>Set currency when type is "Currency"(dijit.form.CurrencyTextBox). Default value is “KRW”.
	                 </entry>
	              </row>
	              <row>
	                <entry align="center">value</entry>
	                <entry align="center">false</entry>
	                 <entry>field value 
	                 </entry>
	              </row>
              </tbody>
           </tgroup>
         </informaltable>
         <para>The following is a part of form.jsp added by simplweb plugin installation.</para>
         <programlisting language="java"><![CDATA[<form:form modelAttribute="movie" method="post" action="/simple.do" id="movieForm" name="movieForm" enctype="multipart/form-data">
	<form:input path="title" cssClass="ct_input_g" cssErrorClass="text medium error" size="40" maxlength="50" />
	]]><emphasis role="bold"><![CDATA[<anyframe:validate id="title" required="true" promptMessage="Enter movie Title." />]]></emphasis><![CDATA[ 
	...
	<form:input path="director" cssClass="ct_input_g" cssErrorClass="text medium error" size="40" maxlength="50" />
	]]><emphasis role="bold"><![CDATA[<anyframe:validate id="director" required="true" />]]></emphasis><![CDATA[ 
	...
	<form:input path="actors" cssClass="ct_input_g" cssErrorClass="text medium error" size="60" maxlength="50" /></td>
	]]><emphasis role="bold"><![CDATA[<anyframe:validate id="actors" required="true" promptMessage="Enter Actors." />]]></emphasis><![CDATA[
	...
	<form:input path="runtime" cssClass="ct_input_g" cssErrorClass="text medium error" size="10" maxlength="3" /> min.
	]]><emphasis role="bold"><![CDATA[<anyframe:validate id="runtime" type="Number" />]]></emphasis><![CDATA[
	...
	<form:input path="releaseDate" cssClass="ct_input_g" cssErrorClass="text medium error" maxlength="10" />
		<c:if test="${empty movie.movieId}">
			]]><emphasis role="bold"><![CDATA[<anyframe:validate id="releaseDate" type="Date" value="currentDate"/>]]></emphasis><![CDATA[
		</c:if>
		<c:if test="${not empty movie.movieId}">
			]]><emphasis role="bold"><![CDATA[<anyframe:validate id="releaseDate" type="Date"/>]]></emphasis><![CDATA[
		</c:if>
	...
	<form:input path="ticketPrice" cssClass="ct_input_g" cssErrorClass="text medium error" maxlength="7" />
	]]><emphasis role="bold"><![CDATA[<anyframe:validate id="ticketPrice" type="Number" />]]></emphasis><![CDATA[
	...
	Is this movie now playing ? ]]><emphasis role="bold"><![CDATA[<form:checkbox path="nowPlaying" value="Y"/>]]></emphasis><![CDATA[
	
	<anyframe:submit id="addlink" form="movieForm" ...   ]]><emphasis role="bold"><![CDATA[jsValidate="true"]]></emphasis><![CDATA[>
		<anyframe:setProperty name="title">
			<img src="<c:url value='/sample/images/btn_add.png'/>" width="64" height="18" border="0" />
		</anyframe:setProperty>
		<anyframe:setProperty name="hiddenDiv" value="hiddenDivPopup" />
		<anyframe:setProperty name="upload" value="true" />
		<anyframe:doublesubmit formName="movieForm" isSessionForm="true"/>
	</anyframe:submit>
	.....]]></programlisting>
			<para>
				As can be seen in the above code, if only &lt;anyframe:validate&gt; tag is used, 
				validation violation is noticed only through UI.  
				To check validation error when submitting, 
				set the jsValidate property of submit tag or link tag to "true". 
				
			</para>
			<para>This is the sample view created when installing simpleweb plugin using validate tag.</para>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="../image/simpleweb/simpleweb_tag_sampleview.jpg" />
				</imageobject>
			</mediaobject>
        <note>
        	<title>Useful value provided in Anyframe</title>
        	<para>Anyframe provides useful values for field types that are frequently used in Anyframe. 
        	Those are as below.
        	</para>
        	<itemizedlist>
        		<listitem><para>
        		When setting the value of field which type is "Date" as "currentDate", 
        		set the initial data to today's date.</para> </listitem>
        		<listitem><para>
        		When setting the value of field which does not have a defined type (default is "dijit.form.ValidationTextBox" set as widget type) as "zipcode", 
        		validate the zip code in NNN-NNN format.</para></listitem>
        		<listitem><para>
        		When setting the value of field which does not have a defined type (default is "dijit.form.ValidationTextBox" set as widget type) as "email", 
        		validate email format.</para></listitem>
        		</itemizedlist>
        </note>
		
		<para>※ Spring JS supports various JavaScript based on dojo. For more details, refer to the below link.
			<itemizedlist>
				<listitem><para>Spring JS Documentation : <ulink url="http://static.springsource.org/spring-webflow/docs/2.1.x/reference/htmlsingle/spring-webflow-reference.html">link</ulink></para></listitem>
				<listitem><para>dojo website : <ulink url="http://www.dojotoolkit.org/">link</ulink></para></listitem>
			</itemizedlist>
		</para>
	</section>
</chapter>