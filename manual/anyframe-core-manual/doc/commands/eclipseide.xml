<chapter id="commands_eclipseide">
	<title>Eclipse IDE</title>
	<para>
    Eclipse를 사용해서 Anyframe 기반의 프로젝트 생성, Domain 클래스 및 CRUD 소스 코드 생성, 
				Configuration, JDBC Setting, Anyframe 플러그인 install/uninstall, Hudson 연계 등의 작업을 할 수 있다. 
				프로젝트는 Wizard를 통해서 생성하며, 그 밖의 작업은 Anyframe IDE Editor를 이용한다.
	</para>
	
<section id="eclipseplugin_newapplication">
  <title>New Project Creation</title>

  <para>Anyframe IDE을 이용해 프로젝트를 생성 할 수 있다.</para>
  <para>Anyframe IDE는 Window &gt;&gt; Preferences &gt;&gt; Anyframe Tools &gt;&gt; IDE 에서 설정한 프로젝트 빌드 타입에 따라 다른 프로젝트 생성 화면을 제공한다.
		따라서, 프로젝트를 생성 하기 이전에 프로젝트 빌드 타입을 먼저 설정하도록 한다.</para> 

  <itemizedlist>
    <listitem>
      <para>[<link linkend="eclipseplugin_newapplication_sec001">Maven 프로젝트 생성</link>]</para>
    </listitem>
    
    <listitem>
      <para>[<link linkend="eclipseplugin_newapplication_sec002">Ant 프로젝트 생성</link>]</para>
    </listitem>
    
    
    <listitem>
      <para>[<link linkend="eclipseplugin_newapplication_sec003">프로젝트 실행 및 설정 파일(project.mf) 확인</link>]</para>
    </listitem>

    <listitem>
    	<para>[<link linkend="eclipseplugin_newapplication_sec004">프로젝트 생성 시 발생할 수 있는 에러 해결 Tip</link>]</para>
    	<itemizedlist>
    <listitem>
      <para>[<link linkend="eclipseplugin_newapplication_sec004_sec001">Out of memory</link>] : 프로젝트
      생성 시 java.lang.OutOfMemoryError 조치방법</para>
    </listitem>

    <listitem>
      <para>[<link linkend="eclipseplugin_newapplication_sec004_sec002">Project Clean &amp; JSP Validation
      Error </link>]: 프로젝트 생성 시<inlinemediaobject>
          <imageobject>
            <imagedata fileref="../image/eclipseplugin/createapp-error.jpg" />
          </imageobject>
          <textobject>
          	<phrase> </phrase>
          </textobject>
        </inlinemediaobject> 표시가 뜰 경우 조치방법</para>
    </listitem>
  </itemizedlist>
    </listitem>
  </itemizedlist>

  <section id="eclipseplugin_newapplication_sec001">
    <title>Maven 프로젝트 생성</title>

    <orderedlist>
      <listitem>
        <para>File &gt;&gt; New &gt;&gt; Other.. &gt;&gt; Anyframe &gt;&gt;
        Project 을 선택</para>
      </listitem>

      <listitem>
        <para>열린 창에서 프로젝트 생성을 위해 다음과 같은 내용을 입력한다. 아래 항목을 문제없이 기입하는 경우 Next
        버튼과 Finish 버튼이 활성화 되며, Next 버튼을 클릭하면 DB정보를 구성할 수 있는 화면으로 연결된다.</para>

        <itemizedlist>
          <listitem>
            <para>Project Name: 프로젝트 이름.</para>
          </listitem>

          <listitem>
            <para>Base Location: 프로젝트 생성 위치로, 디폴트 경로로 이클립스의 workspace가 지정된다.
            디폴트로 지정되는 경로를 꼭 사용할 필요 없이 원하는 경로로 변경 가능하다.</para>
          </listitem>
          
          <listitem>
            <para>Use default template home location: 체크된 경우 [사용자 계정 홈 디렉토리]/.anyframe/templates 경로 (ex. C:/Documents and Settings/[user name]/.anyframe/templates)를 
            디폴트로 지정하며, 체크를 하지 않는 경우 Template Home 을 지정할 수 있는 부분이 활성화됨. </para>
          </listitem>
          
          <listitem>
            <para>Template Home: template 파일의 위치 지정.</para>
          </listitem>

          <listitem>
            <para>Package Name: 대표 패키지 이름.</para>
          </listitem>
          
          <listitem><para>Group Id : pom.xml에 정의될 프로젝트의 group id.</para></listitem>
          <listitem><para>Artifact Id : pom.xml에 정의될 프로젝트의 artifact id.</para></listitem>
          <listitem><para>Version : pom.xml에 정의될 프로젝트의 version 정보.</para></listitem>
          <listitem>
            <para>Packaging :war 또는 jar를 선택한다. war의 경우 웹 타입 프로젝트로 dynamic web 프로젝트가 생성되며 Anyframe Core Plugin이 샘플 코드와 함께 설치된다.
				jar의 경우 서비스 타입 프로젝트로 일반 Java 프로젝트가 생성되며 Anyframe Core Plugin 라이브러리만 설치되고 샘플 코드는 설치되지 않는다. </para>
          </listitem>

        </itemizedlist>
      </listitem>

      <listitem>
        <para>DB정보를 구성하기 위해 위 화면에서 Next 버튼을 클릭하였다면 다음과 같은 JDBC Configuration
        화면이 제공된다.</para>
        
        <para>Anyframe IDE 에서는 hsqldb, oracle, mysql, db2, sybase,mssql DB 타입에 대한 설정 및 template을 지원하고 있다.
        사용하고 싶은 DB를 선택하여 DB정보를 구성한다.
        프로젝트 생성할 때, 사용하고 싶은 DB가 구동이 되어 있어야 샘플 테이블에 대한 DB 스크립트가 정상적으로 수행되므로,
        가능한 한 사용하고 싶은 DB를 구동하는 것을 권장한다.
        사용하고 싶은 DB를 결정하지 못한 경우 Anyframe 에서 제공하고 있는 샘플 DB 인 hsqldb를 사용하도록 한다.
        아래 링크되어 있는 hsqldb.zip 파일을 다운받아 압축을 해제하고,
        start.cmd 파일을 실행시켜 DB를 구동한다.
        <informaltable>
			<caption>Download List</caption>
			<tgroup cols="2">
				<colspec colnum="1" colname="col1" colwidth="4*" />
				<colspec colnum="2" colname="col2" colwidth="6*" />
				<thead>
					<row>
						<entry align="center">Name</entry>
						<entry align="center">Download</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry align="center">hsqldb2.zip</entry>
						<entry align="center">
							<ulink url="http://dev.anyframejava.org/docs/anyframe/ide/2.0.0/reference/download/sampledb/hsqldb2.zip">Download</ulink>
						</entry>
					</row>
				</tbody>
			</tgroup>
		</informaltable>
        </para>

        <para>DB 정보 구성 후, Finish 버튼을 누르면 프로젝트가 생성된다.</para>

        <itemizedlist>
          <listitem>
            <para>Database Type: Database 타입으로, hsqldb, oracle, mysql, db2, sybase, mssql를
            제공하고 있다.</para>
          </listitem>

          <listitem>
            <para>Database Name: Database 의 이름</para>
          </listitem>

          <listitem>
            <para>User Name: DB user 이름</para>
          </listitem>

          <listitem>
            <para>Password: 패스워드</para>
          </listitem>

          <listitem>
            <para>Server: DB가 설치된 서버 ip 정보, 로컬에서 사용하는 경우 localhost</para>
          </listitem>

          <listitem>
            <para>Port: hsqldb의 경우 -1, oracle의 경우 1521, mysql의 경우 3306, Sybase는
            3000, db2의 경우 50000, mssql의 경우 1433</para>
          </listitem>

          <listitem>
            <para>Hibernate Dialect: Hibernate에서 쿼리 수행 시, DBMS에 최적화된 기능을 제공하기
            위해 사용되는 것이 SQL Dialect 이며, 이 Dialect 프라퍼티를 사용하여 해당 DB 별 Dialect
            정보를 설정할 수 있다. 각 DB 별 Dialect 클래스가 따로 존재하여 hsqldb를 선택한 경우, 디폴트로
            org.hibernate.dialect.HSQLDialect값이 선택된다.(Oracle, MySQL, DB2, Sybase, mssql
            Dialect도 제공함)</para>
          </listitem>

          <listitem>
            <para>Driver Class Name: DB의 드라이버 클래스를 설정해 주기 위한 값으로, hsqldb의 경우
            org.hsqldb.jdbcDriver 값으로 설정된다. Database Type 선택 시 해당 DB에 맞는 값이
            세팅된다.</para>
          </listitem>

          <listitem>
            <para>Driver Jar Path : Anyframe IDE 설치 시 샘플 DB를 위한 hsqldb driver
            jar 파일이 제공되므로 디폴트로 설정된다. 만약 다른 DB를 사용한다면 해당 DB의 Driver jar 파일로
            연결시켜준다.</para>
          </listitem> 
            
          <listitem>
            <para>Schema: 스키마의 이름.</para>
          </listitem> 
          
          <listitem>
            <para>Group Id: pom.xml에 정의될 jdbc driver의 group id.</para>
          </listitem>   
          
          <listitem>
            <para>Artifact Id: pom.xml에 정의될 jdbc driver의 artifact id.</para>
          </listitem>   
          
          <listitem>
            <para>Version: pom.xml에 정의될 jdbc driver의 version 정보.</para>
          </listitem>     
            
        </itemizedlist>
      </listitem>

      <listitem>
        <para>프로젝트 생성이 완료되면 Eclipse 내에 프로젝트가 정상적으로 생성되어 Import 되었는지 확인해본다.</para>
        <para>Maven 프로젝트의 경우 pom.xml 파일이 존재하며, M2Eclipse 가 활성화된 상태로 import 된다.
        M2Eclipse 가 활성화되면 생성된 프로젝트에 Maven Dependencies Libraries가 Build Path로 추가되어 프로젝트가 정상적으로 참조라이브러리를 인식하게 된다. 
        만약, M2Eclipse 에 문제가 있어 프로젝트가 정상적으로 라이브러리를 인식하지 못한다면, 
        M2Eclipse를 Disable Dependency Management 한 후 다시 Enable Dependency Management 해 주도록 한다.
		(Maven 프로젝트 선택 &gt;&gt; Maven &gt;&gt; Disable Dependency Management or Enable Dependency Management)
		(※ 간혹 Enable Dependency Management를 적용하고 나면 프로젝트의 Build Path에서 src/main/resources의 내용이 exclude되어 문제가 발생하는 경우가 있다. 
		이 때는, 해당 프로젝트에 대해 마우스 오른쪽 버튼을 클릭하여 컨텍스트 메뉴에서 Build Path > Configure Build Path... 메뉴를 클릭하여 
		Source 탭에서 src/main/resources의 'Excluded:**'를 선택하고 오른쪽에 Remove 버튼을 클릭하여 exclude 설정을 해제한다. 
		TestCase가 정상적으로 동작할 수 있도록 src/test/resources/의 'Exclude:**' 도 같은 방법으로 조치한다.) 
		Web 타입 프로젝트일 경우 dynamic web 프로젝트로 생성되고, Service 타입 프로젝트일 경우 java 프로젝트로 생성된다. 
        </para>
      </listitem>         
    </orderedlist>
  </section>
  
  
<section id="eclipseplugin_newapplication_sec002">
    <title>Ant 프로젝트 생성</title>

    <orderedlist>
      <listitem>
        <para>File &gt;&gt; New &gt;&gt; Other.. &gt;&gt; Anyframe &gt;&gt;
        Project 을 선택</para>
      </listitem>

      <listitem>
        <para>열린 창에서 프로젝트 생성을 위해 다음과 같은 내용을 입력한다. 아래 항목을 문제없이 기입하는 경우 Next
        버튼과 Finish 버튼이 활성화 되며, Next 버튼을 클릭하면 DB정보를 구성할 수 있는 화면으로 연결된다.</para>

        <itemizedlist>
          <listitem>
            <para>Project Name: 프로젝트 이름.</para>
          </listitem>
       
          <listitem> 
            <para>Base Location: 프로젝트 생성 위치로, 디폴트 경로로 [Anyframe 이 설치된 root 경로]/applications 가 지정된다.
            디폴트로 지정되는 경로를 꼭 사용할 필요 없이 원하는 경로로 변경 가능하다.</para>
          </listitem>

          <listitem>
            <para>Package Name: 대표 패키지 이름.</para>
          </listitem>

          <listitem>
            <para>Web: Web 타입 프로젝트 생성하는 경우 선택한다. 
				Dynamic Web 프로젝트가 생성되며 Anyframe Core Plugin이 샘플 코드와 함께 설치된다.</para>
          </listitem>

          <listitem>
            <para>Service: 서비스 타입 프로젝트를 생성하는 경우 선택한다. 일반 Java 프로젝트가 생성되며 Anyframe Core Plugin 라이브러리만 설치되고 샘플 코드는 설치되지 않는다.</para>
          </listitem>

        </itemizedlist>
      </listitem>

      <listitem>
        <para>DB정보를 구성하기 위해 위 화면에서 Next 버튼을 클릭하였다면 다음과 같은 JDBC Configuration
        화면이 제공된다.</para>
        
        <para>Anyframe IDE 에서는 hsqldb, oracle, mysql, db2, sybase, mssql DB 타입에 대한 설정 및 template을 지원하고 있다.
        사용하고 싶은 DB를 선택하여 DB정보를 구성한다.
        프로젝트 생성할 때, 사용하고 싶은 DB가 구동이 되어 있어야 샘플 테이블에 대한 DB 스크립트가 정상적으로 수행되므로,
        가능한 한 사용하고 싶은 DB를 구동하는 것을 권장한다.
        사용하고 싶은 DB를 결정하지 못한 경우 Anyframe 에서 제공하고 있는 샘플 DB 인 hsqldb를 사용하도록 한다.
        샘플 DB는 <emphasis role="bold">[Anyframe 이 설치된 root 경로]/ide/db/scripts/hsqldb 하위의 start.cmd</emphasis> 파일을 실행시켜서 구동한다.
        </para>
        <para>Anyframe IDE에서는 다양한 DB에 대한 샘플 쿼리문을 제공하고 있다. 
        현재는 oracle(sampledb-oracle.sql), mysql(sampledb-mysql.sql), sybase(sampledb-sybase.sql), db2(sampledb-db2.sql), mssql(sampledb-mssql.sql)에 대한 샘플쿼리문이 제공되고 있다.
		이런 샘플쿼리문을 반영하기 위해서는 [Anyframe 이 설치된 root 경로]/ide/db/scripts/[DB명]/sampledb-[DB명].sql 파일의 스크립트를 해당 DB에서 실행해준다.
		</para>

        <para>DB 정보 구성 후, Finish 버튼을 누르면 프로젝트가 생성된다.</para>

        <itemizedlist>
          <listitem>
            <para>Database Type: Database 타입으로, hsqldb, oracle, mysql, db2, sybase, mssql를
            제공하고 있다.</para>
          </listitem>

          <listitem>
            <para>Database Name: Database 의 이름.</para>
          </listitem>

          <listitem>
            <para>User Name: DB user 이름.</para>
          </listitem>

          <listitem>
            <para>Password: 패스워드.</para>
          </listitem>

          <listitem>
            <para>Server: DB가 설치된 서버 ip 정보, 로컬에서 사용하는 경우 localhost.</para>
          </listitem>

          <listitem>
            <para>Port: hsqldb의 경우 -1, oracle의 경우 1521, mysql의 경우 3306, sybase는
            3000, DB2의 경우 50000, mssql의 경우 1433</para>
          </listitem>

          <listitem>
            <para>Hibernate Dialect: Hibernate에서 쿼리 수행 시, DBMS에 최적화된 기능을 제공하기
            위해 사용되는 것이 SQL Dialect 이며, 이 Dialect 프라퍼티를 사용하여 해당 DB 별 Dialect
            정보를 설정할 수 있다. 각 DB 별 Dialect 클래스가 따로 존재하여 hsqldb를 선택한 경우, 디폴트로
            org.hibernate.dialect.HSQLDialect값이 선택된다.(Oracle, MySQL, DB2, Sybase, mssql
            Dialect도 제공함.)</para>
          </listitem>

          <listitem>
            <para>Driver Class Name: DB의 드라이버 클래스를 설정해 주기 위한 값으로, hsqldb의 경우
            org.hsqldb.jdbcDriver 값으로 설정된다. Database Type 선택 시 해당 DB에 맞는 값이
            세팅된다.</para>
          </listitem>

          <listitem>
            <para>Driver Jar Path : Anyframe IDE 설치 시 샘플 DB를 위한 hsqldb driver
            jar 파일이 제공되므로 디폴트로 설정된다. 만약 다른 DB를 사용한다면 해당 DB의 Driver jar 파일로
            연결시켜준다.</para>

          </listitem>
          
          <listitem>
            <para>Schema: 스키마의 이름.</para>
          </listitem>
          
        </itemizedlist>
      </listitem>

      <listitem>
        <para>프로젝트 생성이 완료되면 Eclipse 내에 프로젝트가 정상적으로 생성되어 Import 되었는지 확인해본다.
        Ant 프로젝트의 경우 build.xml 빌드스크립트가 존재하며, Web 타입 프로젝트일 경우 dynamic web 프로젝트로 생성되고, Service 타입 프로젝트일 경우 java 프로젝트로 생성된다.
        </para>
      </listitem>
      
    </orderedlist>
  </section>  
  
  <section id="eclipseplugin_newapplication_sec003">
    <title>프로젝트 실행 및 설정 파일(project.mf) 확인 </title>

	<para>생성된 프로젝트를 실행해 보고, 프로젝트 설정 파일(project.mf) 정보도 확인해본다.</para>
	
    <orderedlist>
      <listitem>
        <para>Web 타입 프로젝트일 경우, 서버를 실행하여 프로젝트를 실행해본다.</para>
        <para>프로젝트를 선택한 후 마우스 우측 버튼 클릭 &gt;&gt; Run As &gt;&gt; Run On Server 메뉴를 선택하고 
        이때 기존에 설정되어있던 Tomcat Server(6.0 Version 사용)가 없는 경우 등록해주고 실행하도록 한다.</para>
        <para>Web 타입 프로젝트의 경우 서버를 start 했을 때 열리는 web 페이지는 설치된 Plugin 목록이 보이는 화면이다. 
			프로젝트 생성 이후에 Anyframe IDE Editor의 CRUD Generation 기능을 통해 생성되는 화면은 
			Plugin 목록 화면 우측의 "Generated CRUD Codes" 항목 하단에 생성된 코드 목록으로 나온다.
        </para>
      </listitem>

      <listitem>
      	<para>프로젝트 생성을 통해 만들어진 프로젝트 속성 파일(project.mf)의 프라퍼티를 확인해 본다. 
      	변경하고 싶은 정보가 있을 경우 프라퍼티의 값을 수정하여 수정된 설정 값을 통해 소스가 생성되도록 할 수 있다.
      	</para>
      	<para>아래 표에 설명된 항목별 내용을 보고 DB 설정을 비롯하여 다양한 공통 속성 값을 변경시킬 수 있다. 
      	현재 DB 속성 정보들의 디폴트 값은 hsqldb 샘플 DB에 대한 속성 값으로 설정되어 있다.
      	</para>
      </listitem>
    </orderedlist>  

      <informaltable>
		<caption>project.mf - 프로젝트 정보</caption>
        <tgroup cols="4">
           	<colspec colnum="1" colname="col1" colwidth="3*"/>
			<colspec colnum="2" colname="col2" colwidth="4*"/>
			<colspec colnum="3" colname="col3" colwidth="1*"/>
			<colspec colnum="4" colname="col4" colwidth="2*"/>
           	
             <thead>
               <row>
                 <entry align="center">Property Name</entry>

                 <entry align="center">Description</entry>

                 <entry align="center">Required</entry>

                 <entry align="center">Default Value</entry>
               </row>
             </thead>

             <tbody>
               <row>
                 <entry>anyframe.home</entry>

                 <entry>Anyframe을 설치한 루트 폴더로, Maven 프로젝트일 경우는 사용하지 않는다.</entry>

                 <entry align="center">Y</entry>

                 <entry align="center">Anyframe 을 설치한 root 폴더 경로</entry>
               </row>
               <row>
                 <entry>project.name</entry>

                 <entry>프로젝트 명</entry>

                 <entry align="center">Y</entry>

                 <entry align="center">myproject</entry>
               </row>

			   <row>
                 <entry>project.home</entry>

                 <entry>프로젝트 루트 폴더 경로</entry>

                 <entry align="center">Y</entry>

                 <entry align="center">[Anyframe 을 설치한 root 폴더 경로]/
                 applications/
                 [프로젝트명]</entry>
               </row>
               
               <row>
                 <entry>project.version</entry>

                 <entry>프로젝트 버전</entry>

                 <entry align="center">Y</entry>

                 <entry align="center">1.0</entry>
               </row>
               
               <row>
                 <entry>project.type</entry>

                 <entry>프로젝트 타입</entry>

                 <entry align="center">Y</entry>

                 <entry align="center">web</entry>
               </row>
               
				
               <row>
                 <entry>project.build</entry>

                 <entry>프로젝트 빌드도구</entry>

                 <entry align="center">Y</entry>

                 <entry align="center">maven</entry>
               </row>
               
               <row>
                 <entry>project.template.home</entry>

                 <entry>프로젝트 및 CRUD 소스 코드 생성 시 기반이 되는 Template 파일이 있는 루트 폴더 경로</entry>

                 <entry align="center">Y</entry>

                 <entry align="center">
	                 <para>Maven일 경우 [Local repository 경로]/.anyframe/templates</para>
	                 <para>Ant일 경우 [Anyframe 을 설치한 root 폴더 경로]/templates</para>
                 </entry>
               </row>
               
               <row>
                 <entry>project.template</entry>

                 <entry>프로젝트 및 CRUD 소스 코드 생성 시 기반이 되는 Template 형태(ex.
                 default, miplatform 등)</entry>

                 <entry align="center">Y</entry>

                 <entry align="center">default</entry>
               </row>
               
                <row>
                 <entry>project.daoframework</entry>

                 <entry>DAO Framework 선택(springjdbc, query, hibernate, ibatis2, mybatis 중 택일)</entry>

                 <entry align="center">Y</entry>

                 <entry align="center">springjdbc</entry>
               </row>
               
               <row>
                 <entry>package.name</entry>

                 <entry>프로젝트 대표 패키지 명</entry>

                 <entry align="center">Y</entry>

                 <entry align="center">프로젝트명</entry>
               </row>
             
               <row>
                 <entry>web.context.path</entry>

                 <entry>프로젝트 빌드도구가 Ant일 경우에만 의미있는 값으로,
                 jetty를 이용하여 web 어플리케이션을 실행할 때 사용되는 WebContext Path명</entry>

                 <entry align="center">Y</entry>

                 <entry align="center">프로젝트 명</entry>
               </row>
			</tbody>
		</tgroup>
	   </informaltable>
				

	   <informaltable>
			<caption>project.mf - DB 정보</caption>
            <tgroup cols="4">
              	<colspec colnum="1" colname="col1" colwidth="3*"/>
				<colspec colnum="2" colname="col2" colwidth="4*"/>
				<colspec colnum="3" colname="col3" colwidth="1*"/>
				<colspec colnum="4" colname="col4" colwidth="2*"/>
				
                <thead>
                  <row>
                    <entry align="center">Property Name</entry>

                    <entry align="center">Description</entry>

                    <entry align="center">Required</entry>

                    <entry align="center">Default Value</entry>
                  </row>
                </thead>

                <tbody>
                  <row>
                    <entry>db.type</entry>

                    <entry>DB 정보(hsqldb, oracle, mysql, db2, sybase, mssql)</entry>

                    <entry align="center">Y</entry>

                    <entry align="center">hsqldb</entry>
                  </row>
                
                  <row>
                    <entry>db.name</entry>

                    <entry>Database 명</entry>

                    <entry align="center">Y</entry>

                    <entry align="center">sampledb</entry>
                  </row>
                  
                  <row>
                    <entry>db.schema</entry>

                    <entry>schema 명</entry>

                    <entry align="center">Y</entry>

                    <entry align="center">PUBLIC</entry>
                  </row>
                  
                  <row>
                    <entry>db.server</entry>

                    <entry>DB에 접근하기 위한 server정보</entry>

                    <entry align="center">Y</entry>

                    <entry align="center">localhost</entry>
                  </row>
                  
                  <row>
                    <entry>db.port</entry>

                    <entry>DB에 접근하기 위한 port</entry>

                    <entry align="center">Y</entry>

                    <entry align="center">-1</entry>
                  </row>
                  
                  <row>
                    <entry>db.driver</entry>

                    <entry>DB의 드라이버 클래스 설정</entry>

                    <entry align="center">Y</entry>

                    <entry align="center">org.hsqldb.
                    jdbcDriver</entry>
                  </row>
                  
                  <row>
                    <entry>db.url</entry>

                    <entry>DB에 접근하기 위한 Access URL</entry>

                    <entry align="center">Y</entry>

                    <entry
                    align="center">jdbc:hsqldb:hsql://localhost/sampledb</entry>
                  </row>
                  
                  <row>
                    <entry>db.userId</entry>

                    <entry>DB 사용자 명</entry>

                    <entry align="center">Y</entry>

                    <entry align="center">SA</entry>
                  </row>
                  
                  <row>
                    <entry>db.password</entry>

                    <entry>DB 사용자 패스워드</entry>

                    <entry align="center">N</entry>

                    <entry align="center">N/A</entry>
                  </row>
                  
                  <row>
                    <entry>db.lib</entry>

                    <entry>DB에 접근하기 위한 driver jar파일의 경로
                    
                    		<para>이때, 패스 표현 방법에 주의를 기울여야 함
							상대경로로 입력시 경로 처음에 '/'로 시작하게 될 경우 절대경로로 인식하게 됨</para>
                    </entry>

                    <entry align="center">Y</entry>

                    <entry align="center">
                    	<para>Maven일 경우 C:/Documents and Settings/[user name]/.m2/repository/hsqldb/hsqldb/2.0.0/hsqldb-2.0.0.jar</para>
                    	<para>Ant일 경우 [Anyframe 이 설치된 root 경로]/ide/db/lib/hsqldb-2.0.0.jar</para>
                    	
                    </entry>
                  </row>
                  
                  <row>
                    <entry>db.dialect</entry>

                    <entry>DB별 Hibernate Dialect 클래스 설정</entry>

                    <entry align="center">Y</entry>

                    <entry
                    align="center">org.hibernate.
                    dialect.
                    HSQLDialect</entry>
                  </row>
                  
                  <row>
                    <entry>db.groupId</entry>

                    <entry>jdbc driver group id 정보로, Maven 프로젝트 일 경우에만 사용되는 값</entry>

                    <entry align="center">Y</entry>

                    <entry align="center">hsqldb</entry>
                  </row>
                  
                  <row>
                    <entry>db.artifactId</entry>

                    <entry>jdbc driver artifact id 정보로, Maven 프로젝트 일 경우에만 사용되는 값</entry>

                    <entry align="center">Y</entry>

                    <entry align="center">hsqldb</entry>
                  </row>
                  
                  <row>
                    <entry>db.version</entry>

                    <entry>jdbc driver version 정보로, Maven 프로젝트 일 경우에만 사용되는 값</entry>

                    <entry align="center">Y</entry>

                    <entry align="center">2.0.0</entry>
                  </row>
				  <row>
					<entry>db.schema.use</entry>
					<entry>해당 DB가 Sybase DB일 경우, 지정해야 하는 속성으로 User 정보 셋팅시 DB Schema 정보를 사용할지 여부를 정의한다.
						단, Sybase 버전에 따라 속성값은 변경될 수 있음에 유의하도록 한다.
					</entry>								
                    <entry align="center">N</entry>

                    <entry align="center">false</entry>					
				  </row>	                  

                </tbody>
              </tgroup>
             </informaltable>            
      
  </section>  


<section id="eclipseplugin_newapplication_sec004">
    <title>프로젝트 생성 시 발생할 수 있는 에러 해결 Tip</title>

    <section id="eclipseplugin_newapplication_sec004_sec001">
    	<title>Out of memory</title>

    <para>프로젝트 생성 시 "java.lang.OutOfMemoryError:Java heap space" 같은 out of memory 에러가 발생할 경우 다음과 같이
    조치한다.</para>

    <orderedlist>
      <listitem>
        <para>실행하고 있는 eclipse가 설치되어 있는 폴더로 이동한다.</para>
      </listitem>

      <listitem>
        <para>root 폴더 하위의 eclipse.ini 파일의 내용에서 launcher.XXMaxPermSize값(ex.
        256M)을 높여서 재설정해준다. 필요 시 메모리 사용 최소값(-Xms)과 최대값(-Xmx)을 증가시켜서 사용하도록 한다.
        다음은 Eclipse 3.5.0(Galileo) 버전의 eclipse.ini 파일 예이다.</para>

        <programlisting><emphasis role="bold">-clean</emphasis>
-startup
plugins/org.eclipse.equinox.launcher_1.0.201.R35x_v20090715.jar
--launcher.library
plugins/org.eclipse.equinox.launcher.win32.win32.x86_1.0.200.v20090519
-product
org.eclipse.epp.package.jee.product
--launcher.XXMaxPermSize
256M
-showsplash
org.eclipse.platform
--launcher.XXMaxPermSize
128m
-vmargs
-Dosgi.requiredJavaVersion=1.5
<emphasis role="bold">-Xms400m</emphasis>
<emphasis role="bold">-Xmx512m</emphasis>
</programlisting>
      </listitem>
    </orderedlist>
</section>
    <section id="eclipseplugin_newapplication_sec004_sec002"><title>Project Clean &amp; JSP
    Validation Error</title>

    <itemizedlist>
      <listitem>
        <para>프로젝트 생성 시 다음과 같이 생성된 프로젝트에<inlinemediaobject>
            <imageobject>
              <imagedata align="center" fileref="../image/eclipseplugin/createapp-error.jpg" />
            </imageobject>
            <textobject>
          	  <phrase> </phrase>
            </textobject>            
          </inlinemediaobject> 표시가 뜨는 경우, 프로젝트를 clean을 하거나 해당 프로젝트를 close 한 후
        다시 open하면 표시가 사라진다. </para>

        <para>☞ Project &gt;&gt; Clean... 수행</para>

        <para>☞ 프로젝트 선택 후 오른쪽 마우스 클릭 &gt;&gt; Close Project 후 프로젝트 선택 후 오른쪽
        마우스 클릭 &gt;&gt; Open Project </para>
      </listitem>

      <listitem>
        <para>Problems 에 JSP Validation 에러가 나오는 경우, 실제로 error는 아니지만 eclipse에서
        인식을 에러로 하는 것으로 다음과 같이 validation 설정을 변경해주면 된다. Eclipse 내 프로젝트에서
        Validation 기능을 사용하게 되면 시간이 많이 소요될 수 있다. 반드시 필요한 경우가 아니고, 속도 향상을 위해서라면
        Validation 설정을 모두 Disable All 버튼을 선택하여 사용하지 않는 것으로 설정할 수도 있다.</para>

        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="../image/eclipseplugin/createapp-validation.jpg" />
          </imageobject>
		  <textobject>
		    <phrase>Eclipse Problems 창의 모습으로써 다양한 Validation 오류(JSP Syntax 오류 등) 목록이 보여지고 있다.</phrase>
		  </textobject>          
        </mediaobject>

        <para>☞ Window &gt;&gt; Preferences... &gt;&gt; Validation &gt;&gt;
        JPA Validator, JSP Syntax Validator 의 Build 항목 체크 해제 후 Apply </para>
      </listitem>
    </itemizedlist>
    </section>
    </section>
</section>
	
<section id="eclipseplugin_domain">
  <title>Domain Generation</title>

  <para>Anyframe IDE을 이용해 Domain 클래스를 생성해본다.</para>

  <para>DB 테이블 기반으로 Domain 클래스를 생성시키기 때문에 JDBC 설정이 제대로 되었는지 [<link
  linkend="eclipseplugin_jdbc">JDBC Configuration 설정방법</link>]을 참조하여 확인 한 후, Domain 클래스를
  생성하도록 한다.</para>

  <orderedlist numeration="arabic" inheritnum="inherit">   
    <listitem>
     <para>프로젝트를 선택한 후 우 클릭
      &gt;&gt; <emphasis role="bold">Anyframe Tools >> Anyframe IDE</emphasis> 메뉴를 선택한다.</para>
  </listitem>
   <listitem>
   <para>Anyframe IDE Editor에서 Domain Generation Tab을 선택한다. Refresh 버튼을
      수행하면 현재 선택 가능한 DB Table들과 소스 코드 패키지가 트리 형태로 조회된다. 이때 Domain 클래스로 생성하고자
      하는 Table을 선택하고, Domain 클래스를 어느 소스 코드 패키지 하위로 생성시킬 것인지를 선택한 후 Generate
      버튼을 클릭한다.</para>

      <para>참조관계에 있는 테이블의 경우 해당 테이블을 동시에 선택하여 Domain 클래스를 생성 해야 하며, 이를 통해
      참조관계에 관한 정보가 제공된다.</para>

      <itemizedlist>
        <listitem>
          <para>Select Tables: JDBC 구성에 따라 연결된 DB의 테이블 목록이 조회된다.</para>
        </listitem>

        <listitem>
          <para>Select a package: 해당 프로젝트에 있는 소스 코드 패키지 경로가
          조회된다.(src/main/java 소스 폴더에 한함)</para>
        </listitem>
       
      </itemizedlist>
<warning>
  <title>DB 타입이 mysql인 경우 테이블 선택 시 주의사항</title>
    <para>Anyframe IDE에서는 Hibernate Tools의 API를 이용하여 Domain 자동 생성기능을 지원하고 있다.
    DB가 mysql일 경우는 Hibernate Tools의 API에서 소문자로된 테이블명만 인식하므로,
    대문자로 된 테이블명을 선택하여 Domain 클래스 자동 생성 기능을 수행하는 경우 Domain 클래스가 생성되지 않을 수 있다.(Ant를 프로젝트 빌드도구로 사용하는 경우)
    </para>
</warning>
  </listitem>
  <listitem>
   <para>Domain 클래스 생성 작업이 완료되면, Console 창을 통해
   Build Successful 이라는 메세지가 출력된다.
   Domain 클래스가 제대로 생성되었는지 확인하기 위해 
   Domain 클래스 생성시 지정한 패키지 하위로 Domain 클래스들이 위치하고 있는지 확인한다.
   생성된 Domain 클래스는 JPA Annotation 설정을 통해 DB Table, Column 정보들을 가지고 있다.
   참고로, Build Successful 메세지가 출력되어도 해당 패키지에 Domain 클래스가 생성되지 않은 경우는 Domain 클래스가 정상적으로 생성되지 않은것이다.
   예를 들어, DB 타입이 mysql인 경우처럼 Hibernate Tools의 API가 인식하지 못하는 테이블명이 입력되었을 경우,
   Build Successful 메세지는 출력되지만 실제로 Domain 클래스는 생성되지 않는다. 
      </para>
		<programlisting language="java">@Entity
@Table(name = "BOARD")
<emphasis role="bold">//@Table의 schema 속성은 default 템플릿을 활용하여 
//sybase DB와 hibernate dao framework을 사용할때 정의됨
//@Table의 catalog 속성은 catalog 정보가 존재할 경우 정의됨</emphasis>
public class Board implements Serializable {
    private BoardId id;
    private BoardMaster boardMaster;
    private String boardName;
    중략...
    @EmbeddedId
    @AttributeOverrides({@AttributeOverride(name = "boardId",column = 
           @Column(name = "BOARD_ID",nullable = false)
        )
        , @AttributeOverride(name = "boardMasterId",column = 
           @Column(name = "BOARD_MASTER_ID",nullable = false)
        )
    })
    public BoardId getId() {
        return this.id;
    }
    public void setId(BoardId id) {
        this.id = id;
    }
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "BOARD_MASTER_ID", nullable = false, 
                insertable = false, updatable = false)
    public BoardMaster getBoardMaster() {
        return this.boardMaster;
    }
    public void setBoardMaster(BoardMaster boardMaster) {
        this.boardMaster = boardMaster;
    }
    @Column(name = "BOARD_NAME", nullable = false, length = 150)
    public String getBoardName() {
        return this.boardName;
    }
    public void setBoardName(String boardName) {
        this.boardName = boardName;
    }
}</programlisting>
      </listitem>
  </orderedlist>
  
<note>
<title>참고</title>
<para>위에서 설명한 기능 수행 도중에는 프로젝트 생성, 코드 생성 및 DB 변경 등과 같은 
  Anyframe IDE의 기능을 동시에 수행시킬 수 없으므로 유의하도록 한다. 
(Background 실행을 통한 기능 수행 시) </para>
</note>
  
</section>

<section id="eclipseplugin_crud">
	<title>CRUD Generation</title>

	<para>Anyframe IDE를 이용해 CRUD를 생성해본다.</para>

	<para>Domain 클래스를 중심으로 CRUD에 대한 기본 코드를 생성하고 자동으로 테스트 코드와 테스트 데이터를
		생성해줌으로써
		생성된 코드의 기능 확인까지 손쉽게 할 수 있다. 따라서, CRUD Generation 기능을 사용하기 전에
		Domain
		Generation 기능을 이용하여, 연결된 DB 테이블 기반의 Domain 클래스를 먼저 생성하도록 한다.
		Domain Generation 기능을 수행 할 때, 참조관계에 있는 테이블의 경우 
		해당 테이블을 동시에 선택하여 Domain 클래스를 생성하지 않으면,
		CRUD Generation 기능을 수행 할 때 에러가 발생하므로 주의한다.
	</para>

	<orderedlist numeration="arabic" inheritnum="inherit">
		<listitem>
			<para>프로젝트를
				선택한 후 우 클릭 &gt;&gt;
				<emphasis role="bold"> Anyframe Tools >> Anyframe IDE</emphasis>
				을
				선택한다.
			</para>
		</listitem>
		<listitem>
			<para>Anyframe IDE Editor에서 CRUD Generation Tab을 선택한다. Refresh 버튼을
				수행하면
				현재 선택 가능한 Domain 클래스 목록이 조회된다.</para>
		</listitem>
		<listitem>
			<para>CRUD 기능을 구현하고 싶은 Domain 클래스를 선택하고, CRUD Project Configuration
				내용을 입력한다.</para>

			<itemizedlist>
				<listitem>
					<para>CRUD Service: CRUD 기능이 구현될 서비스 명은 디폴트로 Domain 클래스명에 Service 붙인 이름이 지정되며 조회만
						가능하다.</para>
				</listitem>

				<listitem>
					<para>Package: CRUD가 생성될 패키지 이름이며, 특정 서브 시스템 하위로 코드를 생성하고 싶다면 중간
						패키지
						정보를 함께 입력하면 된다. (ex. sub.categories)</para>
				</listitem>

				<listitem>
					<para>Project Name: 프로젝트명으로 조회만 가능하다.</para>
				</listitem>

				<listitem>
					<para>Web source code generation: 비즈니스 레이어에 해당하는 소스 뿐 아니라 프리젠테이션
						레이어 소스 코드들도 함께 생성하고자 한다면 체크 박스에 체크하도록 한다. Service 타입 프로젝트의 경우, 이
						체크박스는 활성화 되지 않는다. </para>
				</listitem>
				
				<listitem>
					<para>Insert sample data into a database: 샘플 데이터를 생성하고자 한다면 체크 박스에 체크하도록 한다.</para>
				</listitem>
			</itemizedlist>
		</listitem>
		<listitem>
			<para>
				Generate 버튼을 클릭한 후, CRUD 소스코드 생성 작업이 완료되면, Console 창을 통해
   				Build Successful 이라는 메세지가 출력된다.
				CRUD 소스코드가 제대로 생성되었는지 확인하기 위해 
				Domain 클래스에 대한 비즈니스 서비스 인터페이스,구현 클래스, DAO 클래스,
				Spring 설정 파일들, 테스트
				코드, 테스트 데이터 등을 확인해본다. Web 타입 프로젝트에는 Spring MVC
				Controller 클래스, Spring
				MVC 설정 파일, 테스트 코드, JSP 페이지 등이 생성된다.
				참고로, CRUD 생성 후 소스파일에
				<inlinemediaobject>
					<imageobject>
						<imagedata align="center"
							fileref="../image/eclipseplugin/createapp-error.jpg" />
					</imageobject>
          			<textobject>
          				<phrase> </phrase>
          			</textobject>					
				</inlinemediaobject>
				표시가 뜨는 경우는, Anyframe Test Plugin이 없기 때문이다. Anyframe IDE
				Editor의 Installation 탭에서
				Anyframe Test Plugin을 다운받아 설치하면 해결된다.
				또한, Build Successful 이라는 메세지가 출력되었음에도, CRUD 소스 코드가 정상적으로 생성되지 않았다면,
				[프로젝트 Home]/target/classes 에 CRUD 소스코드 대상인 Domain 클래스에 대한 컴파일이 정상적이지 않거나,
				CRUD 소스코드 수행 시 필수적으로 필요한 폴더나 파일이 존재하지 않을 수도 있기 때문에
				프로젝트에 대한 빌드를 수행하거나, Console 창의 로그를 확인하여 필수적으로 필요한 폴더나 파일들을 확인하도록 한다.
				</para>
			<itemizedlist>
				<listitem>
					<para>
						<emphasis role="bold">서비스인터페이스</emphasis>
						(src/main/java/[대표패키지]/[-package 값]/service/[Entity
						클래스명]Service.java)
					</para>
					<programlisting language="java"><![CDATA[public interface BoardService{
    void create(Board board) throws Exception;
    void remove(BoardId id) throws Exception; 
    중략...           
}]]></programlisting>
				</listitem>
				<listitem>
					<para>
						<emphasis role="bold">서비스구현클래스</emphasis>
						(src/main/java/[대표패키지]/[-package 값]/service/impl/[Entity
						클래스명]ServiceImpl.java)
					</para>
					<programlisting language="java"><![CDATA[@Service("boardService")
@Transactional(rollbackFor = {Exception.class}, propagation = Propagation.REQUIRED)
public class BoardServiceImpl implements BoardService {
	    
    @Inject
    @Named("boardDao")
    private BoardDao boardDao;
	
    public void create(Board board) throws Exception{
        this.boardDao.create(board);
    }
    
    public void remove(BoardId id) throws Exception {
        this.boardDao.remove(id);
    }
    중략...    
}]]></programlisting>
				</listitem>

				<listitem>
					<para>
						<emphasis role="bold">DAO클래스</emphasis>
						(src/main/java/[대표패키지]/[-package 값]/service/impl/[Entity
						클래스명]Dao.java)
					</para>
					<programlisting language="java"><![CDATA[@Repository("boardDao")
public class BoardDaoQueryImpl extends QueryServiceDaoSupport {

    @Value("#{contextProperties['pageSize'] ?: 10}")
    int pageSize;
    
    @Value("#{contextProperties['pageUnit'] ?: 10}")
    int pageUnit;
    
    @Inject
    public void setQueryService(IQueryService queryService) {
        super.setQueryService(queryService);
    }
	
    /** {@inheritDoc} */
    public void create(Board board) throws Exception {
        super.create("createBoard", board);
    }
    /** {@inheritDoc} */
    public void remove(BoardId id) throws Exception {
        Board board = new Board();        
        board.setId(id);    
        super.remove("removeBoard", board);
    }
    중략...
}]]></programlisting>
				</listitem>

				<listitem>
					<para>
						<emphasis role="bold">매핑쿼리문</emphasis>
						(src/main/resources/sql/query/mapping-query-[Entity 클래스명].xml)
					</para>
					<programlisting language="xml"><![CDATA[<queryservice>
  <queries>
    <query id="createBoard">
      <statement>
        INSERT INTO BOARD (BOARD_ID, BOARD_DESC, BOARD_MASTER_ID, BOARD_NAME, 
               BOARD_ORDER, BOARD_TOPICS, REG_DATE) 
        VALUES (:vo.id.boardId, :vo.boardDesc, :vo.id.boardMasterId, :vo.boardName, 
               :vo.boardOrder, :vo.boardTopics, :vo.regDate)
      </statement>
    </query>
    중략...
  </queries>
</queryservice>]]></programlisting>
				</listitem>

				<listitem>
					<para>
						<emphasis role="bold">MessageSoruce</emphasis>
						(src/main/resources/message/message-generation.properties)
					</para>
					<programlisting><![CDATA[# -- Board-START
board.id.boardId=Board Id		
board.id.boardMasterId=Board Master Id		
board.boardDesc=Board Desc
board.boardName=Board Name
board.boardOrder=Board Order
board.boardTopics=Board Topics
board.regDate=Reg Date

# -- success messages -- 
success.board.create=Board has been added successfully.
success.board.update=Board has been updated successfully.
success.board.delete=Board has been deleted successfully.

# -- error messages --
error.boardserviceimpl.create=Board data not created
error.boardserviceimpl.create.solution=Enter correct data for mandatory field 
or enter data according to formats means date format as yyyy-mm-dd
error.boardserviceimpl.create.reason=Entered incorrect data for Board
중략...]]></programlisting>
				</listitem>

				<listitem>
					<para>
						<emphasis role="bold">통합 test case</emphasis>
						(src/test/java/[대표패키지]/[-package 값]/service/[Entity
						클래스명]ServiceTest.java)
					</para>
					<programlisting language="java"><![CDATA[@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "file:./src/main/resources/spring/context-*.xml" })
public class BoardServiceTest{

    @Inject
    @Named("boardDao")
    private BoardDao boardDao;

    @Test
    @Rollback(value=true)	    
    public void manageBoard() throws Exception {
        // 1. create a new board
         Board board = getBoard();
            
        if(boardService.get(board.getId()) != null)
                boardService.remove(board.getId());

        boardService.create(board);
        중략...
    }
    중략...
}]]></programlisting>
				</listitem>

				<listitem>
					<para>
						<emphasis role="bold">컨트롤러</emphasis>
						(src/main/java/[대표패키지]/[-package 값]/web/[Entity
						클래스명]Controller.java)
					</para>
					<programlisting language="java"><![CDATA[@Controller
@RequestMapping("/board.do")
public class BoardController {

    /**
     * Resource Injection on BoardService
     */
    @Inject
    @Named("boardService")
    private BoardService boardService;

    중략...    

    /**
     * Display form for adding Board.
     * @param model model containing control data
     * @return the prepared form view
     * @throws Exception in case of an invalid new form object
     */ 
    @RequestMapping(params = "method=createView")  
    public String createView(Model model) throws Exception 
    {        
        model.addAttribute(new Board());
		        
        return "genViewBoard";        
    }
}]]></programlisting>
				</listitem>


				<listitem>
					<para>
						<emphasis role="bold">UI JSP 파일</emphasis>
						(src/main/webapp/WEB-INF/jsp/[Entity 클래스 명]/*.jsp)
					</para>
					<programlisting><![CDATA[<%@ page language="java" errorPage="/sample/common/error.jsp" pageEncoding="UTF-8" contentType="text/html;charset=utf-8" %>
<%@ include file="/sample/common/top.jsp"%>
		<div class="location"><a href="<c:url value='/anyframe.jsp'/>">Home</a> &gt; <a href="<c:url value='/boardF.do?method=list'/>">Board</a></div>
    </div>
    <hr />
<script type="text/javascript" src="<c:url value='/sample/javascript/CommonScript.js'/>"></script>    
<script type="text/javascript">
	function fncCreateBoardView() {
		document.location.href="<c:url value='/board.do?method=createView'/>";
	}		
중략...]]></programlisting>
				</listitem>

				<listitem>
					<para>
						<emphasis role="bold">단위 test case</emphasis>
						(src/test/java/[대표패키지]/[-package 값]/web/[Entity
						클래스명]ControllerTest.java)
					</para>
					<programlisting language="java"><![CDATA[@RunWith(JMock.class)
public class BoardControllerTest {

    private BoardController controller;
    private String SUCCESS_CREATEVIEW = "genViewBoard";
    private String SUCCESS_CREATE = "redirect:/board.do?method=list";
    private String SUCCESS_GET = "genViewBoard";
    private String SUCCESS_UPDATE = "redirect:/board.do?method=list";
    private String SUCCESS_LIST = "genListBoard";
    private String SUCCESS_REMOVE = "redirect:/board.do?method=list";
    private Mockery context = new JUnit4Mockery();
    private BoardService mockService = null;
	
    @Before   
    public void setUp() throws Exception {
        System.setProperty("log4j.configuration", "log4j-test.xml");

        this.mockService = context.mock(BoardService.class);                
        this.controller = new BoardController();
        this.controller.setBoardService(this.mockService);       
    }
    
    public void setBoardController(BoardController controller) {
        this.controller = controller;
    }
        
    @Test
    public void testCreateView() throws Exception{
        String viewName = this.controller.createView(new ExtendedModelMap());
        
        assertEquals("returned correct view name", SUCCESS_CREATEVIEW, viewName);
   }
        중략...]]></programlisting>
				</listitem>
			</itemizedlist>
		</listitem>
	</orderedlist>
	<note>
		<title>참고 1</title>
		<para>위에서 설명한 기능 수행 도중에는 프로젝트 생성, 코드 생성 및 DB 변경 등과 같은
			Anyframe IDE의 기능을
			동시에 수행시킬 수 없으므로 유의하도록 한다.
			(Background 실행을 통한 기능 수행 시) </para>
	</note>
	<note>
		<title>참고 2</title>
		<para>
			CRUD 소스 코드 생성은 Domain 클래스를 기반으로 이루어지는데, 이를 위해 Domain 클래스를 포함한 전체
			프로젝트의
			소스 코드를 컴파일을 한 후 컴파일된 Domain 클래스를 이용하여 코드를 생성한다. 그러므로 프로젝트 내 소스
			코드의 양이 많아
			CRUD 소스 코드 생성 시 컴파일에 걸리는 시간이 많이 소요되는 경우, [Anyframe
			Home]/ide/cli/scripts 폴더 내에 있는 code-generation.xml 파일에서
			"create-crud"
			target 내에 정의된 다음 clean target을 호출해주는 부분을 제거해주도록 한다.
			clean target에서는
			기존에 컴파일된 모든 소스 코드를 삭제한 후 이후 compile target에서 새로 전체
			소스 코드를 컴파일하게 되므로 소스
			코드의 양이 많을 경우 시간이 많이 소요될 수 있다. 속도 향상을 위해서 clean
			target을 제거하는 경우
			incremental
			build를 수행하는 compile target에 의해 변경된 소스 코드만 컴파일되므로 시간이 적게
			소요된다.
				</para>
		<programlisting language="java"><![CDATA[<ant antfile="build.xml" dir="${project.home}" target="clean"/>]]></programlisting>
	</note>
	<section id="eclipse_source_note">
			<title>CRUD 소스코드 생성 후 런타임 시 발생하는 에러 해결 Tip</title>
			<para>CRUD 소스코드는 정상적으로 생성되었지만 런타임시에 발생할 수 있는 문제에 대한 해결방법은
			[<link linkend="commands_maven_source_crud_note">CRUD 소스코드 생성 후 런타임 시 발생하는 에러 해결 Tip</link>]을 참조한다.
			 </para>
	</section>
</section>

<section id="eclipseplugin_configuration">
  <title>Configuration </title>

  <para>Anyframe IDE를 사용하기 위해 Project Location 확인 및 Template, DAO Frameworks
   정보를 설정한다. </para>

  <para>프로젝트는 기본적으로 SpringJDBC DAO Framework을 사용하도록 설정되어 있으며,
  Hibernate/JPA으로 DAO Framework 설정을 변경하고 싶을 경우 Installation Tab에서 Hibernate
  Plugin을 설치해야 한다. Hibernate/JPA Plugin이 설치되어 있지만 예외적으로 template이 miplatform 이나 xplatform으로 설정되어 있는  
  경우는 Hibernate/JPA Framework을 사용할 수 없다. </para>

  <para>Template은 기본적으로 default, miplatform, xplatform이 제공되는데, 
  Installation Tab에서 mip-query Plugin을 설치한 경우에 miplatform Template을 사용할 수 있다. 또한 xp-query Plugin을 설치한 경우에 xplatform Template을 사용할 수 있다.</para>

<orderedlist numeration="arabic" inheritnum="inherit">
<listitem>
   <para>프로젝트를 선택한 후 우 클릭
      &gt;&gt; <emphasis role="bold">Anyframe Tools >> Anyframe IDE</emphasis> 을 선택한다. </para>
</listitem>
<listitem>
  <para>Anyframe IDE Editor에서 Configuration Tab을 선택하고 프로젝트 경로 확인 및 Template, DAO
      Framework 정보를 구성한다. </para>

      <itemizedlist>
        <listitem>
          <para>Project Location: 현재 프로젝트가 생성된 위치정보가 보인다. </para>
        </listitem>
        <listitem>
          <para>Template Selection: 소스코드 template을 설정하기 위한 섹션으로 Maven 프로젝트 일 경우에만 Template Home 경로를 변경할 수 있는 기능이 추가로 제공된다. 
          	<itemizedlist>
			  <listitem>
			  	<para>Template Home: Maven 프로젝트 일 경우에만 활성화 되는 부분으로, Template 홈 경로를 변경할 수 있다. 
			  	Ant 프로젝트 일 경우는 [Anyframe 을 설치한 root 폴더 경로]/templates 가 template home 경로로 되며, 
			  	화면에서 변경할 수 없다.</para>
			  </listitem>
			  <listitem>
			  	<para>Template Type: Template Home 경로 하위에 있는 template을 리스트로 보여주며, 
			  	기본적으로 default template이 지원된다. 
			  	default template은 Spring/SpringMVC 등으로 구성된 소스 코드 template이 제공된다. 
			  	Mip-Query Plugin을 설치한 경우 miplatform template을 선택할 수 있으며, xp-query Plugin을 설치한 경우 xplatform template도 선택할 수 있다.
			  	miplatform template 와 xplatform template의 경우 PID(Presentation Interface Developer)가 설치되어 있어야 생성된 소스가 정상적으로 동작한다.
			  	</para>
			  </listitem>
			  
			  </itemizedlist>
        </para>
        </listitem>
        <listitem>
          <para>DAO Frameworks: SpringJDBC, Query Service, Hibernate/JPA, iBatis2, MyBatis 중에 하나를 선택할 수 있고,
          Hibernate/JPA는 Hibernate Plugin을 설치한 이후에 선택이 가능하다. miplatform, xplatform
          Template의 경우 Query Service만 지원된다. default Template의 경우에 5가지 DAO Framework을 모두 사용할 수 있다.</para>
        </listitem>
      </itemizedlist>

</listitem>
<listitem>
  <para>입력정보 작성이 끝나면 반드시 Apply 버튼을 클릭하여 Configuration 정보가 저장되도록 한다. 구성한
      정보가 정상적으로 반영되었는지 확인하기 위해서는 탐색기에서 선택한 프로젝트 경로로 이동하여,
      project.mf 파일내의 project.daoframework(DAO Frameworks),
      project.template.home(Template Home 경로), project.template(Template Type) 항목의 값을 확인해본다. 
      정상적으로 반영이 되었다면, 해당 항목의 값이 입력한
      값들로 변경되어 보일 것이다. 참고로, project.home은 프로젝트 경로 정보이다. </para>
</listitem>
 </orderedlist>
</section>

<section id="eclipseplugin_jdbc">
  <title>JDBC Setting</title>

  <para>Anyframe IDE의 Domain 클래스를 생성 기능을 사용하기 위해서 DB 연결정보를 설정한다.</para>
  

<orderedlist numeration="arabic" inheritnum="inherit">
<listitem>
    <para>프로젝트를 선택한 후 우 클릭
      &gt;&gt; <emphasis role="bold">Anyframe Tools >> Anyframe IDE</emphasis> 을 선택한다.</para>
</listitem>
<listitem>
   <para>Anyframe IDE Editor에서 JDBC Setting Tab을 선택하고 JDBC 연결정보를
      입력한다.</para>
      
      <itemizedlist>
	      <listitem>
	      <para>JDBC Configuration </para>
	      <itemizedlist>
	        <listitem>
	          <para>Database Type: Database 타입으로 hsqldb, oracle, mysql, db2, sybase, mssql 를
	          제공하고 있다.</para>
	        </listitem>
	
	        <listitem>
	          <para>Database Name: Database의 이름</para>
	        </listitem>
	
	        <listitem>
	          <para>User Name: DB user 이름</para>
	        </listitem>
	
	        <listitem>
	          <para>Password: 패스워드</para>
	        </listitem>
	
	        <listitem>
	          <para>Server: DB가 설치된 서버 ip 정보, 로컬에서 사용하는 경우 localhost</para>
	        </listitem>
	
	        <listitem>
	          <para>Port: hsqldb의 경우 -1, oracle의 경우 1521, mysql의 경우 3306, sybase는
	          3000, db2의 경우 50000, mssql의 경우 1433</para>
	        </listitem>
	
	        <listitem>
	          <para>Hibernate Dialect: Hibernate에서 쿼리 수행 시, DBMS에 최적화된 기능을 제공하기 위해
	          사용되는 것이 SQL Dialect 이며, 이 Dialect 프라퍼티를 사용하여 해당 DB 별 Dialect 정보를 설정할
	          수 있다. 각 DB 별 Dialect 클래스가 따로 존재하여 hsqldb를 선택한 경우, 디폴트로
	          org.hibernate.dialect.HSQLDialect값이 선택된다.(oracle, mysql, db2, sybase, mssql
	          Dialect 도 제공함)</para>
	        </listitem>
	
	        <listitem>
	          <para>Driver Class Name: DB의 드라이버 클래스를 설정해 주기 위한 값으로, hsqldb의 경우
	          org.hsqldb.jdbcDriver 값으로 설정된다. Database Type 선택 시 해당 DB에 맞는 값이
	          세팅된다.</para>
	        </listitem>
	
	        <listitem>
	          <para>Driver Jar Path: Anyframe IDE 설치 시 샘플 DB를 위한 hsqldb driver
	          jar 파일이 제공되므로 디폴트로 설정된다. 만약 다른 DB를 사용한다면 해당 DB의 Driver jar 파일로
	          연결시켜준다.</para>
	        </listitem>
	        
	        <listitem>
	          <para>Schema: DB 스키마의 이름</para>
	        </listitem>
	      </itemizedlist>
	      </listitem>
	      
	      <listitem>
	      	<para>JDBC Driver Artifact Setting : Maven 프로젝트 일 경우에만 활성화 됨.</para>
	      	<itemizedlist>
	      		<listitem>
	      			<para>Group Id: jdbc driver 의 group id</para>
	      		</listitem>	
	      		<listitem>
	      			<para>Artifact Id: jdbc driver 의 artifact id</para>
	      		</listitem>
	      		<listitem>
	      			<para>Version: jdbc driver의 version</para>
	      		</listitem>
	      	</itemizedlist>
	      </listitem>
      </itemizedlist>

</listitem>
<listitem>
    <para>입력정보 작성이 끝나면 반드시 Apply 버튼을 클릭하여 JDBC Configuration 정보가 저장되도록
      한다.</para>

      <para>Schema 정보를 리스트에서 선택하지 않고 Apply 버튼을 클릭할 경우, Schema 를 선택하라는 메시지가
      출력된다. Schema 를 제외한 나머지 JDBC Configuration 정보가 정상적인 경우 Schema 정보를 얻어올 수
      있으며, 얻어온 리스트에서 Schema 를 선택하여 Apply 하면 Configuration 정보가 반영된다.</para>
      
      <para>Schema 정보를 얻어오기 위해 시도 했으나, DB 연결이 정상적으로 되지 않는 경우에는 실패원인을 알려주는 메세지가 출력된다.</para>

      <para>JDBC 환경 설정 정보가 정상적으로 구성되어 DB와 잘 연결되는지 확인하기 위해서는 Domain Generation
      Tab으로 이동하여 Refresh 버튼을 클릭해본다. 이때 정상적으로 연결이 잘 되는 경우라면 해당 DB의 Table들이 조회될
      것이다.</para>
</listitem>
</orderedlist>
<note>
<title>참고</title>
<para>위에서 설명한 기능 수행 도중에는 프로젝트 생성, 코드 생성 및 DB 변경 등과 같은 
  Anyframe IDE의 기능을 동시에 수행시킬 수 없으므로 유의하도록 한다. 
(Background 실행을 통한 기능 수행 시) </para>
</note>
</section>

<section id="eclipseplugin_anyframeplugin">
  <title>Anyframe Plugin Installation</title>

  <para>Anyframe IDE에서 Anyframe에서 제공하는 Plugin을 Install/Uninstall 하기 위해서
  사용한다. Plugin을 설치하면 해당 Plugin과 연관된 라이브러리가 설치되며, 일부 Plugin의 경우 샘플코드를 제공하고 있다.
제공되는 샘플코드를 라이브러리와 함께 설치하고 싶은 경우, "Install plugins with sample"에 체크한다.</para>
<orderedlist numeration="arabic" inheritnum="inherit">
<listitem>
    <para>프로젝트를 선택한 후
      우 클릭 &gt;&gt; <emphasis role="bold">Anyframe Tools >> Anyframe IDE</emphasis> 을
      선택한다.</para>
</listitem>
<listitem>
    <para>Anyframe IDE Editor에서 Installation Tab을 선택하면 다음과 같은 항목이
      보인다.</para>

      <itemizedlist>
      	<listitem>
          <para>Update list: Remote Anyframe Repository로 부터 Anyframe Plugin 목록 파일을 update 받는 기능이 수행된다.
          디폴트로 update된 파일(plugin-catalog-X.X.X.xml)은 [사용자 계정 홈 디렉토리]/.anyframe 폴더 하위에 존재하게 된다.   
          </para>
        </listitem>
      
        <listitem>
          <para>!: Install/Uninstall 할 대상을 체크하는 부분으로 다수의 Plugin을 선택할 수 있다. </para>
        </listitem>

        <listitem>
          <para>Plugin Name: Plugin 명</para>
        </listitem>

        <listitem>
          <para>Group Id: Plugin Library의 Group 명</para>
        </listitem>

        <listitem>
          <para>Artifact Id: Plugin Library 명</para>
        </listitem>
        
        <listitem>
          <para>Latest: Plugin의 최신 버전 </para>
        </listitem>

        <listitem>
          <para>Installed: 설치된 Plugin 버전</para>
        </listitem>
        <listitem>
          <para>Install plugins with sample: 샘플코드를 라이브러리와 함께 설치하고 싶은 경우 체크박스에 체크하며,Service 타입 프로젝트에서는 비활성화 된다. 
           </para>
        </listitem>
        
      </itemizedlist>

      
</listitem>
<listitem>
  <para>설치 또는 제거할 Plugin 항목을 체크한 후, Install 혹은 Uninstall 버튼을 클릭한다.
  이 때, tomcat은 stop 시킨 상태에서 수행하도록 한다. 그렇지 않은경우,
      동작은 정상적으로 수행되나, 아래 4번 내용과 같은 에러가 발생하게 된다.
  </para>
  
  <itemizedlist>
  	<listitem>
  		<para>Install :
			Web 타입 프로젝트에서 해당 Plugin과 샘플이 함께 설치된 경우, 
			적용된 Plugin 샘플은 프로젝트를 실행시켜봄으로써 확인할 수 있다.
			샘플 실행방법은[ <link linkend="eclipseplugin_newapplication_sec003">New Project Creation</link>]의 
			프로젝트 실행방법 내용을 참조한다. 
  		</para>
  		<itemizedlist>
  			<listitem>
  				<para>metadata 정보확인: 프로젝트 폴더 &gt;&gt; META-INF 폴더&gt;&gt; plugin-installed.xml 파일에 설치한 Plugin에 대한 정보가 추가된다.
  				</para>
  				<programlisting><![CDATA[<plugins>
  <plugin name="core">
    <groupId>org.anyframe.plugin</groupId>
    <artifactId>anyframe-core-pi</artifactId>
    <version>x.x.x</version>
    <essential>true</essential>
    <checked>false</checked>
  </plugin>
</plugins>]]></programlisting>
  			</listitem>
  			<listitem>
  				<para>Ant 프로젝트</para>
  				<itemizedlist>
  					<listitem>
  						<para>Web 타입: 프로젝트 Web App Libraries에 라이브러리 추가.</para>
  					</listitem>
  					<listitem>
  						<para>Service 타입: [프로젝트 Home]/lib에 라이브러리 추가되고, .classpath에 클래스패스가 추가됨.</para>
  						<programlisting><![CDATA[중략...
<classpathentry kind="lib" path="lib/anyframe-hibernate-x.x.x.jar"/> 
<classpathentry kind="lib" path="lib/spring-orm-3.0.4.RELEASE.jar"/> 
<classpathentry kind="lib" path="lib/antlr-2.7.7.jar"/> 
<classpathentry kind="lib" path="lib/xstream-1.3.jar"/> 
<classpathentry kind="lib" path="lib/dom4j-1.6.1.jar"/> 
<classpathentry kind="lib" path="lib/adapter-core-1.2.jar"/> 
<classpathentry kind="lib" path="lib/hibernate-util-1.2.jar"/> 
<classpathentry kind="lib" path="lib/javassist-3.8.0.GA.jar"/> 
<classpathentry kind="lib" path="lib/jboss-serialization-1.0.1.GA.jar"/> 
<classpathentry kind="lib" path="lib/beanlib-5.0.1beta.jar"/> 
<classpathentry kind="lib" path="lib/beanlib-hibernate-5.0.1beta.jar"/> 
<classpathentry kind="lib" path="lib/ehcache-2.2.0.jar"/> 
<classpathentry kind="lib" path="lib/hibernate-3.5.3-Final.jar"/> 
<classpathentry kind="lib" path="lib/trove-1.0.2.jar"/>]]></programlisting>
  					</listitem>
  				</itemizedlist>
  			</listitem>
  			<listitem>
  				<para>Maven 프로젝트 : 설치한 Plugin과 관련된 라이브러리 정보가 pom.xml 의 &lt;dependency&gt;에 추가됨.</para>
  			</listitem>
  		</itemizedlist>
  	</listitem>
  	
  	<listitem>
  		<para>Uninstall : Installed 항목에서 X표시가 되며, 다음과 같은 방법으로 확인 할 수 있다.</para>
  		<itemizedlist>
  			<listitem>
  				<para>metadata 정보확인: 프로젝트 폴더 &gt;&gt; META-INF 폴더&gt;&gt; plugin-installed.xml 파일에서 해당 Plugin에 대한 정보가 제거된다.
  				</para>
  			</listitem>
  			<listitem>
  				<para>Ant 프로젝트</para>
  				<itemizedlist>
  					<listitem>
  						<para>Web 타입: 프로젝트 Web App Libraries에 라이브러리 삭제.</para>
  					</listitem>
  					<listitem>
  						<para>Service 타입: [프로젝트 Home]/lib에 라이브러리 삭제되고, .classpath에 클래스패스가 삭제됨.</para>
  					</listitem>
  				</itemizedlist>
  			</listitem>
  			<listitem>
  				<para>Maven 프로젝트 : 설치한 Plugin과 관련된 라이브러리 정보가 pom.xml 의 &lt;dependency&gt;에 삭제됨.</para>
  			</listitem>
  			<listitem>
  				<para>프로젝트 하위로 uninstalled 폴더가 생겨나고, 그 하위로 "yyyyMMddHHmmss" 패턴에 해당하는 시간 별 폴더가 생겨나고 이 폴더 내에 uninstall 대상이 되는 파일들이 백업용으로 남게 된다. </para>
  			</listitem>
  		</itemizedlist>
  	</listitem>
  </itemizedlist>
  </listitem> 

      
<listitem>
  <para>Plugin Install/Uninstall 시에 다음 그림과 같은 메시지가 뜨는 경우는 tomcat이 실행된 상태에서
      tomcat이 인식하고 있는 파일에 변경이 있는 경우에 발생하는 것이다.</para>

      <para>아래와 같은 메시지는 Plugin Install/Uninstall/update 전에 tomcat 동작을 stop 시킬 경우에는 뜨지
      않는다.</para>

      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="../image/eclipseplugin/installation-jar-lock.jpg" />
        </imageobject>
		  <textobject>
		    <phrase>Eclipse 오류창의 모습으로써 Tomcat으로 Publishing 하던 중 오류가 발생하였음을 표현하고 있다.</phrase>
		  </textobject>         
      </mediaobject>
</listitem>
</orderedlist>
<note>
<title>참고</title>
<para>위에서 설명한 기능 수행 도중에는 프로젝트 생성, 코드 생성 및 DB 변경 등과 같은 
  Anyframe IDE의 기능을 동시에 수행시킬 수 없으므로 유의하도록 한다. 
(Background 실행을 통한 기능 수행 시)  
</para>
</note>

</section>

<section id="eclipseplugin_ctip">
  <title>CTIP</title>

  <para>IDE에서 CTIP 서버(Hudson,Jenkins)를 연결하여 CTIP 서버에 job을 등록하고 job을 실행하기 위해서 사용한다.
	CTIP 서버와 통신을 하기 위해서는 anyframe-ide-eclipse-hudson-X.X.X.jar 파일을 이용해 설정을 해야 한다. 
	설치 및 설정과 관련된 자세한 사항은 Continuous Build Server의 [<link linkend="ctip_installation">Installation</link>]과 [<link linkend="ctip_integration">Build Server 연계</link>]을 참조한다.</para>
<orderedlist numeration="arabic" inheritnum="inherit">
<listitem>
    <para>프로젝트를 선택한 후
      우 클릭 &gt;&gt; <emphasis role="bold">Anyframe Tools >> Anyframe IDE</emphasis> 을
      선택한다.</para>
</listitem>
<listitem>
    <para>Anyframe IDE Editor에서 CTIP Tab을 선택하면 다음과 같은 항목이
      보인다.</para>

      <itemizedlist>
        <listitem>
          <para>CTIP URL</para>
          <mediaobject>
	        <imageobject>
	          <imagedata align="center" fileref="../image/eclipseplugin/ctip-url.jpg" />
	        </imageobject>
			  <textobject>
			    <phrase>Anyframe IDE Editor의 CTIP Tab 화면 내의 CTIP URL 목록을 보여주는 항목을 캡춰한 그림으로써 접근 가능한 CTIP URL 목록이 보여지고 있다.</phrase>
			  </textobject>  	        
	      </mediaobject>
	      <itemizedlist>
	      	<listitem><para>URL: CTIP 서버에 접근하기 위한 url</para></listitem>
	      	<listitem><para>Configure...: CTIP 서버에 접근하기 위한 url을 등록,수정,삭제 등 관리하기 위한 팝업 화면 호출</para></listitem>
	      </itemizedlist>
        </listitem>

        <listitem>
          <para>CTIP Configuration</para>
          <mediaobject>
	        <imageobject>
	          <imagedata align="center" fileref="../image/eclipseplugin/ctip-configuration.jpg" />
	        </imageobject>
			  <textobject>
			    <phrase>Anyframe IDE Editor의 CTIP Tab 화면 내의 CTIP Configuration 항목을 캡춰한 그림으로써 MAVEN_HOME, CTIP URL 정보가 보여진다.</phrase>
			  </textobject>  	        
	      </mediaobject>
	      <itemizedlist>
	      	<listitem><para>MAVEN_HOME: 프로젝트에서 Maven 빌드도구를 사용하는 경우 보여지며, Maven이 설치된 경로로 설정</para></listitem>
	      	<listitem><para>ANT_HOME: 프로젝트에서 Ant 빌드도구를 사용하는 경우 보여지며,  Ant가 설치된 경로로 설정</para></listitem>	      	
	      	<listitem><para>CTIP URL in Email: CTIP Email Notification 시 사용할 url</para></listitem>
	      </itemizedlist>
        </listitem>

       <listitem>
          <para>All projects</para>
          <mediaobject>
	        <imageobject>
	          <imagedata align="center" fileref="../image/eclipseplugin/ctip-allpjt.jpg" />
	        </imageobject>
			  <textobject>
			    <phrase>Anyframe IDE Editor의 CTIP Tab 화면 내의 전체 프로젝트 목록 조회 항목을 캡춰한 그림으로써 빌드 대상이 되는 프로젝트 목록이 보여지고 있다.</phrase>
			  </textobject> 	        
	      </mediaobject>
	      <itemizedlist>
	      	<listitem><para>Project name: ctip job name</para></listitem>
	      	<listitem><para>Status: job 수행 상태로, job을 빌드 하는 중일 경우 building라는 메세지가 출력됨</para></listitem>
	      	<listitem><para>New : 새로운 job 추가</para></listitem>
	      	<listitem><para>Remove : job 삭제</para></listitem>
	      	<listitem><para>Run : job 실행</para></listitem>
	      </itemizedlist>
        </listitem>

        <listitem>
          <para>Project Details</para>
          <mediaobject>
	        <imageobject>
	          <imagedata align="center" fileref="../image/eclipseplugin/ctip-pjtdetails.jpg" />
	        </imageobject>
			  <textobject>
			    <phrase>Anyframe IDE Editor의 CTIP Tab 화면 내의 선택된 프로젝트 상세 정보 조회 항목을 캡춰한 그림으로써 
			    myproject_report라는 프로젝트의 Subversion 정보, Build Schedule 등이 보여지고 있다.</phrase>
			  </textobject> 	        
	      </mediaobject>
	      <itemizedlist>
	      	<listitem><para>Build Type* : build는 빌드를 수행하고 배포파일 생성, report는 build 기능에 JUnit test, Emma, Jdepend, PMD등의 reporting 기능도 수행</para>
	      	<informaltable>
								<caption>Build Type</caption>
	
								<tgroup cols="3">
									<colspec colnum="1" colname="col1" colwidth="1*"/>
									<colspec colnum="2" colname="col2" colwidth="5*"/>
									<colspec colnum="3" colname="col3" colwidth="1*"/>
									<thead>
										<row>
											<entry align="center">Type</entry>
											<entry align="center">build</entry>
											<entry align="center">report</entry>
										</row>
									</thead>
									<tbody>
										<row>
											<entry>
												Ant(target)
											</entry>
											<entry align="center">
												deploy
											</entry>
											<entry align="center">all</entry>
										</row>
										<row>
											<entry>
												Maven(goal)
											</entry>
											<entry align="center">
												package
											</entry>
											<entry align="center">clean site package</entry>
										</row>
									</tbody>
								</tgroup>
							</informaltable>	      	
	      	</listitem>
	      	<listitem><para>Project Name* : ctip job name</para></listitem>
	      	<listitem><para>Custom Workspace : workspace 경로지정</para></listitem>
	      	<listitem><para>SCM Server Type : subversion, cvs, none 세가지 type 중 선택</para></listitem>
	      	<listitem><para>SCM Server URL : SCM 서버 url</para></listitem>
	      	<listitem><para>Poll SCM schedule : job 실행 스케쥴 정의</para></listitem>
	      	<listitem><para>Build other project : 해당 job 수행 후 실행한 job의 이름 지정</para></listitem>
	      </itemizedlist>
        </listitem>
      </itemizedlist>

      
</listitem>
<listitem>
  <para>빌드를 수행할 job을 목록에서 선택하고 Run 버튼을 클릭하여 빌드를 수행한다.</para>

      <para>빌드가 수행되면 Status는 "building"로 보여진다. 
      빌드 Status에 대해 scheduling이 걸려있지 않기 때문에, <emphasis role="bold">빌드 결과는 refresh 버튼을 클릭하여 확인</emphasis>한다.</para>
	  <para>빌드가 다 수행이 되면 refresh 버튼을 눌렀을때 빌드 결과에 대한 이미지가 보여진다. 성공은 파란색, 실패는 빨간색. </para>

      <para>Web 타입 프로젝트의 경우 해당 Plugin과 샘플이 함께 설치되며, 해당 Plugin 적용된 샘플은
      프로젝트를 실행시켜봄으로써 확인할 수 있다. Service 타입 프로젝트의 경우 해당 Plugin의 라이브러리만 설치된다.</para>
</listitem>
</orderedlist>  
<note>
<title>참고</title>
<para>위 화면을 통해서 test case 가 없는 프로젝트에 대해서 job을 생성한 후 빌드했을 때,
FAILURE가 발생한다. 이는 에러는 아니지만 test case에 대해 recording을 하기 위해,
Junit, Emma Plugin이 출력하는 메세지이므로 test case를 사용하지 않을 경우 해당 Plugin을 사용하지 않도록 설정해주어야 한다.
"[프로젝트명]_report" job의 configure에서 "Publish JUnit test result report", "Record Emma coverage report"
action을 uncheck 한다.
</para>
</note> 

<note>
<title>Job 빌드 시 메모리 부족으로 Fail 한 경우</title>
<para>등록한 job에 대해 빌드 수행시 다음과 같은 에러가 발생 할 경우 환경변수에 MAVEN_OPTS를 -Xmx1024m으로 추가 설정해준다.</para>

<itemizedlist>
  <listitem><para>환경변수 설정
  <programlisting language="xml"><![CDATA[변수이름 : MAVEN_OPTS
변수 값 : -Xmx1024m]]></programlisting>  
  </para></listitem>
  <listitem><para>콘솔에 출력된 에러로그
  <programlisting language="xml"><![CDATA[Error occurred during initialization of VM
Could not reserve enough space for object heap
Could not create the Java virtual machine
...]]></programlisting> 
  </para></listitem>
</itemizedlist>
</note>   

</section>

<section id="eclipseplugin_project">
  <title>Project Build </title>

  <para>Anyframe IDE 을 이용해 프로젝트 빌드를 수행할 수 있다. </para>

  <para>프로젝트 생성 시에 빌드 스크립트 파일이 함께 생성되어, 빌드를 수행할 수 있다. 빌드 도구로 Ant를 사용할 경우
  default target 빌드 수행 시 컴파일, 테스트, 패키징, 배포 등의 공통적인 빌드 프로세스 단계를 수행해주고 있다. 
  Maven 프로젝트의 경우 pom.xml 파일을 이용하여 빌드 및 패키징, 리포팅을 수행할 수 있다.</para>

  <para>아래의 두 가지 경우로 나누어서 살펴보자. </para>

  <itemizedlist>
    <listitem>
      <para>[<link linkend="eclipseplugin_project_sec002">Maven 프로젝트 빌드</link>]</para>
    </listitem>
    
    <listitem>
      <para>[<link linkend="eclipseplugin_project_sec001">Ant 프로젝트 빌드</link>]</para>
    </listitem>
  </itemizedlist>

  <section id="eclipseplugin_project_sec002">
    <title>Maven 프로젝트 빌드</title>

    <para>프로젝트 내 pom.xml 확인</para>

    <para>Maven은 pom.xml 파일을 기반으로 빌드되기 때문에 파일에 정의되어 있는 내용 확인한다.
    Reporting을 위해서는 <![CDATA[<reporting>]]>에 report를 남기고 싶은 Plugin들이 정의되어 있어야 하며, 
    Anyframe IDE을 통해서 생성된 Maven 프로젝트에는 Junit Test, Emma, Jdepend, PMD 등의 reporting Plugin이 추가되어 있다. </para>
    
    <para>다음은 Web 타입 프로젝트에 생성된 pom.xml 의 일부분이다.</para>
    <programlisting language="xml"><![CDATA[<reporting>
    <excludeDefaults>true</excludeDefaults>
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.5</version>
            <configuration>
                <forkMode>always</forkMode>
            </configuration>
        </plugin>
        중략...
</reporting>]]></programlisting>

    <para>프로젝트 내 pom.xml 선택 후 &gt;&gt; Run As &gt;&gt; Maven Build...을 선택</para>
    
    <para>Goals 에 <emphasis role="bold">clean package</emphasis> 를 수행하게 되면 빌드 수행결과 파일 및 Web 타입 프로젝트일 경우 war 파일이, 
    Service 타입 프로젝트일 경우 jar 파일이 생성되고, 
    <emphasis role="bold">clean site package</emphasis> 를 수행하게 되면 리포트 결과물도 함께 생성되게 된다.
빌드 결과물은 [프로젝트 Home]/target에 존재하며, 리포트 결과물은 [프로젝트 Home]/target/site/내에 존재한다.
    </para>
    
    <para>만약 M2Eclipse 를 이용하여 이를 수행하였을 때 "site" goal이 정상적으로 수행이 안 된다면, pom.xml 파일이 있는 경로에서 위와 같은 goal을 cmd창을 통해 수행한다.</para>

  </section>
  
  <section id="eclipseplugin_project_sec001">
    <title>Ant 프로젝트 빌드</title>

    <orderedlist>
      <listitem>
        <para>프로젝트 내 build.xml 확인 </para>

        <para>프로젝트 내부로 자동 생성되어진 build.xml 파일이 존재한다. 빌드 스크립트 내에는 빌드 수행을 위한
        compile, test, package등 공통적으로 사용되는 빌드 target들이 존재한다. 실제 구동 내역을
        가지고 있는 공통 스크립트는  [Anyframe 을 설치한 root 폴더 경로]/ide/cli/scripts/project-build.xml 파일 내에
        작성되어 있다. 프로젝트 별로 변경해야 하는 일이 생기면 공통 스크립트를 수정하면 된다. 또한 각 프로젝트 단위 별로 공통
        빌드 내역 외에 특화된 빌드 내용을 추가해야 하는 경우에는 해당 빌드 target을 확장하여 추가해 넣을 수 있다. </para>
        
        <para>web 타입 프로젝트의 경우, [프로젝트가 생성된 위치]src/main/webapp/WEB-INF/lib 폴더를 클래스패스로 설정하여 빌드하고,
        service 타입 프로젝트의 경우, [프로젝트가 생성된 위치]/lib 폴더를 클래스패스로 설정하여 빌드한다. </para>
        
        <para>다음은 Web 타입 프로젝트에 생성된 build.xml 의 일부분이다. </para>
		<programlisting language="xml"><![CDATA[<project name="Build module" default="default" basedir=".">		
    <property file = "./META-INF/project.mf"/>
    <import file = "${anyframe.home}/ide/cli/scripts/project-build.xml"/>
	
    <target name="clean" depends = "shared:clean" />
    <target name="init" depends = "shared:init" />
    <target name="resources" depends = "shared:resources" />
    <target name="compile" depends = "shared:compile" />
    <target name="test-resources" depends = "shared:test-resources" />
    <target name="test-compile" depends = "shared:test-compile" />
    <target name="package" depends = "shared:package" />
    <target name="extract" depends = "shared:extract" />
    <target name="emma-jars" depends = "shared:emma-jars" />
    <target name="test" depends = "shared:test" />
    <target name="report" depends = "shared:report" />

    <target name = "default" depends = "init, resources, compile, package"/>
    <target name = "deploy" depends = "default, extract"/>
    <target name = "all" depends = "clean, init, resources, compile, 
               test-resources, test-compile, package, emma-jars, test, report"/>
</project>]]></programlisting>
      </listitem>

      <listitem>
        <para>프로젝트 내 <emphasis role="bold">build.xml</emphasis> 선택 후 &gt;&gt;
        <emphasis role="bold">Run As &gt;&gt; Ant Build</emphasis> 을 선택</para>
        
        <para> default target이 수행되어 다음과 같은 빌드 프로세스를 거치게 된다. 최종 결과물인 프로젝트 바이너리 파일은  [프로젝트 Home]/dist 폴더 내에
        존재하게 된다. </para>

        <para><emphasis role="bold">init -&gt; resources -&gt; compile -&gt;
        package</emphasis></para>
      </listitem>

      <listitem>
        <para>프로젝트 내 <emphasis role="bold">build.xml</emphasis> 선택 후 &gt;&gt;
        <emphasis role="bold">Run As &gt;&gt; Ant Build...</emphasis> 을 선택하여 뜬 팝업에서 all target만 지정. </para> 
        
        <para> default target이 아닌 리포팅 결과물을 생성해내는 target을 실행시켜 본다. 빌드 시 코드 분석 리포트, 테스트 수행 결과 리포트, 코드
        커버리지 리포트 등을 생성시킨다. 리포트 결과물은  [프로젝트 Home]/target/output 폴더에 생성되므로 빌드가 모두 완료된 뒤
        확인해보도록 한다. </para>

        <para><emphasis role="bold">clean -&gt; init -&gt; resources -&gt; compile -&gt;
        test-resources -&gt; test-compile -&gt; package -&gt; emma-jars -&gt;
        test -&gt; report </emphasis></para>
      </listitem>
    </orderedlist>
  </section>
</section>

</chapter>