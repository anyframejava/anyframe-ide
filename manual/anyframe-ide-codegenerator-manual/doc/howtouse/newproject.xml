<chapter id="howtouse_newproject">
	<title>Creating a New Project</title>

	<para>Code Generator를 이용해 프로젝트를 생성 할 수 있다.</para>
	<para>Code Generator는 Window &gt;&gt; Preferences &gt;&gt; Anyframe
		&gt;&gt; Build 에서 설정한 프로젝트 빌드 타입에 따라 다른 프로젝트 생성 화면을 제공한다.
		따라서, 프로젝트를 생성
		하기 이전에 프로젝트 빌드 타입을 먼저 설정하도록 한다.</para>


	<itemizedlist numeration="arabic" inheritnum="inherit">
		<listitem>
			<para>
				<link linkend="howtouse_newproject_maven">Maven 프로젝트 생성</link>
			</para>
		</listitem>
		<listitem>
			<para>
				<link linkend="howtouse_newproject_ant">Ant 프로젝트 생성</link>
			</para>
		</listitem>
		<listitem>
			<para>
				<link linkend="howtouse_newproject_confirm">프로젝트 실행 및 설정 파일(project.mf) 확인</link>
			</para>
		</listitem>
		<listitem>
			<para>
				<link linkend="howtouse_newproject_resolve">프로젝트 생성 시 발생할 수 있는 에러 해결 Tip</link>
			</para>
			<itemizedlist>
				<listitem>
					<para>
						<link linkend="howtouse_newproject_resolve_sec001">Out of memory</link>
						: 프로젝트
						생성 시 java.lang.OutOfMemoryError 조치방법
					</para>
				</listitem>
				<listitem>
					<para>
						<link linkend="howtouse_newproject_resolve_sec002">생성된 프로젝트에 에러 발생시 Check List </link>
						: 프로젝트 생성 시
						<inlinemediaobject>
							<imageobject>
								<imagedata fileref="../image/eclipseplugin/createapp-error.jpg" />
							</imageobject>
							<textobject>
								<phrase>eclipse project 오류 표시</phrase>
							</textobject> 
						</inlinemediaobject>
						표시가 뜰 경우 조치방법
					</para>
				</listitem>
			</itemizedlist>
		</listitem>
	</itemizedlist>

	<section id="howtouse_newproject_maven">
		<title>Maven 프로젝트 생성</title>

		<orderedlist>
			<listitem>
				<para>File &gt;&gt; New &gt;&gt; Other.. &gt;&gt; Anyframe &gt;&gt;
					Project 을 선택</para>
			</listitem>

			<listitem>
				<para>열린 창에서 프로젝트 생성을 위해 다음과 같은 내용을 입력한다. 아래 항목을 문제없이 기입하는 경우 Next
					버튼과 Finish 버튼이 활성화 되며, Next 버튼을 클릭하면 DB정보를 구성할 수 있는 화면으로 연결된다.
				</para>

				<itemizedlist>
					<listitem>
						<para>Project Name: 프로젝트 이름.</para>
					</listitem>

					<listitem>
						<para>Base Location: 프로젝트 생성 위치로, 디폴트 경로로 이클립스의 workspace가 지정된다.
							디폴트로 지정되는 경로를 꼭 사용할 필요 없이 원하는 경로로 변경 가능하다.</para>
					</listitem>

					<listitem>
						<para>Use default template home location: 체크된 경우 [프로젝트 생성
							위치]/.settings/anyframe/templates 경로를
							디폴트로 지정하며, 체크를 하지 않는 경우 Template Home 을 지정할 수 있는 부분이 활성화됨. </para>
					</listitem>

					<listitem>
						<para>Template Home: template 파일의 위치 지정.</para>
					</listitem>

					<listitem>
						<para>Package Name: 대표 패키지 이름.</para>
					</listitem>

					<listitem>
						<para>Group Id : pom.xml에 정의될 프로젝트의 Group Id.</para>
					</listitem>
					<listitem>
						<para>Artifact Id : pom.xml에 정의될 프로젝트의 Artifact Id.</para>
					</listitem>
					<listitem>
						<para>Version : pom.xml에 정의될 프로젝트의 version 정보.</para>
					</listitem>

				</itemizedlist>
			</listitem>

			<listitem>
				<para>
					DB정보를 구성하기 위해 위 화면에서 Next 버튼을 클릭하였다면 JDBC Configuration 화면이 제공된다.
        </para>

				<para>Code Generator 에서는 HSQLDB, Oracle, MySQL, DB2, Sybase, MSSQL
					DB 타입에 대한 설정 및 template을 지원하고 있다.
					사용하고 싶은 DB를 선택하여 DB정보를 구성한다.
					프로젝트 생성할 때, 사용하고 싶은 DB가 구동이 되어 있어야 샘플 테이블에 대한 DB 스크립트가 정상적으로 수행되므로,
					가능한 한 사용하고 싶은 DB를 구동하는 것을 권장한다.
					사용하고 싶은 DB를 결정하지 못한 경우 Anyframe 에서 제공하고 있는 샘플 DB 인 HSQLDB를 사용하도록 한다.
					아래 링크되어 있는 hsqldb2.zip 파일을 다운받아 압축을 해제하고,
					start.cmd 파일을 실행시켜 DB를 구동한다.
        </para>

				<para>DB 정보 구성 후, Finish 버튼을 누르면 프로젝트가 생성된다.</para>

				<itemizedlist>
					<listitem>
						<para>Database Type: Database 타입으로, HSQLDB, Oracle, MySQL, DB2,
							Sybase, MSSQL을
							제공하고 있다.</para>
					</listitem>

					<listitem>
						<para>Connection URL: Connection의 URL</para>
					</listitem>

					<listitem>
						<para>User Name: DB user 이름</para>
					</listitem>

					<listitem>
						<para>Password: 패스워드</para>
					</listitem>

					<listitem>
						<para>Hibernate Dialect: Hibernate에서 쿼리 수행 시, DBMS에 최적화된 기능을 제공하기
							위해 사용되는 것이 SQL Dialect 이며, 이 Dialect Property를를 사용하여 해당 DB 별
							Dialect
							정보를 설정할 수 있다. 각 DB 별 Dialect 클래스가 따로 존재하여 hsqldb를 선택한 경우, 디폴트로
							org.hibernate.dialect.HSQLDialect값이 선택된다.(Oracle, MySQL, DB2,
							Sybase, MSSQL
							Dialect도 제공함)</para>
					</listitem>

					<listitem>
						<para>Driver Class Name: DB의 드라이버 클래스를 설정해 주기 위한 값으로, HSQLDB의 경우
							org.hsqldb.jdbcDriver 값으로 설정된다. Database Type 선택 시 해당 DB에 맞는 값이
							세팅된다.</para>
					</listitem>

					<listitem>
						<para>Driver Jar Path : Anyframe Java IDE 설치 시 샘플 DB를 위한 HSQLDB
							Driver
							Jar 파일이 제공되므로 디폴트로 설정된다. 만약 다른 DB를 사용한다면 해당 DB의 Driver Jar 파일로
							연결시켜준다.</para>
					</listitem>

					<listitem>
						<para>Schema: 스키마의 이름.</para>
					</listitem>

					<listitem>
						<para>Group Id: pom.xml에 정의될 Jdbc Driver의 Group Id.</para>
					</listitem>

					<listitem>
						<para>Artifact Id: pom.xml에 정의될 Jdbc Driver의 Artifact Id.</para>
					</listitem>

					<listitem>
						<para>Version: pom.xml에 정의될 Jdbc Driver의 version 정보.</para>
					</listitem>

				</itemizedlist>
			</listitem>

			<listitem>
				<para>프로젝트 생성이 완료되면 Eclipse 내에 프로젝트가 정상적으로 생성되어 Import 되었는지 확인해본다.
				</para>
				<para>
					오류가 있을 경우
					<link linkend="howtouse_newproject_resolve">프로젝트 생성 시 발생할 수 있는 에러 해결 Tip</link>
					을 참조한다.
				</para>
			</listitem>
		</orderedlist>
		<para>
			<informaltable>
				<caption>Download List</caption>
				<tgroup cols="2">
					<colspec colnum="1" colname="col1" colwidth="4*" />
					<colspec colnum="2" colname="col2" colwidth="6*" />
					<thead>
						<row>
							<entry align="center">Name</entry>
							<entry align="center">Download</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry align="center">hsqldb2.zip</entry>
							<entry align="center">
								<ulink
									url="http://dev.anyframejava.org/docs/anyframe/ide/codegenerator/2.8.0/reference/download/sampledb/hsqldb2.zip">Download</ulink>
							</entry>
						</row>
					</tbody>
				</tgroup>
			</informaltable>
		</para>
	</section>

	<section id="howtouse_newproject_ant">
		<title>Ant 프로젝트 생성</title>

		<orderedlist>
			<listitem>
				<para>File &gt;&gt; New &gt;&gt; Other.. &gt;&gt; Anyframe &gt;&gt;
					Project 을 선택</para>
			</listitem>

			<listitem>
				<para>열린 창에서 프로젝트 생성을 위해 다음과 같은 내용을 입력한다. 아래 항목을 문제없이 기입하는 경우 Next
					버튼과 Finish 버튼이 활성화 되며, Next 버튼을 클릭하면 DB정보를 구성할 수 있는 화면으로 연결된다.
				</para>

				<itemizedlist>
					<listitem>
						<para>Project Name: 프로젝트 이름.</para>
					</listitem>

					<listitem>
						<para>Base Location: 프로젝트 생성 위치로, 디폴트 경로로 [Anyframe 이 설치된 root
							경로]/applications 가 지정된다.
							디폴트로 지정되는 경로를 꼭 사용할 필요 없이 원하는 경로로 변경 가능하다.</para>
					</listitem>

					<listitem>
						<para>Use default template home location: 체크된 경우 [프로젝트 생성
							위치]/.settings/anyframe/templates 경로를
							디폴트로 지정하며, 체크를 하지 않는 경우 Template Home 을 지정할 수 있는 부분이 활성화됨. </para>
					</listitem>

					<listitem>
						<para>Template Home: template 파일의 위치 지정.</para>
					</listitem>

					<listitem>
						<para>Package Name: 대표 패키지 이름.</para>
					</listitem>

				</itemizedlist>
			</listitem>

			<listitem>
				<para>DB정보를 구성하기 위해 위 화면에서 Next 버튼을 클릭하였다면 다음과 같은 JDBC Configuration
					화면이 제공된다.</para>

				<para>
					Code Generator 에서는 HSQLDB, Oracle, MySQL, DB2, Sybase, MSSQL DB 타입에
					대한 설정 및 template을 지원하고 있다.
					사용하고 싶은 DB를 선택하여 DB정보를 구성한다.
					프로젝트 생성할 때, 사용하고 싶은 DB가 구동이 되어 있어야 샘플 테이블에 대한 DB 스크립트가 정상적으로 수행되므로,
					가능한 한 사용하고 싶은 DB를 구동하는 것을 권장한다.
					사용하고 싶은 DB를 결정하지 못한 경우 Anyframe 에서 제공하고 있는 샘플 DB 인 hsqldb를 사용하도록 한다.
					샘플 DB는
					<emphasis role="bold">[Anyframe 이 설치된 root
						경로]/ide/db/scripts/hsqldb 하위의 start.cmd</emphasis>
					파일을 실행시켜서 구동한다.
				</para>
				<para>Code Generator 에서는 다양한 DB에 대한 샘플 쿼리문을 제공하고 있다.
					현재는 Oracle(sampledb-oracle.sql), MySQL(sampledb-mysql.sql),
					Sybase(sampledb-sybase.sql), DB2(sampledb-db2.sql),
					MSSQL(sampledb-mssql.sql)에 대한 샘플쿼리문이 제공되고 있다.
					이런 샘플쿼리문을 반영하기 위해서는 [Anyframe 이 설치된 root
					경로]/ide/db/scripts/[DB명]/sampledb-[DB명].sql 파일의 스크립트를 해당 DB에서
					실행해준다.
		</para>

				<para>DB 정보 구성 후, Finish 버튼을 누르면 프로젝트가 생성된다.</para>

				<itemizedlist>
					<listitem>
						<para>Database Type: Database 타입으로, HSQLDB, Oracle, MySQL, DB2,
							Sybase, MSSQL를
							제공하고 있다.</para>
					</listitem>

					<listitem>
						<para>Connection URL: Connection의 URL.</para>
					</listitem>

					<listitem>
						<para>User Name: DB user 이름.</para>
					</listitem>

					<listitem>
						<para>Password: 패스워드.</para>
					</listitem>

					<listitem>
						<para>Hibernate Dialect: Hibernate에서 쿼리 수행 시, DBMS에 최적화된 기능을 제공하기
							위해 사용되는 것이 SQL Dialect 이며, 이 Dialect Property를를 사용하여 해당 DB 별
							Dialect
							정보를 설정할 수 있다. 각 DB 별 Dialect 클래스가 따로 존재하여 hsqldb를 선택한 경우, 디폴트로
							org.hibernate.dialect.HSQLDialect값이 선택된다.(Oracle, MySQL, DB2,
							Sybase, MSSQL
							Dialect도 제공함.)</para>
					</listitem>

					<listitem>
						<para>Driver Class Name: DB의 드라이버 클래스를 설정해 주기 위한 값으로, hsqldb의 경우
							org.hsqldb.jdbcDriver 값으로 설정된다. Database Type 선택 시 해당 DB에 맞는 값이
							세팅된다.</para>
					</listitem>

					<listitem>
						<para>Driver Jar Path : Anyframe Java IDE 설치 시 샘플 DB를 위한 hsqldb
							driver
							jar 파일이 제공되므로 디폴트로 설정된다. 만약 다른 DB를 사용한다면 해당 DB의 Driver jar 파일로
							연결시켜준다.</para>

					</listitem>

					<listitem>
						<para>Schema: 스키마의 이름.</para>
					</listitem>

				</itemizedlist>
			</listitem>

		</orderedlist>

	</section>

	<section id="howtouse_newproject_confirm">
		<title>프로젝트 실행 및 설정 파일(project.mf) 확인 </title>

		<para>생성된 프로젝트를 실행해 보고, 프로젝트 설정 파일(project.mf) 정보도 확인해본다.</para>

		<orderedlist>
			<listitem>
				<para>서버를 실행하여 프로젝트를 실행해본다.</para>
				<para>프로젝트를 선택한 후 마우스 우측 버튼 클릭 &gt;&gt; Run As &gt;&gt; Run On
					Server 메뉴를 선택하고
					이때 기존에 설정되어있던 Tomcat Server(6.0 Version 사용)가 없는 경우 등록해주고 실행하도록 한다.
				</para>
				<para>서버를 start 했을 때 열리는 web 페이지는 설치된 Plugin 목록이 보이는 화면이다.
					프로젝트 생성 이후에 Code Generator의 Creating All CRUD Classes 기능을 통해 생성되는 화면은
					Plugin 목록 화면 우측의 "Generated CRUD Codes" 항목 하단에 생성된 코드 목록으로 나온다.
				</para>
			</listitem>

			<listitem>
				<para>프로젝트 생성을 통해 만들어진 프로젝트 속성 파일(META-INF/project.mf)의 Property를
					확인해 본다.
					변경하고 싶은 정보가 있을 경우 Property를의 값을 수정하여 수정된 설정 값을 통해 소스가 생성되도록 할 수 있다.
				</para>
				<para>아래 표에 설명된 항목별 내용을 보고 DB 설정을 비롯하여 다양한 공통 속성 값을 변경시킬 수 있다.
					현재 DB 속성 정보들의 디폴트 값은 HSQLDB 샘플 DB에 대한 속성 값으로 설정되어 있다.
      	</para>
			</listitem>
		</orderedlist>

		<informaltable>
			<caption>project.mf - 프로젝트 정보</caption>
			<tgroup cols="4">
				<colspec colnum="1" colname="col1" colwidth="3*" />
				<colspec colnum="2" colname="col2" colwidth="4*" />
				<colspec colnum="3" colname="col3" colwidth="1*" />
				<colspec colnum="4" colname="col4" colwidth="2*" />

				<thead>
					<row>
						<entry align="center">Property Name</entry>

						<entry align="center">Description</entry>

						<entry align="center">Required</entry>

						<entry align="center">Default Value</entry>
					</row>
				</thead>

				<tbody>
					<row>
						<entry>anyframe.home</entry>

						<entry>Anyframe을 설치한 루트 폴더로, Maven 프로젝트일 경우는 사용하지 않는다.</entry>

						<entry align="center">Y</entry>

						<entry align="center">
							<para>Maven일 경우 N/A</para>
							<para>Ant일 경우 Anyframe을 설치한 루트 폴더</para>
						</entry>
					</row>
					<row>
						<entry>project.name</entry>

						<entry>프로젝트 명</entry>

						<entry align="center">Y</entry>

						<entry align="center">myproject</entry>
					</row>

					<row>
						<entry>project.home</entry>

						<entry>프로젝트 루트 폴더 경로</entry>

						<entry align="center">Y</entry>

						<entry align="center">
							<para>Maven일 경우 생성한 프로젝트의 위치</para>
							<para>Ant일 경우 [Anyframe 을 설치한 root 폴더 경로]/ applications/ [프로젝트명]
							</para>
						</entry>
					</row>

					<row>
						<entry>project.version</entry>

						<entry>프로젝트 버전</entry>

						<entry align="center">Y</entry>

						<entry align="center">1.0-SNAPSHOT</entry>
					</row>

					<row>
						<entry>project.type</entry>

						<entry>프로젝트 타입</entry>

						<entry align="center">Y</entry>

						<entry align="center">web/service</entry>
					</row>


					<row>
						<entry>project.build</entry>

						<entry>프로젝트 빌드도구</entry>

						<entry align="center">Y</entry>

						<entry align="center">maven/ant</entry>
					</row>

					<row>
						<entry>project.template.home</entry>

						<entry>프로젝트 및 CRUD 소스 코드 생성 시 기반이 되는 Template 파일이 있는 루트 폴더 경로
						</entry>

						<entry align="center">Y</entry>

						<entry align="center">[프로젝트 생성 위치]/.settings/anyframe/templates
						</entry>
					</row>

					<row>
						<entry>project.template</entry>

						<entry>프로젝트 및 CRUD 소스 코드 생성 시 기반이 되는 Template 형태(ex.
							default, miplatform 등)</entry>

						<entry align="center">Y</entry>

						<entry align="center">default</entry>
					</row>

					<row>
						<entry>project.daoframework</entry>

						<entry>DAO Framework 선택(springjdbc, query, hibernate, ibatis2,
							mybatis 중 택일)</entry>

						<entry align="center">Y</entry>

						<entry align="center">springjdbc</entry>
					</row>

					<row>
						<entry>package.name</entry>

						<entry>프로젝트 대표 패키지 명</entry>

						<entry align="center">Y</entry>

						<entry align="center">프로젝트명</entry>
					</row>

					<row>
						<entry>web.context.path</entry>

						<entry>프로젝트 빌드도구가 Ant일 경우에만 의미있는 값으로,
							jetty를 이용하여 web 어플리케이션을 실행할 때 사용되는 WebContext Path명</entry>
						<entry align="center">Y</entry>

						<entry align="center">프로젝트 명</entry>
					</row>
				</tbody>
			</tgroup>
		</informaltable>


		<informaltable>
			<caption>project.mf - DB 정보</caption>
			<tgroup cols="4">
				<colspec colnum="1" colname="col1" colwidth="3*" />
				<colspec colnum="2" colname="col2" colwidth="4*" />
				<colspec colnum="3" colname="col3" colwidth="1*" />
				<colspec colnum="4" colname="col4" colwidth="2*" />

				<thead>
					<row>
						<entry align="center">Property Name</entry>

						<entry align="center">Description</entry>

						<entry align="center">Required</entry>

						<entry align="center">Default Value</entry>
					</row>
				</thead>

				<tbody>
					<row>
						<entry>db.type</entry>

						<entry>DB 정보(hsqldb, oracle, mysql, db2, sybase, mssql)</entry>

						<entry align="center">Y</entry>

						<entry align="center">hsqldb</entry>
					</row>

					<row>
						<entry>db.name</entry>

						<entry>Database 명</entry>

						<entry align="center">Y</entry>

						<entry align="center">sampledb</entry>
					</row>

					<row>
						<entry>db.schema</entry>

						<entry>schema 명</entry>

						<entry align="center">Y</entry>

						<entry align="center">PUBLIC</entry>
					</row>

					<row>
						<entry>db.server</entry>

						<entry>DB에 접근하기 위한 server정보</entry>

						<entry align="center">Y</entry>

						<entry align="center">localhost</entry>
					</row>

					<row>
						<entry>db.port</entry>

						<entry>DB에 접근하기 위한 port</entry>

						<entry align="center">Y</entry>

						<entry align="center">-1</entry>
					</row>

					<row>
						<entry>db.driver</entry>

						<entry>DB의 드라이버 클래스 설정</entry>

						<entry align="center">Y</entry>

						<entry align="center">org.hsqldb.
							jdbcDriver</entry>
					</row>

					<row>
						<entry>db.url</entry>

						<entry>DB에 접근하기 위한 Access URL</entry>

						<entry align="center">Y</entry>

						<entry align="center">jdbc:hsqldb:hsql://localhost/sampledb</entry>
					</row>

					<row>
						<entry>db.userId</entry>

						<entry>DB 사용자 명</entry>

						<entry align="center">Y</entry>

						<entry align="center">SA</entry>
					</row>

					<row>
						<entry>db.password</entry>

						<entry>DB 사용자 패스워드</entry>

						<entry align="center">N</entry>

						<entry align="center">N/A</entry>
					</row>

					<row>
						<entry>db.lib</entry>

						<entry>
							DB에 접근하기 위한 driver jar파일의 경로

							<para>이때, 패스 표현 방법에 주의를 기울여야 함
								상대경로로 입력시 경로 처음에 '/'로 시작하게 될 경우 절대경로로 인식하게 됨</para>
						</entry>

						<entry align="center">Y</entry>

						<entry align="center">
							<para>Maven일 경우 C:/Documents and Settings/[user
								name]/.m2/repository/hsqldb/hsqldb/2.0.0/hsqldb-2.0.0.jar</para>
							<para>Ant일 경우 [Anyframe 이 설치된 root
								경로]/ide/db/lib/hsqldb-2.0.0.jar</para>

						</entry>
					</row>

					<row>
						<entry>db.dialect</entry>

						<entry>DB별 Hibernate Dialect 클래스 설정</entry>

						<entry align="center">Y</entry>

						<entry align="center">org.hibernate.
							dialect.
							HSQLDialect</entry>
					</row>

					<row>
						<entry>db.groupId</entry>

						<entry>jdbc driver group id 정보로, Maven 프로젝트 일 경우에만 사용되는 값</entry>

						<entry align="center">Y</entry>

						<entry align="center">hsqldb</entry>
					</row>

					<row>
						<entry>db.artifactId</entry>

						<entry>jdbc driver artifact id 정보로, Maven 프로젝트 일 경우에만 사용되는 값
						</entry>

						<entry align="center">Y</entry>

						<entry align="center">hsqldb</entry>
					</row>

					<row>
						<entry>db.version</entry>

						<entry>jdbc driver version 정보로, Maven 프로젝트 일 경우에만 사용되는 값</entry>

						<entry align="center">Y</entry>

						<entry align="center">2.0.0</entry>
					</row>
					<row>
						<entry>db.schema.use</entry>
						<entry>해당 DB가 Sybase DB일 경우, 지정해야 하는 속성으로 User 정보 셋팅시 DB Schema
							정보를 사용할지 여부를 정의한다.
							단, Sybase 버전에 따라 속성값은 변경될 수 있음에 유의하도록 한다.
					</entry>
						<entry align="center">N</entry>

						<entry align="center">false</entry>
					</row>

				</tbody>
			</tgroup>
		</informaltable>

	</section>

	<section id="howtouse_newproject_resolve">
		<title>프로젝트 생성 시 발생할 수 있는 에러 해결 Tip</title>

		<section id="howtouse_newproject_resolve_sec001">
			<title>Out of memory</title>

			<para>프로젝트 생성 시 "java.lang.OutOfMemoryError:Java heap space" 같은 out
				of memory 에러가 발생할 경우 다음과 같이
				조치한다.</para>

			<orderedlist>
				<listitem>
					<para>실행하고 있는 eclipse가 설치되어 있는 폴더로 이동한다.</para>
				</listitem>

				<listitem>
					<para>root 폴더 하위의 eclipse.ini 파일의 내용에서 launcher.XXMaxPermSize값(ex.
						256M)을 높여서 재설정해준다. 필요 시 메모리 사용 최소값(-Xms)과 최대값(-Xmx)을 증가시켜서 사용하도록
						한다.
						다음은 Eclipse 3.6.0(Helios) 버전의 eclipse.ini 파일 예이다.</para>

					<programlisting>
						<emphasis role="bold">-clean</emphasis>
						-startup
						plugins/org.eclipse.equinox.launcher_1.0.201.R35x_v20090715.jar
						--launcher.library
						plugins/org.eclipse.equinox.launcher.win32.win32.x86_1.0.200.v20090519
						-product
						org.eclipse.epp.package.jee.product
						--launcher.XXMaxPermSize
						256M
						-showsplash
						org.eclipse.platform
						--launcher.XXMaxPermSize
						128m
						-vmargs
						-Dosgi.requiredJavaVersion=1.5
						<emphasis role="bold">-Xms400m</emphasis>
						<emphasis role="bold">-Xmx512m</emphasis>
					</programlisting>
				</listitem>
			</orderedlist>
		</section>
		<section id="howtouse_newproject_resolve_sec002">
			<title>생성된 프로젝트에 에러 발생시 Check List</title>
			<para>
				Code Generator를 이용해 프로젝트를 생성하고 난 후, 코드에 에러가 발생할 경우 다음과 같은 항목을 확인하고, 각각에
				맞게 조치하도록 한다. 
    	</para>
			<itemizedlist>
				<listitem>
					<para>프로젝트를 clean을 하거나 해당 프로젝트를 close 한 후 다시 open하면 표시가 사라진다.
					</para>
					<para>☞ Project &gt;&gt; Clean... 수행</para>
					<para>
						☞ 프로젝트 선택 후 오른쪽 마우스 클릭 &gt;&gt; Close Project 후 프로젝트 선택 후 오른쪽
						마우스 클릭 &gt;&gt; Open Project
        		</para>
				</listitem>

				<listitem>
					<para>Problems 에 JSP Validation 에러가 나오는 경우, 실제로 error는 아니지만
						eclipse에서
						인식을 에러로 하는 것으로 다음과 같이 validation 설정을 변경해주면 된다. Eclipse 내 프로젝트에서
						Validation 기능을 사용하게 되면 시간이 많이 소요될 수 있다. 반드시 필요한 경우가 아니고, 속도 향상을
						위해서라면
						Validation 설정을 모두 Disable All 버튼을 선택하여 사용하지 않는 것으로 설정할 수도 있다.
				</para>

					<mediaobject>
						<imageobject>
							<imagedata align="center"
								fileref="../image/eclipseplugin/createapp-validation.jpg" />
						</imageobject>
						<textobject>
							<phrase>Problems view 오류 표시</phrase>
						</textobject>
					</mediaobject>

					<para>
						☞ Window &gt;&gt; Preferences... &gt;&gt; Validation &gt;&gt;
						JPA Validator, JSP Syntax Validator 의 Build 항목 체크 해제 후 Apply
				</para>
				</listitem>

				<listitem>
					<para>프로젝트의 Classpath에 Maven Dependencies가 추가되었는지 확인한다.(Build Type이
						Maven일 경우)</para>
					<para>
						m2e가 활성화되면 생성된 프로젝트에 Maven Dependencies Libraries가 Build Path로 추가되어
						프로젝트가 정상적으로 참조라이브러리를 인식하게 된다. 
				</para>
				</listitem>
			</itemizedlist>
		</section>
	</section>

</chapter>