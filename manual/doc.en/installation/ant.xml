<chapter id="installation_ant">
	<title>Ant</title>
	
	<para>
		This chapter will explain how to constitute the development environment based on Anyframe easily using CLI when the build tool of the project is Ant. 
		To constitute development environment based on Ant, the following process is required. 
	</para>
	
	<itemizedlist numeration="arabic" inheritnum="inherit">
		<listitem>
			<para><link linkend="installation_ant_configuration">Anyframe installation and configuration</link></para>
		</listitem>
		<listitem>
			<para><link linkend="installation_ant_generate_archetype">Project structure generation</link></para>
		</listitem>
		<listitem>
			<para><link linkend="installation_ant_install_plugin">Plugin installation</link></para>
		</listitem>
		<listitem>
			<para><link linkend="installation_ant_run">Application execution</link></para>
		</listitem>
	</itemizedlist>
	
	<section id="installation_ant_configuration">
		<title>Anyframe installation and configuration</title>
		<para>
			Here the tasks will be explained that should precede the constitution of development environment based on Anyframe when Ant is used as the build tool. 
			Since Ant is included in the distributed version of Anyframe, if Anyframe is installed, Ant is also automatically installed.
			Anyframe is deployed in a compressed file and installed in the following order. 
			<orderedlist numeration="arabic" inheritnum="inherit">
				<listitem>
					<para>
						Check [<link linkend="introduction_systemrequirements">system requirements</link>] to install Anyframe.
					</para>
				</listitem>
				<listitem>
					<para>Check the newest distributed version of Anyframe in <ulink url="http://www.anyframejava.org/project/anyframe#downloads">http://www.anyframejava.org/project/anyframe#downloads</ulink>.
					
					</para>
				</listitem>
				<listitem>
					<para>Download the newest distributed version of Anyframe ("anyframe-x.x.x.zip") in the user's computer. 
					</para>
				</listitem>
				<listitem>
					<para>
						Extract the downloaded file in the desired folder. 
					</para>
				</listitem>
				<listitem>
					<para>
						After extracting the file, you can check the following structure. 
						The location where the file has been extracted becomes the root path of installing Anyframe, 
						and will be called [Anyframe Home] in this manual. 
						All libraries, Ant, which is a build tool, project and code generation templates, common build scripts and sample HSQL DB provided by Anyframe will be all installed together. 
						<mediaobject>
							<imageobject>
								<imagedata fileref="../image/installation/ant/install-filetree.png" align="center" />
							</imageobject>
						</mediaobject>
					</para>
					<para>
						<itemizedlist>
							<listitem>
								<para>
									applications: Basic directory where the projects generated using the command provided by Anyframe are located. (can be changed through options of Command)
								</para>
							</listitem>
							<listitem>
								<para>
									bin: Contains scripts to execute Anyframe Command
								</para>
							</listitem>
							<listitem>
								<para>
									ide: Contains libraries related to Anyframe Command, common build script files, Ant, which is a build tool, HsqlDB for samples and files to connect with Hudson in Anyframe IDE Editor (anyframe-ide-eclipse-hudson-X.X.X.jar, web.xml).  
								</para>
							</listitem>
							<listitem>
								<para>
									licenses: License texts and organized lists of CLI libraries deployed by Anyframe and 3rd party libraries that can be downloaded from Anyframe Repository.
								</para>
							</listitem>
							<listitem>
								<para>
									repo: Contains Anyframe and 3rd party library files referenced by Anyframe
								</para>
							</listitem>
							<listitem>
								<para>
									templates: Contains template files to generate projects and codes
								</para>
							</listitem>
							<listitem>
								<para>changelog.txt: Log on changes in each version </para>
							</listitem>
							<listitem>
								<para>license.txt: Anyframe license (Apache License)</para>
							</listitem>
							<listitem>
								<para>readme.txt: Anyframe introduction and basic elements</para>
							</listitem>
						</itemizedlist>
					</para>
				</listitem>
				
				<listitem>
					<para>Set the configuration as follows to execute commands  provided by Anyframe related to constituting development environment, based on Ant.</para>
					<para>
						After executing the command window in bin folder under Anyframe installation folder and execute env.bat file by entering the env command. 
						Configuration parameters such as ANT_HOME, PATH, CLASSPATH and MAINCLASS are set by executing the env command. 
					</para>
					
					<para>
						At this point, ANYFRAME_HOME configuration parameter is required of which the value is the path of installing Anyframe, 
						It can be registered as a configuration parameter of the system, or can be registered using the set command in the command window as in the following picture.  
						(Yet, the configuration parameter registered in the command window is valid only in that window, and if a new command window is opened, it should be registered again.)
						<programlisting language="java"><![CDATA[ANYFRAME_HOME/bin>env
ERROR: Environment variable ANYFRAME_HOME not set.
ANYFRAME_HOME/bin>set ANYFRAME_HOME=C:/ats-5.0.0/anyframe-5.0.0

ANYFRAME_HOME/bin>env]]></programlisting>
					</para>
					<warning>
						<title>Notes</title>
						<para>
							Execute env.bat file in the command window in Windows environment, and in Unix environment (e.g. Mac OS, etc) 
							execute env.sh file (source env.sh) after authorizing the execution of the files under bin folder (chmod 755 *). 
							For the command to be executed, refer to the details in parentheses.  
						</para>
					</warning>
				</listitem>
				
				<listitem>
					<para>
						Now, it is possible to constitute the development environment based on Anyframe using Command Line Interface based on Ant.
					</para>
				</listitem>
			</orderedlist>
		</para>
	</section>
	
	<section id="installation_ant_generate_archetype">
		<title>Project structure generation</title>
		<para>
			To constitute the development environment based on Anyframe, first generate the basic structure of the project. 
			Install anyframe-basic-archetype by entering the following command in the command window where the configuration parameter information is set by executing 'env' command. 
			(For details on Anyframe Archetype, refer to the explanation on <link linkend="commands_maven_generate_archetype">Archetype</link> in this manual.) 
		</para>
		<programlisting language="java"><![CDATA[anyframe create-project]]></programlisting>
		<para>Through this command, anyframe-basic-archetype is installed and the project is generated in [Anyframe Home]/applications folder.</para>
		
		<para>
			The following picture is the basic structure of the sample project constituted by installing anyframe-basic-archetype.
			<mediaobject>
				<imageobject>
					<imagedata fileref="../image/installation/ant/myproject_structure.jpg"
						align="center" />
				</imageobject>
			</mediaobject>
		</para>
		
		<para>
			Now, by moving to the directory of the generated project, you can continue to install various plugins provided by Anyframe.
			<programlisting language="java"><![CDATA[cd ../applications/myproject]]></programlisting>
		</para>
	</section>
	
	<section id="installation_ant_install_plugin">
		<title>Plugin installation</title>
		<para>
			From Anyframe 4.6.0, the collection of template-based sample codes that integrated various open sources and reference libraries are called plugin, and various types of plugins are provided. 
		</para>
		<para>
			Let us install core plugin, which is basically required to run other plugins of Anyframe. 
		</para>
		<para>
			Open the command window and start hsqldb provided as a sample by double-clicking start.cmd (or start.sh) file, moving to [sample project installation folder]/db/hsqldb folder previously installed. 
			If addition of DB data is necessary to execute the relevant plugin, DB should be started first since DB data is added together when the selected plugin is installed.  
			If DB has not been started when the selected plugin is installed, directly execute ([sample project installation folder]/db/scripts/{Plugin name-insert-data-db name}.sql), which is a DB script file provided after the plugin is installed. 
			To install the plugin based on DB other than hsqldb provided as a sample, refer to <link linkend="commands_ant_db">DB change</link>.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="../image/installation/ant/start_hsqldb.jpg"
						align="center" />
				</imageobject>
			</mediaobject>
		</para>
		<para>
			Move to the sample project installation folder in the command window where the configuration parameter information is set by executing 'env' command  
			(e.g. If a project named myproject has been generated, execute the command in myproject folder.) and enter the following command. 
			(For details on the installation of Plugin, refer to the Ant-based <link linkend="commands_ant_install">install</link> command.)
		</para>
		
		<programlisting language="java"><![CDATA[anyframe install core]]></programlisting>
		<para>
			Since datasource, logging and spring plugins are required to run core plugin, the following will be displayed. To continue with installation, enter 'y'.
		</para>
		<programlisting language="java"><![CDATA[[install] Resolving plugin dependencies ...
[install] Dependencies Resolved.
[install] ------------------------------------------------------------------------------
[install]  <action>  <name>	<version>
[install]  Install   datasource	1.0.0
[install]  Install   spring	1.0.0
[install]  Install   core		1.0.0
[install]  Install   logging	1.0.0
[install] ------------------------------------------------------------------------------
[install] Is this OK? (y, n):]]></programlisting>
		<para>
			If Plugin has been properly installed, the sample source codes of the relevant plugin will have been generated in the designated path of the package,  
			and the libraries related to the plugin will have been installed in src/main/webapp/WEB-INF/lib.
		</para>
		<para>
			You can check the list of plugins added in the sample project by opening the Command window and entering the following command, moving to the sample project installation folder. 
		</para>
		<programlisting language="java"><![CDATA[anyframe installed]]></programlisting>
		<programlisting language="java"><![CDATA[[installed]  <name>		<current>	<latest>
[installed]  core		1.0.0            1.0.0
[installed]  datasource	1.0.0            1.0.0
[installed]  spring		1.0.0            1.0.0
[installed]  logging		1.0.0            1.0.0]]></programlisting>
		<para>
			Other plugins can be additionally installed in the same way as core plugin.
			To search for the list of plugins that can be installed, use the following command. 
			<programlisting language="java"><![CDATA[anyframe list]]></programlisting>
			<mediaobject>
				<imageobject>
					<imagedata fileref="../image/installation/ant/show_plugin_list.jpg"
						align="center" />
				</imageobject>
			</mediaobject>
		</para>
	</section>
	
	<section id="installation_ant_run">
		<title>Application execution</title>
		<para>
			Anyframe provides Command that deploys and executes applications in Jetty server so that the sample application generated after a certain plugin has been installed runs properly.
		</para>
		<para>
			If you move to the sample project installation folder and enter the following command in the command window where the configuration parameter information is set by executing 'env' command, you can start the sample application based on Jetty. 
			
		</para>
		<programlisting><![CDATA[anyframe run]]></programlisting>
		<para>
			If Jetty starts properly, 'Started Jetty Server,' a log message at the INFO level will be shown in the console window. 
		</para>
				
		<para>
			If WAS has been started properly, open the web browser and check whether the sample application runs properly by entering http://localhost:8080/myproject (http://localhost:8080/${sample project name}) in the address bar. 
			The following is the initial page of the sample application when only core plugin has been installed. 
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="../image/installation/maven/sample_initial.jpg"
						align="center" />
				</imageobject>					
			</mediaobject>
		</para>
		<para>
			If you click core link on the page, you can move to the page that manages movie information. 
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="../image/installation/maven/sample_core_initial.jpg"
						align="center" />
				</imageobject>					
			</mediaobject>	
		</para>
		<para>
			When 'anyframe run' command is executed, jetty-temp folder is generated under the project's dist folder and Jety is executed. 
			If you want to reflect classes, JAR files or JSP files after deployment and re-check with Jetty, deploy them in the relevant location of this folder.  
		</para>
	</section>
	
</chapter>