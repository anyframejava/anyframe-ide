<?xml version="1.0"?>

<project name="Enterprise Ed. Packaging" default="default" basedir="." xmlns:artifact="urn:maven-artifact-ant">
	<property name="build" value="F:/QuickBuild_JDK6_WS/enterprise/nightly/build/"/>

	<import file="${build}/build-common.xml" />
	<import file="${build}/enterprise/anyframe-plugins.xml" />
	<property name="dist" value="${build}/../dist/" />
	<property name="release" value="${build}/../release/" />	
	<property name="subv.url.anyframe.enterprise.trunk" value="http://dev.anyframejava.org/subv/anyframe-enterprise/anyframe-online-4.5/trunk" />
	<property name="subv.url.anyframe.enterprise.tags" value="http://dev.anyframejava.org/subv/anyframe-enterprise/anyframe-online-4.5/tags" />

	<path id="javadoc.classpath">
		<fileset dir="${dist}/anyframe-core-${anyframe.version}/repo">
			<include name="**/logback/**/*.jar" />
			<include name="**/slf4j/**/*.jar" />
			<include name="**/springframework/**/*.jar" />
			<include name="**/javax/**/*.jar" />
			<include name="**/aopalliance/**/*.jar" />
			<include name="**/org/anyframe/anyframe-core/*.jar" />
			<include name="**/org/anyframe/anyframe-idgen/*.jar" />
			<include name="**/commons-dbcp/**/*.jar" />
			<include name="**/commons-lang/**/*.jar" />
			<include name="**/aspectj/**/*.jar" />
			<include name="**/asm/**/*.jar" />
			<include name="**/velocity/**/*.jar" />
			<include name="**/xstream/**/*.jar" />
			<include name="**/ibatis/**/*.jar" />
			<include name="**/ehcache/**/*.jar" />
			<include name="**/codehaus/**/*.jar" />
			<include name="**/p6spy/**/*.jar" />
		</fileset>
	</path>

	<target name="init">
		<echo>initialize temporary distribution structure</echo>
		<condition property="is.windows">
			<os family="windows" />
		</condition>
		<if>
			<equals arg1="${is.windows}" arg2="true"/>
			<then>
				<property name="userhome" value="${user.home}" />
				<property name="mvn.executable" value="mvn.bat" />
				<property name="m2.repo" value="${userhome}/.m2/repository" />
				<property name="settings.file" value="${build}/maven-settings-local-windows.xml" />
			</then>
			<else>
				<property name="userhome" value="${env.HOME}" />
				<property name="mvn.executable" value="mvn" />
				<property name="m2.repo" value="${userhome}/.m2/repository" />
				<property name="settings.file" value="maven-settings-local.xml" />
			</else>
		</if>

		<delete dir="${userhome}/temp/repo" />
		<delete dir="${basedir}/temp" />
		<delete dir="${dist}" />

		<mkdir dir="${dist}/anyframe-core-${anyframe.version}/applications" />
		<mkdir dir="${dist}/anyframe-core-${anyframe.version}/repo" />
		<mkdir dir="${dist}/anyframe-core-${anyframe.version}/bin" />
		<mkdir dir="${dist}/anyframe-core-${anyframe.version}/ide/cli/scripts" />
		<mkdir dir="${dist}/anyframe-core-${anyframe.version}/ide/cli/lib" />
	</target>

	<target name="make.bin">
		<ant antfile="${build}/community/build.xml" target="make.bin" />
	</target>

	<target name="make.ide">
		<echo>construct ide folder</echo>

		<echo>construct ide/ant, ide/db, ide/inspection, ide/cli/scripts folder</echo>
		<copy todir="${dist}/anyframe-core-${anyframe.version}/ide" overwrite="true">
			<fileset dir="${build}/enterprise/template/ide">
				<exclude name="**/.svn/*.*" />
			</fileset>
			<fileset dir="${build}/community/template/ide">
				<exclude name="**/.svn/*.*" />
			</fileset>
		</copy>

		<ant antfile="${build}/community/build.xml" target="make.ide.cli" />
	</target>

	<target name="make.repo">

		<echo message="construct repo folder" />

		<mkdir dir="${build}/temp/src" />
		<mkdir dir="${build}/temp/pomfile" />

		<copy todir="${dist}/anyframe-core-${anyframe.version}/repo" overwrite="true">
			<fileset dir="${build}/community/template/repo">
				<include name="**/archetype-catalog.xml" />
				<include name="**/plugin-catalog-*.xml" />
			</fileset>
		</copy>

		<copy todir="${dist}/anyframe-core-${anyframe.version}/repo" overwrite="true">
			<fileset dir="${build}/enterprise/template/repo">
				<include name="**/plugin-catalog-*.xml" />
			</fileset>
		</copy>

		<ant antfile="${build}/community/build.xml" target="make.repo.archetype" />
		<ant antfile="${build}/community/build.xml" target="unzip.essential.plugin" />
		<ant antfile="${build}/community/build.xml" target="unzip.optional.plugin" />
		<antcall target="unzip.enterprise.plugin" />
		<ant antfile="${build}/community/build.xml" target="make.repo.plugin" />
		<antcall target="make.repo.enterprise.project"/>

		<echo>Copy provided-scope library to cli/lib</echo>
		<copy todir="${dist}/anyframe-core-${anyframe.version}/ide/cli/lib" overwrite="true" flatten="true">
			<fileset dir="${userhome}/temp/repo">
				<include name="**/servlet-api/**/servlet-api*.jar" />
				<include name="**/jsp-api/**/jsp-api*.jar" />
				<exclude name="**/servlet-api/**/*-sources.jar" />
				<exclude name="**/jsp-api/**/*-sources.jar" />				
			</fileset>
		</copy>
	</target>

	<target name="unzip.enterprise.plugin">
		<echo>copy dependencies of each plugin (enterprise - com.anyframe.plugin)</echo>

		<for list="${enterprise-plugins}" param="enterprise-plugin">
			<sequential>
				<artifact:dependencies filesetId="anyframe-plugin" useScope="compile">
					<dependency groupId="com.anyframe.plugin" artifactId="anyframe-@{enterprise-plugin}-pi" version="${@{enterprise-plugin}}" />
					<localRepository path="${userhome}/temp/repo" />
				</artifact:dependencies>
				<unzip src="${userhome}/temp/repo/com/anyframe/plugin/anyframe-@{enterprise-plugin}-pi/${@{enterprise-plugin}}/anyframe-@{enterprise-plugin}-pi-${@{enterprise-plugin}}.jar" dest="${build}/temp/pomfile/anyframe-@{enterprise-plugin}-pi">
					<patternset>
						<include name="**/plugin-resources/pom.xml" />
					</patternset>
				</unzip>
			</sequential>
		</for>
	</target>
	
	<target name="make.repo.enterprise.project">
		<echo>copy libraries of each service (enterprise - com.anyframe)</echo>
		
		<for list="${enterprise-services}" param="enterprise-service">
			<sequential>
				<artifact:dependencies filesetId="anyframe-command-lib" useScope="compile">
					<dependency groupId="com.anyframe" artifactId="anyframe-@{enterprise-service}" version="${@{enterprise-service}}" />
					<localRepository path="${userhome}/temp/repo" />
				</artifact:dependencies>
			</sequential>
		</for>
	</target>

	<target name="make.licenses">
		<echo message="construct licenses folder" />
		<copy todir="${dist}/anyframe-core-${anyframe.version}/licenses" overwrite="true">
			<fileset dir="${release}/community/licenses">
				<exclude name="**/.svn/*.*" />
			</fileset>
		</copy>

		<copy todir="${dist}/anyframe-core-${anyframe.version}" overwrite="true">
			<fileset dir="${release}/enterprise">
				<include name="**/changelog.txt" />
				<include name="**/license*.txt" />
				<include name="**/readme.txt" />
			</fileset>
			<fileset dir="${release}/community">
				<include name="**/license.txt" />
			</fileset>
		</copy>
	</target>

	<target name="zip">
		<zip destfile="${dist}/anyframe-core-${anyframe.version}-enterprise.zip" basedir="${dist}" />
	</target>

	<target name="javadoc">
		<ant antfile="${build}/community/build.xml" target="javadoc" />

		<for list="${enterprise-services}" param="enterprise-service">
			<sequential>
				<mkdir dir="${build}/temp/service" />
				<if>
					<contains string="@{enterprise-service}" substring="online" casesensitive="false" />
					<then>
						<if>
							<contains string="${@{enterprise-service}}" substring="SNAPSHOT" casesensitive="false" />
							<then>
								<svn username="${subv.username}" password="${subv.password}">
									<checkout url="${subv.url.anyframe.enterprise.trunk}/plugin/optional/online/projects/anyframe-@{enterprise-service}" revision="HEAD" destPath="${build}/temp/service/anyframe-@{enterprise-service}" />
								</svn>
							</then>
							<else>
								<svn username="${subv.username}" password="${subv.password}">
									<checkout url="${subv.url.anyframe.enterprise.tags}/plugin/optional/online/${@{enterprise-service}}/projects/anyframe-@{enterprise-service}" revision="HEAD" destPath="${build}/temp/service/anyframe-@{enterprise-service}" />
								</svn>
							</else>
						</if>
					</then>
				</if>

				<copy todir="${build}/temp/service/anyframe-online" overwrite="true">
					<fileset dir="${build}/temp/service/anyframe-@{enterprise-service}">
						<exclude name="**/.svn/*.*" />
					</fileset>
				</copy>
			</sequential>
		</for>

		<javadoc packagenames="com.anyframe.*" sourcepath="${build}/temp/service/anyframe-online/src/main/java" destdir="${dist}/anyframe-core-${anyframe.version}/docs/online/${online}/javadoc" author="true" version="true" use="true" Encoding="utf-8" charset="utf-8" docencoding="utf-8" windowtitle="Anyframe Online API ${online}">
			<classpath>
				<path refid="javadoc.classpath" />
			</classpath>
			<doctitle>
				<![CDATA[<h1>Anyframe Java Core - Online API ${online}</h1>]]>
			</doctitle>
			<bottom>
				<![CDATA[<i>Copyright &#169; 2012, www.anyframejava.org, All Rights Reserved.</i>]]>
			</bottom>
			<tag name="todo" scope="all" description="TODO:" />
			<group title="Anyframe" packages="com.anyframe.*" />
			<link href="http://docs.oracle.com/javase/1.5.0/docs/api/" />
			<link href="http://static.springsource.org/spring/docs/3.1.x/javadoc-api/" />
		</javadoc>
		<delete dir="${build}/temp/service" />
	</target>

	<target name="default" depends="init, make.bin, make.ide, make.repo, make.licenses, javadoc, zip" />

</project>