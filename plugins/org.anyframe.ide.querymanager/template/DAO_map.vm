/**
 * Copyright (C) 2012 Original Author(s), Ltd. All rights reserved.
 *
 * DAO Class: ${daoClassName}
 * This is a data access object class for a Table ${tableName}
 *
 */
#if (${daoPackage} == "")

#else
package ${daoPackage};
#end

import java.util.Map;

import anyframe.common.Page;
import anyframe.core.query.AbstractDAO;

/**
 * @author [write down the name of an author(s)]
 *
 */
public class ${daoClassName} extends AbstractDAO {
    /**
     * This inserts values into a Table in the database.
     *
     * @param 
     * @throws Exception
     */
    public void create(Map map) throws Exception {
        create("$!rawId", map);
    }
    
    /**
     * This reads values from a Table in the database by key
     * and returns it as a Map.
     *
     * @param 
     * @return Map
     * @throws Exception
     */
    public Map find(Map map) throws Exception {
        return (Map) findByPk("$!rawId", map);
    }
    
    /**
     * This reads values from a Table in the database
     * and returns it as a Page.
     *
     * @param
     * @return Page
     * @throws Exception
     */
    public Page findList(Map map, int pageIndex, int pageSize,
            int pageUnit) throws Exception {
        return findListWithPaging("$!rawId", map, pageIndex, pageSize,
                pageUnit);
    }
    
    /**
     * This updates values on a Table in the database.
     *
     * @param 
     * @return
     * @throws Exception
     */
    public void update(Map map) throws Exception {
        update("$!rawId", map);
    }
    
    /**
     * This removes values from a Table in the database.
     *
     * @param 
     * @return
     * @throws Exception
     */
    public void remove(Map map) throws Exception {
        remove("$!rawId", map);
    }
    
}
