<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">
#set($keyMap = {}) ## PK Map 선언
#set($keyList =[]) ## PK List 선언
#set($listMap = {}) ## 일반 Column List 선언
#foreach($list in $domain.columns)
#set($dummy = $listMap.put($list.columnName, $list.fieldName))
#if($list.isKey)
	#set($dummy = $keyList.add($list.columnName))
	#set($dummy = $keyMap.put($list.columnName, $list.fieldName))
#end
#end
#set($sharp="#") ## '#'을 표시하기 위한 것입니다.
<sqlMap namespace="${domain.name}">

	<typeAlias alias="${domain.name}" type="${domain.packageName}.${domain.name}" />
	<resultMap id="${domain.name.substring(0,1).toLowerCase()}${domain.name.substring(1)}Result" class="${domain.name}"> 
#**##foreach($key in $keyList)
       	<result property="${keyMap.get($key)}" column="${key}" />
#**##end
#**##foreach($columnlist in $domain.columns)
#******##if(!$columnlist.isKey)
#****#		<result property="${listMap.get($columnlist.columnName)}" column="${columnlist.columnName}" />
#******##end
#**##end
	</resultMap>


	<insert id="insert${domain.name}" parameterClass="${domain.name}">
		INSERT INTO ${domain.table}
		(#foreach($columnlist in $domain.columns)${columnlist.columnName}#if($velocityHasNext), #end#end) 
		VALUES (#foreach($columnlist in $domain.columns)#${columnlist.fieldName}$sharp#if($velocityHasNext), #end#end)
    </insert>

	<update id="update${domain.name}" parameterClass="${domain.name}">
    UPDATE ${domain.table} SET
    	#foreach($columnlist in $domain.columns)#if(!$columnlist.isKey)${columnlist.columnName} = #${listMap.get($columnlist.columnName)}$sharp#if($velocityHasNext), #end#end#end
	
		WHERE #foreach($key in $keyList)$key = #${keyMap.get($key)}$sharp#if($key) AND #end#end
	
	</update>
	
	<delete id="delete${domain.name}" parameterClass="${domain.name}">
		DELETE FROM ${domain.table} WHERE #foreach($key in $keyList)$key = #${keyMap.get($key)}$sharp#if($velocityHasNext) AND #end#end  ##주석 columnFieldOnlyIdWONestedMap.get(columnName) -> listMap.get()
    </delete>		
	
	<select id="get${domain.name}" parameterClass="${domain.name}" resultMap="${domain.name.substring(0,1).toLowerCase()}${domain.name.substring(1)}Result">
		SELECT #foreach($columnlist in $domain.columns)${columnlist.columnName}#if($velocityHasNext), #end#end
		FROM ${domain.table}
		WHERE #foreach($key in $keyList)$key = #${keyMap.get($key)}$sharp#if($velocityHasNext) AND #end#end ##주석 columnFieldOnlyIdWONestedMap.get(columnName) -> listMap.get()
    </select>
    
	<select id="get${domain.name}List" resultMap="${domain.name.substring(0,1).toLowerCase()}${domain.name.substring(1)}Result">
		SELECT  #foreach($columnlist in $domain.columns)${columnlist.columnName}#if($velocityHasNext), #end#end
		FROM ${domain.table}
	</select>    
    
	<select id="get${domain.name}ListCnt" resultClass="int">
		SELECT count(*)
		FROM ${domain.table}
	</select>
	
</sqlMap>	

