<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
<!--hibernate dialect here -->
<!--hibernate dialect-START-->
                <prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
<!--hibernate dialect-END-->
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.use_sql_comments">false</prop>
<!-- jdbc.batch_size will direct hibernate to use jdbc2 API for batch updates -->
<!-- One of the more advanced features of JDBC 2.0 is the ability to submit multiple update statements to the database for processing as a single unit -->
                <prop key="hibernate.jdbc.batch_size">5</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
            </props>
        </property>
        <property name="annotatedClasses">
            <list>
<!-- Add new Entities here -->
            #if ($daoFramework &amp;&amp; $daoFramework.equals("hibernate")) 
            <value>${appPackage}.domain.Users</value>#end</list>
        </property>
        <property name="packagesToScan">
            <list>
<!-- Add new Packages to scan here -->
            </list>
        </property>
    </bean>
    <bean id="dynamicHibernateService" class="anyframe.core.hibernate.impl.DynamicHibernateService">
        <property name="sessionFactory" ref="sessionFactory" />
        <property name="fileNames">
            <list>
<!-- Add new file name here -->
            #if ($daoFramework &amp;&amp; $daoFramework.equals("hibernate")) 
            <value>classpath:hibernate/dynamic/dynamic-hibernate-users.xml</value>#end</list>
        </property>
    </bean>
</beans>
